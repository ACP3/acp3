image: php:7.1

variables:
  COMPOSER_HOME: .composerhome
  COMPOSER_ALLOW_SUPERUSER: 1

cache:
  key: $CI_COMMIT_REF_NAME
  paths:
  - ${COMPOSER_HOME}
  - vendor

before_script:
  - bash ./build/gitlab/before_script.sh > /dev/null

stages:
  - test
  - split
  - deploy
  - post_deploy

test:php71-unit: &php-unit-base
  stage: test
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
    - bash ./build/gitlab/before_script_php.sh > /dev/null
  script:
    - php composer.phar install -n -o
    - phpdbg -qrr ./vendor/bin/phpunit -c ./tests/phpunit.dist.xml --coverage-text --colors=never
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'

test:php72-unit:
  <<: *php-unit-base
  image: php:7.2
  coverage: ~

test:phpcs:
  stage: test
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
    - bash ./build/gitlab/before_script_php.sh > /dev/null
  script:
    - php composer.phar install -n -o
    - php composer.phar run-script lint

test:eslint:
  image: node:slim
  stage: test
  cache:
    key: node-$CI_COMMIT_REF_NAME
    paths:
    - node_modules
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
  script:
    - npm install
    - npm run-script eslint

split:
  image: jderusse/gitsplit
  stage: split
  cache:
    key: "$CI_JOB_NAME/$CI_COMMIT_REF_NAME"
    paths:
      - .gitsplit-cache
  variables:
    GIT_STRATEGY: clone
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - ssh-add -l
  script:
    - git config remote.origin.fetch "+refs/*:refs/*"
    - git config remote.origin.mirror true
    - git fetch
    - gitsplit
    - bash ./build/gitlab/notify_packagist.sh
#  only:
#    - tags

deploy:generate-artifact:
  stage: deploy
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
    - bash ./build/gitlab/before_script_php.sh > /dev/null
  script:
    - php composer.phar install --no-dev --prefer-dist -o -n --ignore-platform-reqs
  artifacts:
    name: "release-${CI_COMMIT_TAG}"
    paths:
      - ACP3
      - build/gulp
      - designs
      - installation
      - tests
      - uploads
      - vendor
      - .editorconfig
      - .htaccess.sample
      - CHANGELOG.md
      - composer.json
      - composer.lock
      - gulpfile.js
      - index.php
      - LICENSE
      - package.json
      - package-lock.json
      - README.md
  only:
    - tags

post-deploy:update-version-check:
  stage: post_deploy
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
  script:
    - bash ./build/gitlab/update_version_check.sh
  only:
    - tags

post-deploy:apidocs:
  stage: post_deploy
  before_script:
    - bash ./build/gitlab/before_script.sh > /dev/null
    - bash ./build/gitlab/before_script_php.sh > /dev/null
  script:
    - bash ./build/gitlab/generate_api_docs.sh
  only:
    - tags
