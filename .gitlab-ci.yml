include:
  - template: Code-Quality.gitlab-ci.yml
#  - template: SAST.gitlab-ci.yml

variables:
  COMPOSER_HOME: .composerhome
  COMPOSER_ALLOW_SUPERUSER: 1
  npm_config_cache: .npmhome
  SAST_EXCLUDED_PATHS: "tests,node_modules,vendor,./**/*.min.js"
  SAST_GOSEC_LEVEL: 2
  SAST_DISABLE_BABEL: "true"

stages:
  - build
  - test
  - release
  - trigger

build:composer:
  image: composer:1
  stage: build
  cache:
    key: $CI_JOB_NAME
    paths:
      - ${COMPOSER_HOME}
      - vendor
  script:
    - composer install -n --prefer-dist --ignore-platform-reqs
  artifacts:
    paths:
      - vendor
  only:
    changes:
      - "**/*.php"
      - composer.json
      - composer.lock
      - tests/phpunit.dist.xml
      - phpstan.neon.dist
      - .php_cs.dist
      - .gitlab-ci.yml

build:npm:
  image: node:lts-alpine
  stage: build
  cache:
    key: $CI_JOB_NAME
    paths:
      - ${npm_config_cache}
  before_script:
    - apk update && apk add --no-cache git
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules
  only:
    changes:
      - "ACP3/**/*.js"
      - "design/**/*.js"
      - "installation/**/*.js"
      - package.json
      - package-lock.json
      - .eslintignore
      - .eslintrc.json
      - .gitlab-ci.yml

test:php72-unit:
  image: registry.gitlab.com/acp3/php-docker:7.2
  stage: test
  cache:
    key: $CI_JOB_NAME
    paths:
      - tests/.phpunit.result.cache
  script:
    - phpdbg -qrr ./vendor/bin/phpunit -c ./tests/phpunit.dist.xml --coverage-text --colors=never --log-junit junit-report.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  needs:
    - build:composer
  artifacts:
    paths:
      - junit-report.xml
    reports:
      junit: junit-report.xml
  only:
    changes:
      - "**/*.php"
      - composer.json
      - composer.lock
      - tests/phpunit.dist.xml
      - .gitlab-ci.yml

test:php73-unit:
  extends: test:php72-unit
  image: registry.gitlab.com/acp3/php-docker:7.3
  coverage: ~

test:php74-unit:
  extends: test:php72-unit
  image: registry.gitlab.com/acp3/php-docker:7.4
  coverage: ~

test:php-cs-fixer:
  image: registry.gitlab.com/acp3/php-docker:7.2
  stage: test
  cache:
    key: $CI_JOB_NAME
    paths:
      - .php_cs.cache
  script:
    - composer run-script lint
  needs:
    - build:composer
  only:
    changes:
      - "**/*.php"
      - composer.json
      - composer.lock
      - .php_cs.dist
      - .gitlab-ci.yml

test:phpstan:
  image: registry.gitlab.com/acp3/php-docker:7.2
  stage: test
  cache:
    key: $CI_JOB_NAME
    paths:
      - .phpstan-cache
  script:
    - php -d memory_limit=-1 vendor/bin/phpstan analyse --no-progress
  needs:
    - build:composer
  only:
    changes:
      - "**/*.php"
      - composer.json
      - composer.lock
      - phpstan.neon.dist
      - .gitlab-ci.yml

test:csslint:
  image: node:lts-alpine
  stage: test
  cache:
    key: $CI_JOB_NAME
    paths:
      - .stylelintcache
  script:
    - npm run-script css-lint
  needs:
    - build:npm
  only:
    changes:
      - "ACP3/**/*.{css,less,scss}"
      - "design/**/*.{css,less,scss}"
      - "installation/**/*.{css,less,scss}"
      - package.json
      - package-lock.json
      - .stylelintignore
      - .stylelintrc
      - .gitlab-ci.yml

test:prettier:
  image: node:lts-alpine
  stage: test
  script:
    - npm run-script prettier
  needs:
    - build:npm
  only:
    changes:
      - "ACP3/**/*.{css,js,less,scss}"
      - "design/**/*.{css,js,less,scss}"
      - "installation/**/*.{css,js,less,scss}"
      - package.json
      - package-lock.json
      - .prettierignore
      - .prettierrc.json
      - .gitlab-ci.yml

test:eslint:
  image: node:lts-alpine
  stage: test
  script:
    - npm run-script eslint
  needs:
    - build:npm
  only:
    changes:
      - "ACP3/**/*.js"
      - "design/**/*.js"
      - "installation/**/*.js"
      - package.json
      - package-lock.json
      - .eslintignore
      - .eslintrc.json
      - .gitlab-ci.yml

release:subtree-split:
  image: jderusse/gitsplit
  stage: release
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .gitsplit-cache
  variables:
    GIT_STRATEGY: clone
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - ssh-add -l
  script:
    - git config remote.origin.fetch "+refs/*:refs/*"
    - git config remote.origin.mirror true
    - git fetch --prune --unshallow || git fetch --prune
    - gitsplit --ref "${CI_COMMIT_REF_NAME}"
  dependencies: []
  needs: []

release:generate-artifact:
  image: registry.gitlab.com/acp3/php-docker:7.2
  stage: release
  script:
    - composer install --no-dev --prefer-dist -o -n --ignore-platform-reqs
  artifacts:
    name: "release-${CI_COMMIT_TAG}"
    paths:
      - ACP3
      - bin
      - build/gulp
      - designs
      - installation
      - tests
      - uploads
      - vendor
      - .editorconfig
      - .htaccess.sample
      - CHANGELOG.md
      - composer.json
      - composer.lock
      - gulpfile.js
      - index.php
      - LICENSE
      - package.json
      - package-lock.json
      - README.md
  only:
    - tags
  needs:
    - build:composer
    - test:php72-unit
    - test:php73-unit
    - test:php74-unit
    - test:php-cs-fixer
    - test:phpstan
    - test:eslint
  dependencies:
    - build:composer

trigger:update_check:
  stage: trigger
  trigger: ACP3/update-check
  variables:
    VERSION_NUMBER: $CI_COMMIT_TAG
  only:
    - tags
  needs:
    - release:generate-artifact
