{"version":3,"sources":["ACP3/Modules/ACP3/System/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/ajax-form.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/loading-layer.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/form-validator.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ajax-form.js"],"names":["_$utils_4","defaultSettings","constructorOptions","dataAttributeOptions","mergedSettings","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","arr","Array","isArray","i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","return","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","TypeError","key","keyStripped","string","replace","charAt","toLowerCase","___arrayLikeToArray_1","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_classPrivateFieldLooseBase","receiver","privateKey","hasOwnProperty","id","_classPrivateFieldLooseKey","_loadingLayer","_formValidator","_defaults","_settings","_init","_findSubmitButton","_prepareFormData","_handleResponseError","_handleSuccessfulResponse","_addLoadingLayer","_disableSubmitButton","_enableSubmitButton","_decodeResponse","_redirectToNewPage","_scrollIntoView","_replaceContent","_rebindHandlers","AjaxForm","element","loadingLayer","formValidator","options","instance","Constructor","_rebindHandlers2","_replaceContent2","_scrollIntoView2","_redirectToNewPage2","_decodeResponse2","_enableSubmitButton2","_disableSubmitButton2","_addLoadingLayer2","_handleSuccessfulResponse2","_handleResponseError2","_prepareFormData2","_findSubmitButton2","_init2","completeCallback","targetElement","loadingOverlay","customFormData","method","isFormValid","mergeSettings","jQuery","data","protoProps","_performAjaxRequest","regeneratorRuntime","mark","_callee","$form","hash","$submitButton","_classPrivateFieldLoo","_classPrivateFieldLoo2","response","wrap","_context","prev","attr","showLoadingLayer","toUpperCase","fetch","body","headers","X-Requested-With","sent","ok","t0","catch","console","hideLoadingLayer","finish","stop","_$ajaxForm_1","_decodeResponse3","_handleSuccessfulResponse3","_handleResponseError3","_ref2","_ref","_this","that","noValidate","on","_callee2","e","_context2","preventDefault","setFormAsValid","document","trigger","preValidateForm","performAjaxRequest","_x","_callee3","_context3","prop","_x2","checkFormElementsForErrors","find","click","closest","removeAttr","initialData","FormData","append","_callee4","responseData","_context4","clone","text","status","handleFormErrorMessages","open","write","close","_x3","_x4","_callee5","_context5","window","redirect_url","location","_x5","_x6","_x7","addLoadingLayer","_callee6","_context6","json","abrupt","_x8","href","reload","_this2","setTimeout","querySelector","concat","scrollTo","top","getBoundingClientRect","y","behavior","offsetTop","scrollTop","html","formSubmit","___defineProperties_3","___classPrivateFieldLooseBase_3","__id_3","___classPrivateFieldLooseKey_3","_options","_toggleLoadingLayer","LoadingLayer","_toggleLoadingLayer2","loadingText","getElementById","$body","loadingLayerIcon","appendTo","_$loadingLayer_3","show","_document$getElementB","classList","toggle","___arrayLikeToArray_2","___defineProperties_2","___classPrivateFieldLooseBase_2","__id_2","___classPrivateFieldLooseKey_2","_isFormValid","___defaults_2","___settings_2","_formElement","_removeAllPreviousErrors","_addErrorDecorationToFormGroup","_removeErrorMessageFromFormField","_addErrorMessageToFormField","_focusTabWithFirstErrorMessage","_prettyPrintResponseErrorMessages","_scrollToFirstFormError","_isElementInViewport","FormValidator","formElement","_isElementInViewport2","_scrollToFirstFormError2","_prettyPrintResponseErrorMessages2","_focusTabWithFirstErrorMessage2","_addErrorMessageToFormField2","_removeErrorMessageFromFormField2","_addErrorDecorationToFormGroup2","_removeAllPreviousErrors2","scrollOffsetElement","_step","_iterator","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","_createForOfIteratorHelper","elements","field","nodeName","checkValidity","validationMessage","get","errorMessagesHtml","$errorBox","$modalBody","remove","hide","prependTo","is","fadeIn","_$formValidator_2","$","removeClass","elem","_elem$closest","add","_elem$closest2","elementContainingValidationErrors","parentElement","removeChild","$element","errorMessage","jsSvgIcons","validationFailedIcon","$elem","tabId","tab","focus","each","index","$this","errorClass","filter","$formErrors","offset","$scrollOffsetElement","height","rect","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth"],"mappings":"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","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      mergedSettings[keyStripped] = value;\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class AjaxForm {\n  #loadingLayer;\n  #formValidator;\n  #defaults = {\n    completeCallback: null,\n    targetElement: \"#content\",\n    loadingOverlay: true,\n    customFormData: null,\n    method: null,\n  };\n  #settings;\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {LoadingLayer} loadingLayer\n   * @param {FormValidator} formValidator\n   * @param {object} options\n   */\n  constructor(element, loadingLayer, formValidator, options) {\n    this.element = element;\n    this.isFormValid = true;\n\n    this.#loadingLayer = loadingLayer;\n    this.#formValidator = formValidator;\n\n    this.#settings = mergeSettings(this.#defaults, options, jQuery(element).data());\n    this.#init();\n  }\n\n  #init() {\n    const that = this;\n\n    this.#findSubmitButton();\n    this.#addLoadingLayer();\n    this.element.noValidate = true;\n\n    jQuery(this.element)\n      .on(\"submit\", async (e) => {\n        e.preventDefault();\n\n        this.#formValidator.setFormAsValid();\n\n        jQuery(document).trigger(\"acp3.ajaxFrom.submit.before\", [this]);\n\n        if (this.#formValidator.isFormValid && this.#formValidator.preValidateForm()) {\n          await this.performAjaxRequest();\n        }\n      })\n      .on(\"click\", async function (e) {\n        if (jQuery(this).prop(\"tagName\") === \"A\") {\n          e.preventDefault();\n\n          await that.performAjaxRequest();\n        }\n      })\n      .on(\"change\", () => {\n        if (this.#formValidator.isFormValid === false) {\n          this.#formValidator.checkFormElementsForErrors();\n        }\n      });\n  }\n\n  #findSubmitButton() {\n    jQuery(this.element)\n      .find(\":submit\")\n      .click(function () {\n        jQuery(\":submit\", jQuery(this).closest(\"form\")).removeAttr(\"data-clicked\");\n        jQuery(this).attr(\"data-clicked\", \"true\");\n      });\n  }\n\n  async performAjaxRequest() {\n    const $form = jQuery(this.element);\n\n    let hash, $submitButton;\n\n    if ($form.attr(\"method\")) {\n      $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      hash = $submitButton.data(\"hashChange\");\n    } else {\n      hash = $form.data(\"hashChange\");\n    }\n\n    this.#loadingLayer.showLoadingLayer();\n    this.#disableSubmitButton($submitButton);\n\n    try {\n      const method = $form.attr(\"method\")\n        ? $form.attr(\"method\").toUpperCase()\n        : this.#settings.method?.toUpperCase() ?? \"GET\";\n\n      const response = await fetch($form.attr(\"action\") || $form.attr(\"href\"), {\n        method: method,\n        body: method !== \"GET\" ? this.#prepareFormData($form) : null,\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (!response.ok) {\n        await this.#handleResponseError(response, $form);\n      } else {\n        await this.#handleSuccessfulResponse(response, $form, hash);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.#loadingLayer.hideLoadingLayer();\n      this.#enableSubmitButton($submitButton);\n    }\n  }\n\n  /**\n   *\n   * @param {jQuery} $form\n   * @returns {FormData}\n   */\n  #prepareFormData($form) {\n    const initialData = this.#settings.customFormData || {};\n    let data;\n\n    if ($form.attr(\"method\")) {\n      const $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      data = new FormData($form[0]);\n\n      if ($submitButton.length) {\n        data.append($submitButton.attr(\"name\"), \"1\");\n      }\n    } else {\n      data = new FormData();\n    }\n\n    for (let [key, value] of Object.entries(initialData)) {\n      data.append(key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @returns {Promise<void>}\n   */\n  async #handleResponseError(response, $form) {\n    const responseData = await response.clone().text();\n\n    if (response.status === 400) {\n      this.#formValidator.handleFormErrorMessages($form, responseData);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.submit.fail\", [this]);\n    } else if (responseData.length > 0) {\n      document.open();\n      document.write(responseData);\n      document.close();\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @param {string} hash\n   * @returns {Promise<void>}\n   */\n  async #handleSuccessfulResponse(response, $form, hash) {\n    const responseData = await this.#decodeResponse(response);\n\n    if (typeof window[this.#settings.completeCallback] === \"function\") {\n      window[this.#settings.completeCallback](responseData);\n    } else if (responseData.redirect_url) {\n      this.#redirectToNewPage(hash, responseData);\n    } else {\n      this.#replaceContent(hash, responseData);\n      this.#rebindHandlers(hash);\n      this.#scrollIntoView(hash);\n\n      if (hash !== undefined) {\n        window.location.hash = hash;\n      }\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.complete\");\n    }\n  }\n\n  #addLoadingLayer() {\n    if (this.#settings.loadingOverlay === false) {\n      return;\n    }\n\n    this.#loadingLayer.addLoadingLayer();\n  }\n\n  #disableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", true);\n    }\n  }\n\n  #enableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", false);\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @returns {Promise<*>}\n   */\n  async #decodeResponse(response) {\n    try {\n      return await response.clone().json();\n    } catch (error) {\n      return await response.clone().text();\n    }\n  }\n\n  #redirectToNewPage(hash, responseData) {\n    if (hash !== undefined) {\n      window.location.href = responseData.redirect_url + hash;\n      window.location.reload();\n    } else {\n      window.location.href = responseData.redirect_url;\n    }\n  }\n\n  #scrollIntoView(hash) {\n    setTimeout(() => {\n      if (hash) {\n        const targetElement = document.querySelector(`[data-hash-change=\"${hash}\"]`);\n\n        window.scrollTo({ top: targetElement.getBoundingClientRect().y, behavior: \"smooth\" });\n      } else {\n        const targetElement = document.querySelector(this.#settings.targetElement);\n        const offsetTop = targetElement.getBoundingClientRect().y;\n\n        if (jQuery(document).scrollTop() > offsetTop) {\n          window.scrollTo({ top: offsetTop, behavior: \"smooth\" });\n        }\n      }\n    });\n  }\n\n  #replaceContent(hash, responseData) {\n    if (hash && jQuery(hash).length) {\n      jQuery(hash).html(jQuery(responseData).find(hash).html());\n    } else {\n      jQuery(this.#settings.targetElement).html(responseData);\n    }\n  }\n\n  #rebindHandlers(hash) {\n    const $bindingTarget = hash && jQuery(hash).length ? jQuery(hash) : jQuery(this.#settings.targetElement);\n\n    $bindingTarget.find('[data-ajax-form=\"true\"]').formSubmit();\n\n    this.#findSubmitButton();\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class LoadingLayer {\n  #options = {\n    loadingText: \"\",\n  };\n\n  constructor(element, options) {\n    this.#options = mergeSettings(this.#options, options, jQuery(element).data() || {});\n  }\n\n  addLoadingLayer() {\n    if (!document.getElementById(\"loading-layer\")) {\n      const $body = jQuery(\"body\");\n      const jsSvgIcons = $body.data(\"svgIcons\");\n      const html =\n        '<div id=\"loading-layer\" class=\"loading-layer\"><h1><svg class=\"svg-icon svg-icon__spinner svg-icon--spin\" fill=\"currentColor\"><use xlink:href=\"' +\n        jsSvgIcons[\"loadingLayerIcon\"] +\n        '\"></use></svg> ' +\n        this.#options.loadingText +\n        \"</h1></div>\";\n\n      jQuery(html).appendTo($body);\n    }\n  }\n\n  showLoadingLayer() {\n    this.#toggleLoadingLayer(true);\n  }\n\n  hideLoadingLayer() {\n    this.#toggleLoadingLayer(false);\n  }\n\n  #toggleLoadingLayer(show) {\n    document.getElementById(\"loading-layer\")?.classList.toggle(\"loading-layer__active\", show);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class FormValidator {\n  #isFormValid = true;\n  #defaults = {\n    scrollOffsetElement: null,\n  };\n  #settings;\n  #formElement;\n\n  constructor(formElement, options) {\n    this.#settings = mergeSettings(this.#defaults, options, jQuery(formElement).data());\n    this.#formElement = formElement;\n  }\n\n  preValidateForm() {\n    this.checkFormElementsForErrors();\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n\n    return this.#isFormValid;\n  }\n\n  checkFormElementsForErrors() {\n    this.#removeAllPreviousErrors();\n\n    for (const field of this.#formElement.elements) {\n      if (field.nodeName !== \"INPUT\" && field.nodeName !== \"TEXTAREA\" && field.nodeName !== \"SELECT\") {\n        continue;\n      }\n\n      if (!field.checkValidity()) {\n        this.#addErrorDecorationToFormGroup(field);\n        this.#addErrorMessageToFormField(jQuery(field), field.validationMessage);\n\n        this.#isFormValid = false;\n      }\n    }\n  }\n\n  #removeAllPreviousErrors() {\n    const $form = jQuery(this.#formElement);\n\n    $form.find(\".form-group.has-error\").removeClass(\"has-error\");\n    $form.find(\".validation-failed\").remove();\n  }\n\n  /**\n   *\n   * @param {HTMLElement} elem\n   */\n  #addErrorDecorationToFormGroup(elem) {\n    elem.closest(\".form-group\")?.classList.add(\"has-error\");\n  }\n\n  /**\n   *\n   * @param {HTMLElement} elem\n   */\n  #removeErrorMessageFromFormField(elem) {\n    const elementContainingValidationErrors = elem.closest(\"div\")?.querySelector(\".validation-failed\");\n\n    elementContainingValidationErrors?.parentElement.removeChild(elementContainingValidationErrors);\n  }\n\n  #addErrorMessageToFormField($element, errorMessage) {\n    this.#removeErrorMessageFromFormField($element[0]);\n\n    const $body = jQuery(\"body\");\n    const jsSvgIcons = $body.data(\"svgIcons\");\n\n    $element\n      .closest(\"div:not(.input-group):not(.btn-group)\")\n      .append(\n        `<small class=\"help-block validation-failed\"><svg class=\"svg-icon svg-icon__exclamation-circle\" fill=\"currentColor\"><use xlink:href=\"${jsSvgIcons[\"validationFailedIcon\"]}\"></use></svg> ${errorMessage}</small>`\n      );\n  }\n\n  #focusTabWithFirstErrorMessage() {\n    if (jQuery(\".tabbable\").length > 0) {\n      const $elem = jQuery(\".tabbable .form-group.has-error:first\");\n      const tabId = $elem.closest(\".tab-pane\").prop(\"id\");\n\n      jQuery('.tabbable .nav-tabs a[href=\"#' + tabId + '\"]').tab(\"show\");\n\n      $elem.find(\":input\").focus();\n    }\n  }\n\n  get isFormValid() {\n    return this.#isFormValid;\n  }\n\n  setFormAsValid() {\n    this.#isFormValid = true;\n  }\n\n  handleFormErrorMessages($form, errorMessagesHtml) {\n    let $errorBox = jQuery(\"#error-box\");\n    const $modalBody = $form.find(\".modal-body\");\n\n    $errorBox.remove();\n\n    // Place the error messages inside the modal body for a better styling\n    $errorBox = jQuery(errorMessagesHtml);\n\n    $errorBox\n      .hide()\n      .prependTo($modalBody.length > 0 && $modalBody.is(\":visible\") ? $modalBody : $form)\n      .fadeIn();\n\n    this.#prettyPrintResponseErrorMessages($form, $errorBox);\n  }\n\n  #prettyPrintResponseErrorMessages($form, $errorBox) {\n    this.#removeAllPreviousErrors();\n\n    // highlight all input fields where the validation has failed\n    $errorBox.find(\"li\").each((index, element) => {\n      let $this = jQuery(element),\n        errorClass = $this.data(\"error\");\n\n      if (errorClass.length > 0) {\n        let $elem =\n          $form.find(\"#\" + errorClass) || $form.find('[id|=\"' + errorClass + '\"]').filter(':not([id$=\"container\"])');\n\n        if ($elem.length > 0) {\n          this.#addErrorDecorationToFormGroup($elem[0]);\n\n          // Move the error message to the responsible input field(s)\n          // and remove the list item from the error box container\n          if ($elem.length === 1) {\n            this.#addErrorMessageToFormField($elem, $this.html());\n            $this.remove();\n          }\n        }\n      }\n    });\n\n    // if all list items have been removed, remove the error box container too\n    if ($errorBox.find(\"li\").length === 0) {\n      $errorBox.remove();\n    }\n\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n  }\n\n  #scrollToFirstFormError() {\n    const $form = jQuery(this.#formElement);\n    const $formErrors = $form.find(\".form-group.has-error\");\n\n    if ($form.closest(\".modal\").length > 0) {\n      return;\n    }\n\n    if (!$formErrors || $formErrors.length === 0) {\n      return;\n    }\n\n    if (this.#isElementInViewport($form.find(\".help-block.validation-failed\"))) {\n      return;\n    }\n\n    let offsetTop = $formErrors.offset().top;\n\n    if (this.#settings.scrollOffsetElement) {\n      const $scrollOffsetElement = jQuery(this.#settings.scrollOffsetElement);\n\n      if ($scrollOffsetElement && $scrollOffsetElement.length > 0) {\n        offsetTop -= $scrollOffsetElement.height();\n      }\n    }\n\n    window.scrollTo({ top: offsetTop, behavior: \"smooth\" });\n  }\n\n  #isElementInViewport(element) {\n    // special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && element instanceof jQuery) {\n      element = element[0];\n    }\n\n    const $scrollOffsetElement = jQuery(this.#settings.scrollOffsetElement);\n    let offsetTop = 0;\n\n    if ($scrollOffsetElement) {\n      offsetTop = $scrollOffsetElement.height();\n    }\n\n    const rect = element.getBoundingClientRect();\n\n    return (\n      rect.top >= offsetTop &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { AjaxForm } from \"../lib/ajax-form\";\nimport { LoadingLayer } from \"../lib/loading-layer\";\nimport { FormValidator } from \"../lib/form-validator\";\n\n(($) => {\n  const pluginName = \"formSubmit\";\n\n  $.fn[pluginName] = function (options) {\n    return this.each(function () {\n      if (!$.data(this, \"plugin_\" + pluginName)) {\n        $.data(\n          this,\n          \"plugin_\" + pluginName,\n          new AjaxForm(this, new LoadingLayer(this, options), new FormValidator(this, options), options)\n        );\n      }\n    });\n  };\n\n  $('[data-ajax-form=\"true\"]').formSubmit();\n\n  $(document).on(\"draw.dt\", (e) => {\n    $(e.target).find('[data-ajax-form=\"true\"]').formSubmit();\n  });\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,","file":"ajax-form.min.js"}