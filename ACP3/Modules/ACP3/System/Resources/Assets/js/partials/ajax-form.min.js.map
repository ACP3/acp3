{"version":3,"sources":["ACP3/Modules/ACP3/System/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/ajax-form.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/loading-layer.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/form-validator.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ajax-form.js"],"names":["_$utils_4","defaultSettings","constructorOptions","dataAttributeOptions","mergedSettings","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","arr","Array","isArray","i","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","push","value","err","return","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","key","keyStripped","string","replace","charAt","toLowerCase","___arrayLikeToArray_1","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_classPrivateFieldGet","receiver","privateMap","get","_classPrivateFieldSet","set","_loadingLayer","WeakMap","_formValidator","_defaults","_init","WeakSet","AjaxForm","element","loadingLayer","formValidator","options","instance","Constructor","add","targetElement","loadingOverlay","customFormData","scrollOffsetElement","method","isFormValid","settings","mergeSettings","jQuery","data","privateSet","has","_init2","protoProps","_decodeResponse","_handleSuccessfulResponse","_handleResponseError","_performAjaxRequest","find","click","closest","removeAttr","attr","regeneratorRuntime","mark","_callee","$form","hash","$submitButton","_this$settings$method","_this$settings$method2","response","wrap","_context","prev","showLoadingLayer","disableSubmitButton","toUpperCase","fetch","body","prepareFormData","headers","X-Requested-With","sent","ok","handleResponseError","handleSuccessfulResponse","t0","catch","console","hideLoadingLayer","enableSubmitButton","finish","stop","initialData","FormData","append","_callee2","responseData","_context2","clone","text","status","handleFormErrorMessages","document","trigger","open","write","close","_x","_x2","_callee3","callback","_context3","decodeResponse","window","redirect_url","redirectToNewPage","scrollIntoView","replaceContent","rebindHandlers","location","_x3","_x4","_x5","addLoadingLayer","prop","_callee4","_context4","json","abrupt","_x6","href","reload","offsetTop","offset","top","scrollTop","animate","html","formSubmit","findSubmitButton","_$ajaxForm_1","_this","that","noValidate","on","e","preventDefault","setFormAsValid","preValidateForm","performAjaxRequest","removeAllPreviousErrors","checkFormElementsForErrors","___defineProperties_3","_classPrivateMethodGet","___classPrivateFieldGet_3","_options","_toggleLoadingLayer","LoadingLayer","loadingText","getElementById","$body","appendTo","_toggleLoadingLayer2","_$loadingLayer_3","show","_document$getElementB","classList","toggle","FormValidator","_isElementInViewport","_scrollToFirstFormError","_prettyPrintResponseErrorMessages","_focusTabWithFirstErrorMessage","_addErrorMessageToFormField","_removeErrorMessageFromFormField","_addErrorDecorationToFormGroup","_isFormValid","form","___classPrivateMethodGet_2","_focusTabWithFirstErrorMessage2","_scrollToFirstFormError2","___classPrivateFieldGet_2","removeClass","remove","_step","_iterator","_createForOfIteratorHelper","elements","s","field","nodeName","checkValidity","_addErrorDecorationToFormGroup2","_addErrorMessageToFormField2","validationMessage","___classPrivateFieldSet_2","f","errorMessagesHtml","$errorBox","$modalBody","hide","prependTo","is","fadeIn","_prettyPrintResponseErrorMessages2","___defineProperties_2","_$formValidator_2","$","$elem","addClass","_removeErrorMessageFromFormField2","$element","errorMessage","tabId","tab","focus","each","index","$this","errorClass","filter","$formErrors","_isElementInViewport2","$scrollOffsetElement","height","rect","getBoundingClientRect","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth"],"mappings":"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","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      mergedSettings[keyStripped] = value;\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class AjaxForm {\n  #loadingLayer;\n  #formValidator;\n  #defaults = {\n    targetElement: \"#content\",\n    loadingOverlay: true,\n    customFormData: null,\n    scrollOffsetElement: null,\n    method: null,\n  };\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {LoadingLayer} loadingLayer\n   * @param {FormValidator} formValidator\n   * @param {object} options\n   */\n  constructor(element, loadingLayer, formValidator, options) {\n    this.element = element;\n    this.isFormValid = true;\n\n    this.#loadingLayer = loadingLayer;\n    this.#formValidator = formValidator;\n\n    this.settings = mergeSettings(this.#defaults, options, jQuery(element).data());\n    this.#init();\n  }\n\n  #init() {\n    const that = this;\n\n    this.findSubmitButton();\n    this.addLoadingLayer();\n    this.element.noValidate = true;\n\n    jQuery(this.element)\n      .on(\"submit\", (e) => {\n        e.preventDefault();\n\n        this.#formValidator.setFormAsValid();\n\n        jQuery(document).trigger(\"acp3.ajaxFrom.submit.before\", [this]);\n\n        if (this.#formValidator.isFormValid && this.#formValidator.preValidateForm(this.element)) {\n          this.performAjaxRequest();\n        }\n      })\n      .on(\"click\", function (e) {\n        if (jQuery(this).prop(\"tagName\") === \"A\") {\n          e.preventDefault();\n\n          that.performAjaxRequest();\n        }\n      })\n      .on(\"change\", () => {\n        if (this.#formValidator.isFormValid === false) {\n          this.#formValidator.removeAllPreviousErrors();\n          this.#formValidator.checkFormElementsForErrors(this.element);\n        }\n      });\n  }\n\n  findSubmitButton() {\n    jQuery(this.element)\n      .find(\":submit\")\n      .click(function () {\n        jQuery(\":submit\", jQuery(this).closest(\"form\")).removeAttr(\"data-clicked\");\n        jQuery(this).attr(\"data-clicked\", \"true\");\n      });\n  }\n\n  async performAjaxRequest() {\n    const $form = jQuery(this.element);\n\n    let hash, $submitButton;\n\n    if ($form.attr(\"method\")) {\n      $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      hash = $submitButton.data(\"hashChange\");\n    } else {\n      hash = $form.data(\"hashChange\");\n    }\n\n    this.#loadingLayer.showLoadingLayer();\n    this.disableSubmitButton($submitButton);\n\n    try {\n      const method = $form.attr(\"method\")\n        ? $form.attr(\"method\").toUpperCase()\n        : this.settings.method?.toUpperCase() ?? \"GET\";\n      const response = await fetch($form.attr(\"action\") || $form.attr(\"href\"), {\n        method: method,\n        body: method !== \"GET\" ? this.prepareFormData($form) : null,\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (!response.ok) {\n        await this.handleResponseError(response, $form);\n      } else {\n        await this.handleSuccessfulResponse(response, $form, hash);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.#loadingLayer.hideLoadingLayer();\n      this.enableSubmitButton($submitButton);\n    }\n  }\n\n  /**\n   *\n   * @param {jQuery} $form\n   * @returns {FormData}\n   */\n  prepareFormData($form) {\n    const initialData = this.settings.customFormData || {};\n    let data;\n\n    if ($form.attr(\"method\")) {\n      const $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      data = new FormData($form[0]);\n\n      if ($submitButton.length) {\n        data.append($submitButton.attr(\"name\"), \"1\");\n      }\n    } else {\n      data = new FormData();\n    }\n\n    for (let [key, value] of Object.entries(initialData)) {\n      data.append(key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @returns {Promise<void>}\n   */\n  async handleResponseError(response, $form) {\n    const responseData = await response.clone().text();\n\n    if (response.status === 400) {\n      this.#formValidator.handleFormErrorMessages($form, responseData);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.submit.fail\", [this]);\n    } else if (responseData.length > 0) {\n      document.open();\n      document.write(responseData);\n      document.close();\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @param {string} hash\n   * @returns {Promise<void>}\n   */\n  async handleSuccessfulResponse(response, $form, hash) {\n    const responseData = await this.decodeResponse(response);\n\n    let callback = $form.data(\"ajax-form-complete-callback\");\n\n    if (typeof window[callback] === \"function\") {\n      window[callback](responseData);\n    } else if (responseData.redirect_url) {\n      this.redirectToNewPage(hash, responseData);\n    } else {\n      this.scrollIntoView();\n      this.replaceContent(hash, responseData);\n      this.rebindHandlers(hash);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.complete\");\n\n      if (typeof hash !== \"undefined\") {\n        window.location.hash = hash;\n      }\n    }\n  }\n\n  addLoadingLayer() {\n    if (this.settings.loadingOverlay === false) {\n      return;\n    }\n\n    this.#loadingLayer.addLoadingLayer();\n  }\n\n  disableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", true);\n    }\n  }\n\n  enableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", false);\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @returns {Promise<*>}\n   */\n  async decodeResponse(response) {\n    try {\n      return await response.clone().json();\n    } catch (error) {\n      return await response.clone().text();\n    }\n  }\n\n  redirectToNewPage(hash, responseData) {\n    if (typeof hash !== \"undefined\") {\n      window.location.href = responseData.redirect_url + hash;\n      window.location.reload();\n    } else {\n      window.location.href = responseData.redirect_url;\n    }\n  }\n\n  /**\n   * Scroll to the beginning of the content area, if the current viewport is near the bottom\n   */\n  scrollIntoView() {\n    const offsetTop = jQuery(this.settings.targetElement).offset().top;\n\n    if (jQuery(document).scrollTop() > offsetTop) {\n      jQuery(\"html, body\").animate(\n        {\n          scrollTop: offsetTop,\n        },\n        \"fast\"\n      );\n    }\n  }\n\n  replaceContent(hash, responseData) {\n    if (hash && jQuery(hash).length) {\n      jQuery(hash).html(jQuery(responseData).find(hash).html());\n    } else {\n      jQuery(this.settings.targetElement).html(responseData);\n    }\n  }\n\n  rebindHandlers(hash) {\n    const $bindingTarget = hash && jQuery(hash).length ? jQuery(hash) : jQuery(this.settings.targetElement);\n\n    $bindingTarget.find('[data-ajax-form=\"true\"]').formSubmit();\n\n    this.findSubmitButton();\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class LoadingLayer {\n  #options = {\n    loadingText: \"\",\n  };\n\n  constructor(element, options) {\n    this.#options = mergeSettings(this.#options, options, jQuery(element).data() || {});\n  }\n\n  addLoadingLayer() {\n    if (!document.getElementById(\"loading-layer\")) {\n      const $body = jQuery(\"body\"),\n        html =\n          '<div id=\"loading-layer\" class=\"loading-layer\"><h1><span class=\"fas fa-spinner fa-spin\"></span> ' +\n          this.#options.loadingText +\n          \"</h1></div>\";\n\n      jQuery(html).appendTo($body);\n    }\n  }\n\n  showLoadingLayer() {\n    this.#toggleLoadingLayer(true);\n  }\n\n  hideLoadingLayer() {\n    this.#toggleLoadingLayer(false);\n  }\n\n  #toggleLoadingLayer(show) {\n    document.getElementById(\"loading-layer\")?.classList.toggle(\"loading-layer__active\", show);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport class FormValidator {\n  #isFormValid = true;\n\n  preValidateForm(form) {\n    this.removeAllPreviousErrors();\n    this.checkFormElementsForErrors(form);\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n\n    return this.#isFormValid;\n  }\n\n  removeAllPreviousErrors() {\n    jQuery(\"form .form-group.has-error\").removeClass(\"has-error\").find(\".validation-failed\").remove();\n  }\n\n  checkFormElementsForErrors(form) {\n    for (const field of form.elements) {\n      if (field.nodeName !== \"INPUT\" && field.nodeName !== \"TEXTAREA\" && field.nodeName !== \"SELECT\") {\n        continue;\n      }\n\n      if (!field.checkValidity()) {\n        this.#addErrorDecorationToFormGroup(jQuery(field));\n        this.#addErrorMessageToFormField(jQuery(field), field.validationMessage);\n\n        this.#isFormValid = false;\n      }\n    }\n  }\n\n  #addErrorDecorationToFormGroup($elem) {\n    $elem.closest(\".form-group\").addClass(\"has-error\");\n  }\n\n  #removeErrorMessageFromFormField($elem) {\n    $elem.closest(\"div\").find(\".validation-failed\").remove();\n  }\n\n  #addErrorMessageToFormField($element, errorMessage) {\n    this.#removeErrorMessageFromFormField($element);\n\n    $element\n      .closest(\"div:not(.input-group):not(.btn-group)\")\n      .append(\n        '<small class=\"help-block validation-failed\"><i class=\"fas fa-exclamation-circle\"></i> ' +\n          errorMessage +\n          \"</small>\"\n      );\n  }\n\n  #focusTabWithFirstErrorMessage() {\n    if (jQuery(\".tabbable\").length > 0) {\n      let $elem = jQuery(\".tabbable .form-group.has-error:first\"),\n        tabId = $elem.closest(\".tab-pane\").prop(\"id\");\n      jQuery('.tabbable .nav-tabs a[href=\"#' + tabId + '\"]').tab(\"show\");\n\n      $elem.find(\":input\").focus();\n    }\n  }\n\n  get isFormValid() {\n    return this.#isFormValid;\n  }\n\n  setFormAsValid() {\n    this.#isFormValid = true;\n  }\n\n  handleFormErrorMessages($form, errorMessagesHtml) {\n    let $errorBox = jQuery(\"#error-box\");\n    const $modalBody = $form.find(\".modal-body\");\n\n    $errorBox.remove();\n\n    // Place the error messages inside the modal body for a better styling\n    $errorBox = jQuery(errorMessagesHtml);\n\n    $errorBox\n      .hide()\n      .prependTo($modalBody.length > 0 && $modalBody.is(\":visible\") ? $modalBody : $form)\n      .fadeIn();\n\n    this.#prettyPrintResponseErrorMessages($form, $errorBox);\n  }\n\n  #prettyPrintResponseErrorMessages($form, $errorBox) {\n    this.removeAllPreviousErrors();\n\n    // highlight all input fields where the validation has failed\n    $errorBox.find(\"li\").each((index, element) => {\n      let $this = jQuery(element),\n        errorClass = $this.data(\"error\");\n\n      if (errorClass.length > 0) {\n        let $elem =\n          $form.find(\"#\" + errorClass) || $form.find('[id|=\"' + errorClass + '\"]').filter(':not([id$=\"container\"])');\n\n        if ($elem.length > 0) {\n          this.#addErrorDecorationToFormGroup($elem);\n\n          // Move the error message to the responsible input field(s)\n          // and remove the list item from the error box container\n          if ($elem.length === 1) {\n            this.#addErrorMessageToFormField($elem, $this.html());\n            $this.remove();\n          }\n        }\n      }\n    });\n\n    // if all list items have been removed, remove the error box container too\n    if ($errorBox.find(\"li\").length === 0) {\n      $errorBox.remove();\n    }\n\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n  }\n\n  #scrollToFirstFormError() {\n    const $form = jQuery(this.element);\n    const $formErrors = $form.find(\".form-group.has-error\");\n\n    if ($form.closest(\".modal\").length > 0) {\n      return;\n    }\n\n    if (!$formErrors || $formErrors.length === 0) {\n      return;\n    }\n\n    if (this.#isElementInViewport($form.find(\".help-block.validation-failed\"))) {\n      return;\n    }\n\n    let offsetTop = $formErrors.offset().top;\n\n    if (this.settings.scrollOffsetElement) {\n      const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n\n      if ($scrollOffsetElement && $scrollOffsetElement.length > 0) {\n        offsetTop -= $scrollOffsetElement.height();\n      }\n    }\n\n    jQuery(\"html, body\").animate(\n      {\n        scrollTop: offsetTop,\n      },\n      \"fast\"\n    );\n  }\n\n  #isElementInViewport(element) {\n    // special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && element instanceof jQuery) {\n      element = element[0];\n    }\n\n    const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n    let offsetTop = 0;\n\n    if ($scrollOffsetElement) {\n      offsetTop = $scrollOffsetElement.height();\n    }\n\n    const rect = element.getBoundingClientRect();\n\n    return (\n      rect.top >= offsetTop &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { AjaxForm } from \"../lib/ajax-form\";\nimport { LoadingLayer } from \"../lib/loading-layer\";\nimport { FormValidator } from \"../lib/form-validator\";\n\n(($) => {\n  const pluginName = \"formSubmit\";\n\n  $.fn[pluginName] = function (options) {\n    return this.each(function () {\n      if (!$.data(this, \"plugin_\" + pluginName)) {\n        $.data(\n          this,\n          \"plugin_\" + pluginName,\n          new AjaxForm(this, new LoadingLayer(this, options), new FormValidator(), options)\n        );\n      }\n    });\n  };\n\n  $('[data-ajax-form=\"true\"]').formSubmit();\n\n  $(document).on(\"draw.dt\", (e) => {\n    $(e.target).find('[data-ajax-form=\"true\"]').formSubmit();\n  });\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,","file":"ajax-form.min.js"}