{"version":3,"sources":["ACP3/Modules/ACP3/System/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/ajax-form.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/loading-layer.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/form-validator.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ajax-form.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/node_modules/browser-pack-flat/_postlude"],"names":[],"mappings":"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","file":"ajax-form.min.js","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      mergedSettings[keyStripped] = value;\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class AjaxForm {\n  #loadingLayer;\n  #formValidator;\n  #defaults = {\n    targetElement: \"#content\",\n    loadingOverlay: true,\n    customFormData: null,\n    scrollOffsetElement: null,\n    method: null,\n  };\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {LoadingLayer} loadingLayer\n   * @param {FormValidator} formValidator\n   * @param {object} options\n   */\n  constructor(element, loadingLayer, formValidator, options) {\n    this.element = element;\n    this.isFormValid = true;\n\n    this.#loadingLayer = loadingLayer;\n    this.#formValidator = formValidator;\n\n    this.settings = mergeSettings(this.#defaults, options, jQuery(element).data());\n    this.#init();\n  }\n\n  #init() {\n    const that = this;\n\n    this.findSubmitButton();\n    this.addLoadingLayer();\n    this.element.noValidate = true;\n\n    jQuery(this.element)\n      .on(\"submit\", (e) => {\n        e.preventDefault();\n\n        this.#formValidator.setFormAsValid();\n\n        jQuery(document).trigger(\"acp3.ajaxFrom.submit.before\", [this]);\n\n        if (this.#formValidator.isFormValid && this.#formValidator.preValidateForm(this.element)) {\n          this.performAjaxRequest();\n        }\n      })\n      .on(\"click\", function (e) {\n        if (jQuery(this).prop(\"tagName\") === \"A\") {\n          e.preventDefault();\n\n          that.performAjaxRequest();\n        }\n      })\n      .on(\"change\", () => {\n        if (this.#formValidator.isFormValid === false) {\n          this.#formValidator.removeAllPreviousErrors();\n          this.#formValidator.checkFormElementsForErrors(this.element);\n        }\n      });\n  }\n\n  findSubmitButton() {\n    jQuery(this.element)\n      .find(\":submit\")\n      .click(function () {\n        jQuery(\":submit\", jQuery(this).closest(\"form\")).removeAttr(\"data-clicked\");\n        jQuery(this).attr(\"data-clicked\", \"true\");\n      });\n  }\n\n  async performAjaxRequest() {\n    const $form = jQuery(this.element);\n\n    let hash, $submitButton;\n\n    if ($form.attr(\"method\")) {\n      $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      hash = $submitButton.data(\"hashChange\");\n    } else {\n      hash = $form.data(\"hashChange\");\n    }\n\n    this.#loadingLayer.showLoadingLayer();\n    this.disableSubmitButton($submitButton);\n\n    try {\n      const response = await fetch($form.attr(\"action\") || $form.attr(\"href\"), {\n        method: $form.attr(\"method\")\n          ? $form.attr(\"method\").toUpperCase()\n          : this.settings.method?.toUpperCase() ?? \"GET\",\n        body: this.prepareFormData($form),\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (!response.ok) {\n        await this.handleResponseError(response, $form);\n      } else {\n        await this.handleSuccessfulResponse(response, $form, hash);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.#loadingLayer.hideLoadingLayer();\n      this.enableSubmitButton($submitButton);\n    }\n  }\n\n  /**\n   *\n   * @param {jQuery} $form\n   * @returns {FormData}\n   */\n  prepareFormData($form) {\n    const initialData = this.settings.customFormData || {};\n    let data;\n\n    if ($form.attr(\"method\")) {\n      const $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      data = new FormData($form[0]);\n\n      if ($submitButton.length) {\n        data.append($submitButton.attr(\"name\"), \"1\");\n      }\n    } else {\n      data = new FormData();\n    }\n\n    for (let [key, value] of Object.entries(initialData)) {\n      data.append(key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @returns {Promise<void>}\n   */\n  async handleResponseError(response, $form) {\n    const responseData = await response.clone().text();\n\n    if (response.status === 400) {\n      this.#formValidator.handleFormErrorMessages($form, responseData);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.submit.fail\", [this]);\n    } else if (responseData.length > 0) {\n      document.open();\n      document.write(responseData);\n      document.close();\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @param {string} hash\n   * @returns {Promise<void>}\n   */\n  async handleSuccessfulResponse(response, $form, hash) {\n    const responseData = await this.decodeResponse(response);\n\n    let callback = $form.data(\"ajax-form-complete-callback\");\n\n    if (typeof window[callback] === \"function\") {\n      window[callback](responseData);\n    } else if (responseData.redirect_url) {\n      this.redirectToNewPage(hash, responseData);\n    } else {\n      this.scrollIntoView();\n      this.replaceContent(hash, responseData);\n      this.rebindHandlers(hash);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.complete\");\n\n      if (typeof hash !== \"undefined\") {\n        window.location.hash = hash;\n      }\n    }\n  }\n\n  addLoadingLayer() {\n    if (this.settings.loadingOverlay === false) {\n      return;\n    }\n\n    this.#loadingLayer.addLoadingLayer();\n  }\n\n  disableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", true);\n    }\n  }\n\n  enableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", false);\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @returns {Promise<*>}\n   */\n  async decodeResponse(response) {\n    try {\n      return await response.clone().json();\n    } catch (error) {\n      return await response.clone().text();\n    }\n  }\n\n  redirectToNewPage(hash, responseData) {\n    if (typeof hash !== \"undefined\") {\n      window.location.href = responseData.redirect_url + hash;\n      window.location.reload();\n    } else {\n      window.location.href = responseData.redirect_url;\n    }\n  }\n\n  /**\n   * Scroll to the beginning of the content area, if the current viewport is near the bottom\n   */\n  scrollIntoView() {\n    const offsetTop = jQuery(this.settings.targetElement).offset().top;\n\n    if (jQuery(document).scrollTop() > offsetTop) {\n      jQuery(\"html, body\").animate(\n        {\n          scrollTop: offsetTop,\n        },\n        \"fast\"\n      );\n    }\n  }\n\n  replaceContent(hash, responseData) {\n    if (hash && jQuery(hash).length) {\n      jQuery(hash).html(jQuery(responseData).find(hash).html());\n    } else {\n      jQuery(this.settings.targetElement).html(responseData);\n    }\n  }\n\n  rebindHandlers(hash) {\n    const $bindingTarget = hash && jQuery(hash).length ? jQuery(hash) : jQuery(this.settings.targetElement);\n\n    $bindingTarget.find('[data-ajax-form=\"true\"]').formSubmit();\n\n    this.findSubmitButton();\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class LoadingLayer {\n  #options = {\n    loadingText: \"\",\n  };\n\n  constructor(element, options) {\n    this.#options = mergeSettings(this.#options, options, jQuery(element).data() || {});\n  }\n\n  addLoadingLayer() {\n    if (!document.getElementById(\"loading-layer\")) {\n      const $body = jQuery(\"body\"),\n        html =\n          '<div id=\"loading-layer\" class=\"loading-layer\"><h1><span class=\"fas fa-spinner fa-spin\"></span> ' +\n          this.#options.loadingText +\n          \"</h1></div>\";\n\n      jQuery(html).appendTo($body);\n    }\n  }\n\n  showLoadingLayer() {\n    this.#toggleLoadingLayer(true);\n  }\n\n  hideLoadingLayer() {\n    this.#toggleLoadingLayer(false);\n  }\n\n  #toggleLoadingLayer(show) {\n    document.getElementById(\"loading-layer\")?.classList.toggle(\"loading-layer__active\", show);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport class FormValidator {\n  #isFormValid = true;\n\n  preValidateForm(form) {\n    this.removeAllPreviousErrors();\n    this.checkFormElementsForErrors(form);\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n\n    return this.#isFormValid;\n  }\n\n  removeAllPreviousErrors() {\n    jQuery(\"form .form-group.has-error\").removeClass(\"has-error\").find(\".validation-failed\").remove();\n  }\n\n  checkFormElementsForErrors(form) {\n    for (const field of form.elements) {\n      if (field.nodeName !== \"INPUT\" && field.nodeName !== \"TEXTAREA\" && field.nodeName !== \"SELECT\") {\n        continue;\n      }\n\n      if (!field.checkValidity()) {\n        this.#addErrorDecorationToFormGroup(jQuery(field));\n        this.#addErrorMessageToFormField(jQuery(field), field.validationMessage);\n\n        this.#isFormValid = false;\n      }\n    }\n  }\n\n  #addErrorDecorationToFormGroup($elem) {\n    $elem.closest(\".form-group\").addClass(\"has-error\");\n  }\n\n  #removeErrorMessageFromFormField($elem) {\n    $elem.closest(\"div\").find(\".validation-failed\").remove();\n  }\n\n  #addErrorMessageToFormField($element, errorMessage) {\n    this.#removeErrorMessageFromFormField($element);\n\n    $element\n      .closest(\"div:not(.input-group):not(.btn-group)\")\n      .append(\n        '<small class=\"help-block validation-failed\"><i class=\"fas fa-exclamation-circle\"></i> ' +\n          errorMessage +\n          \"</small>\"\n      );\n  }\n\n  #focusTabWithFirstErrorMessage() {\n    if (jQuery(\".tabbable\").length > 0) {\n      let $elem = jQuery(\".tabbable .form-group.has-error:first\"),\n        tabId = $elem.closest(\".tab-pane\").prop(\"id\");\n      jQuery('.tabbable .nav-tabs a[href=\"#' + tabId + '\"]').tab(\"show\");\n\n      $elem.find(\":input\").focus();\n    }\n  }\n\n  get isFormValid() {\n    return this.#isFormValid;\n  }\n\n  setFormAsValid() {\n    this.#isFormValid = true;\n  }\n\n  handleFormErrorMessages($form, errorMessagesHtml) {\n    let $errorBox = jQuery(\"#error-box\");\n    const $modalBody = $form.find(\".modal-body\");\n\n    $errorBox.remove();\n\n    // Place the error messages inside the modal body for a better styling\n    $errorBox = jQuery(errorMessagesHtml);\n\n    $errorBox\n      .hide()\n      .prependTo($modalBody.length > 0 && $modalBody.is(\":visible\") ? $modalBody : $form)\n      .fadeIn();\n\n    this.#prettyPrintResponseErrorMessages($form, $errorBox);\n  }\n\n  #prettyPrintResponseErrorMessages($form, $errorBox) {\n    this.removeAllPreviousErrors();\n\n    // highlight all input fields where the validation has failed\n    $errorBox.find(\"li\").each((index, element) => {\n      let $this = jQuery(element),\n        errorClass = $this.data(\"error\");\n\n      if (errorClass.length > 0) {\n        let $elem =\n          $form.find(\"#\" + errorClass) || $form.find('[id|=\"' + errorClass + '\"]').filter(':not([id$=\"container\"])');\n\n        if ($elem.length > 0) {\n          this.#addErrorDecorationToFormGroup($elem);\n\n          // Move the error message to the responsible input field(s)\n          // and remove the list item from the error box container\n          if ($elem.length === 1) {\n            this.#addErrorMessageToFormField($elem, $this.html());\n            $this.remove();\n          }\n        }\n      }\n    });\n\n    // if all list items have been removed, remove the error box container too\n    if ($errorBox.find(\"li\").length === 0) {\n      $errorBox.remove();\n    }\n\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n  }\n\n  #scrollToFirstFormError() {\n    const $form = jQuery(this.element);\n    const $formErrors = $form.find(\".form-group.has-error\");\n\n    if ($form.closest(\".modal\").length > 0) {\n      return;\n    }\n\n    if (!$formErrors || $formErrors.length === 0) {\n      return;\n    }\n\n    if (this.#isElementInViewport($form.find(\".help-block.validation-failed\"))) {\n      return;\n    }\n\n    let offsetTop = $formErrors.offset().top;\n\n    if (this.settings.scrollOffsetElement) {\n      const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n\n      if ($scrollOffsetElement && $scrollOffsetElement.length > 0) {\n        offsetTop -= $scrollOffsetElement.height();\n      }\n    }\n\n    jQuery(\"html, body\").animate(\n      {\n        scrollTop: offsetTop,\n      },\n      \"fast\"\n    );\n  }\n\n  #isElementInViewport(element) {\n    // special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && element instanceof jQuery) {\n      element = element[0];\n    }\n\n    const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n    let offsetTop = 0;\n\n    if ($scrollOffsetElement) {\n      offsetTop = $scrollOffsetElement.height();\n    }\n\n    const rect = element.getBoundingClientRect();\n\n    return (\n      rect.top >= offsetTop &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { AjaxForm } from \"../lib/ajax-form\";\nimport { LoadingLayer } from \"../lib/loading-layer\";\nimport { FormValidator } from \"../lib/form-validator\";\n\n(($) => {\n  const pluginName = \"formSubmit\";\n\n  $.fn[pluginName] = function (options) {\n    return this.each(function () {\n      if (!$.data(this, \"plugin_\" + pluginName)) {\n        $.data(\n          this,\n          \"plugin_\" + pluginName,\n          new AjaxForm(this, new LoadingLayer(this, options), new FormValidator(), options)\n        );\n      }\n    });\n  };\n\n  $('[data-ajax-form=\"true\"]').formSubmit();\n\n  $(document).on(\"draw.dt\", (e) => {\n    $(e.target).find('[data-ajax-form=\"true\"]').formSubmit();\n  });\n})(jQuery);\n","\n}());"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}