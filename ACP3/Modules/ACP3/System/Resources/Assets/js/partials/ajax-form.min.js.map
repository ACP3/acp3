{"version":3,"sources":["ACP3/Modules/ACP3/System/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/ajax-form.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/loading-layer.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/form-validator.js","ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/partials/ajax-form.js"],"names":["_$utils_4","defaultSettings","constructorOptions","dataAttributeOptions","mergedSettings","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","arr","Array","isArray","i","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","push","value","err","return","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","key","keyStripped","string","replace","charAt","toLowerCase","___arrayLikeToArray_1","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_classPrivateFieldGet","receiver","privateMap","get","_classPrivateFieldSet","set","_loadingLayer","WeakMap","_formValidator","_defaults","_init","WeakSet","AjaxForm","element","loadingLayer","formValidator","options","instance","Constructor","add","targetElement","loadingOverlay","customFormData","scrollOffsetElement","method","isFormValid","settings","mergeSettings","jQuery","data","privateSet","has","_init2","protoProps","_decodeResponse","_handleSuccessfulResponse","_handleResponseError","_performAjaxRequest","find","click","closest","removeAttr","attr","regeneratorRuntime","mark","_callee","$form","hash","$submitButton","_this$settings$method","_this$settings$method2","response","wrap","_context","prev","showLoadingLayer","disableSubmitButton","toUpperCase","fetch","body","prepareFormData","headers","X-Requested-With","sent","ok","handleResponseError","handleSuccessfulResponse","t0","catch","console","hideLoadingLayer","enableSubmitButton","finish","stop","initialData","FormData","append","_callee2","responseData","_context2","clone","text","status","handleFormErrorMessages","document","trigger","open","write","close","_x","_x2","_callee3","callback","_context3","decodeResponse","window","redirect_url","redirectToNewPage","scrollIntoView","replaceContent","rebindHandlers","location","_x3","_x4","_x5","addLoadingLayer","prop","_callee4","_context4","json","abrupt","_x6","href","reload","offsetTop","offset","top","scrollTop","animate","html","formSubmit","findSubmitButton","_$ajaxForm_1","_this","that","noValidate","on","e","preventDefault","setFormAsValid","preValidateForm","performAjaxRequest","removeAllPreviousErrors","checkFormElementsForErrors","___defineProperties_3","_classPrivateMethodGet","___classPrivateFieldGet_3","_options","_toggleLoadingLayer","LoadingLayer","loadingText","getElementById","$body","appendTo","_toggleLoadingLayer2","_$loadingLayer_3","show","_document$getElementB","classList","toggle","FormValidator","_isElementInViewport","_scrollToFirstFormError","_prettyPrintResponseErrorMessages","_focusTabWithFirstErrorMessage","_addErrorMessageToFormField","_removeErrorMessageFromFormField","_addErrorDecorationToFormGroup","_isFormValid","form","___classPrivateMethodGet_2","_focusTabWithFirstErrorMessage2","_scrollToFirstFormError2","___classPrivateFieldGet_2","removeClass","remove","_step","_iterator","_createForOfIteratorHelper","elements","s","field","nodeName","checkValidity","_addErrorDecorationToFormGroup2","_addErrorMessageToFormField2","validationMessage","___classPrivateFieldSet_2","f","errorMessagesHtml","$errorBox","$modalBody","hide","prependTo","is","fadeIn","_prettyPrintResponseErrorMessages2","___defineProperties_2","_$formValidator_2","$","$elem","addClass","_removeErrorMessageFromFormField2","$element","errorMessage","tabId","tab","focus","each","index","$this","errorClass","filter","$formErrors","_isElementInViewport2","$scrollOffsetElement","height","rect","getBoundingClientRect","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth"],"mappings":"CAAA,WACA,IAAAA,EAAA,q2BCIO,SAAuBC,EAAiBC,EAAoBC,GAGjE,IAFA,IAAMC,EAAcC,EAAAA,EAAA,GAAQJ,GAAoBC,GAEhDI,EAAA,EAAAC,EAAyBC,OAAOC,QAAQN,GAAxCG,EAAAC,EAAAG,OAAAJ,IAA+D,CAAA,IAAAK,GAAA,EAAA,SAAAC,GAAA,GAAAC,MAAAC,QAAAF,GAAA,OAAAA,EAAA,CAAAA,EAAAL,EAAAD,KAAA,SAAAM,EAAAG,GAAA,GAAA,oBAAAC,QAAAA,OAAAC,YAAAT,OAAAI,GAAA,CAAA,IAAAM,EAAA,GAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA,EAAA,IAAA,IAAA,IAAAC,EAAAhB,EAAAM,EAAAI,OAAAC,cAAAE,GAAAG,EAAAhB,EAAAiB,QAAAC,QAAAN,EAAAO,KAAAH,EAAAI,OAAAX,IAAAG,EAAAR,QAAAS,GAAA,IAAA,MAAAQ,GAAAP,GAAA,EAAAC,EAAAM,EAAA,QAAA,IAAAR,GAAA,MAAAb,EAAAsB,QAAAtB,EAAAsB,SAAA,QAAA,GAAAR,EAAA,MAAAC,GAAA,OAAAH,GAAA,CAAAN,IAAA,SAAAiB,EAAAC,GAAA,GAAAD,EAAA,CAAA,GAAA,iBAAAA,EAAA,OAAAE,EAAAF,EAAAd,GAAA,IAAAiB,EAAAxB,OAAAyB,UAAAC,SAAAC,KAAAN,GAAAO,MAAA,GAAA,GAAA,MAAA,WAAAJ,GAAAH,EAAAQ,cAAAL,EAAAH,EAAAQ,YAAAC,MAAA,QAAAN,GAAA,QAAAA,EAAAnB,MAAA0B,KAAAV,GAAA,cAAAG,GAAA,2CAAAQ,KAAAR,GAAAD,EAAAF,EAAAd,QAAA,GAAA,CAAAH,IAAA,WAAA,MAAA,IAAA6B,UAAA,6IAAA,IAArDC,EAAqD/B,EAAA,GAAhDe,EAAgDf,EAAA,GACvDgC,GAUoBC,EAVeF,EAAIG,QAAQ,WAAY,KAWrDC,OAAO,GAAGC,cAAgBH,EAAOR,MAAM,GAT/CO,EAAYjC,OAAS,QAAA,IAAYN,EAAeuC,KAClDvC,EAAeuC,GAAejB,GAOpC,IAA8BkB,EAAAhC,EAH5B,OAAOR,YCXT,SAAA4C,EAAApC,EAAAqC,IAAA,MAAAA,GAAAA,EAAArC,EAAAF,UAAAuC,EAAArC,EAAAF,QAAA,IAAA,IAAAK,EAAA,EAAAmC,EAAA,IAAArC,MAAAoC,GAAAlC,EAAAkC,EAAAlC,IAAAmC,EAAAnC,GAAAH,EAAAG,GAAA,OAAAmC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAAe,GAAA,IAAA,IAAAC,EAAAN,EAAAV,GAAAe,GAAA/B,EAAAgC,EAAAhC,MAAA,MAAAiC,GAAA,YAAAL,EAAAK,GAAAD,EAAAlC,KAAA6B,EAAA3B,GAAAkC,QAAAP,QAAA3B,GAAAmC,KAAAN,EAAAC,GAAA,SAAAM,EAAAC,GAAA,OAAA,WAAA,IAAAC,EAAAC,KAAAC,EAAAC,UAAA,OAAA,IAAAP,SAAA,SAAAP,EAAAC,GAAA,IAAAF,EAAAW,EAAAK,MAAAJ,EAAAE,GAAA,SAAAX,EAAA7B,GAAAyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9B,GAAA,SAAA8B,EAAA7B,GAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAAA7B,GAAA4B,OAAA,OAAA,SAAAc,EAAAC,EAAAC,GAAA,IAAA,IAAAxD,EAAA,EAAAA,EAAAwD,EAAA7D,OAAAK,IAAA,CAAA,IAAAyD,EAAAD,EAAAxD,GAAAyD,EAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,UAAAF,IAAAA,EAAAG,UAAA,GAAAnE,OAAAoE,eAAAN,EAAAE,EAAA9B,IAAA8B,IAAA,SAAAK,EAAAC,EAAAC,GAAA,IAAAP,EAAAO,EAAAC,IAAAF,GAAA,IAAAN,EAAA,MAAA,IAAA/B,UAAA,kDAAA,OAAA+B,EAAAQ,IAAAR,EAAAQ,IAAA7C,KAAA2C,GAAAN,EAAA9C,MAAA,SAAAuD,EAAAH,EAAAC,EAAArD,GAAA,IAAA8C,EAAAO,EAAAC,IAAAF,GAAA,IAAAN,EAAA,MAAA,IAAA/B,UAAA,kDAAA,GAAA+B,EAAAU,IAAAV,EAAAU,IAAA/C,KAAA2C,EAAApD,OAAA,CAAA,IAAA8C,EAAAG,SAAA,MAAA,IAAAlC,UAAA,4CAAA+B,EAAA9C,MAAAA,EAAA,OAAAA,qEAAA,IAAAyD,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAAG,EAAA,IAAAC,QAEaC,EAAA,WAkBX,SAAAA,EAAYC,EAASC,EAAcC,EAAeC,IAAA,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAtD,UAAA,qCAAA,CAASwB,KAAAwB,GAAAF,EAAAS,IAAA/B,MAAAkB,EAAAD,IAAAjB,KAAA,CAAAU,UAAA,EAAAjD,WAAA,IAAA2D,EAAAH,IAAAjB,KAAA,CAAAU,UAAA,EAAAjD,WAAA,IAAA4D,EAAAJ,IAAAjB,KAAA,CAAAU,UAAA,EAAAjD,MAf/C,CACVuE,cAAe,WACfC,gBAAA,EACAC,eAAgB,KAChBC,oBAAqB,KACrBC,OAAQ,QAWRpC,KAAKyB,QAAUA,EACfzB,KAAKqC,aAAA,EAELrB,EAAAhB,KAAAkB,EAAqBQ,GACrBV,EAAAhB,KAAAoB,EAAsBO,GAEtB3B,KAAKsC,UAAA,EAAWvG,EAAAwG,eAAA3B,EAAcZ,KAAdqB,GAA8BO,EAASY,OAAOf,GAASgB,QAAA,SAAA5B,EAAA6B,EAAA5C,GAAA,IAAA4C,EAAAC,IAAA9B,GAAA,MAAA,IAAArC,UAAA,kDAAA,OAAAsB,EAAA,CACvEE,KAAAsB,EAAAsB,GAAA1E,KAAA8B,MAAA,IAAA8B,EAAAe,EAoLiCC,EAjDtBC,EAnBJC,EAtE+BC,EA1CtC,OAAAnB,EAAAN,GAAAqB,EAAA,CAAA,CAAApE,IAAA,mBAAAhB,MAAA,WAsCA+E,OAAOxC,KAAKyB,SACTyB,KAAK,WACLC,OAAM,WACLX,OAAO,UAAWA,OAAOxC,MAAMoD,QAAQ,SAASC,WAAW,gBAC3Db,OAAOxC,MAAMsD,KAAK,eAAgB,aAAA,CAAA7E,IAAA,qBAAAhB,OAAAwF,EAAApD,EAAA0D,mBAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAA,OAAAR,mBAAAS,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAA3G,MAAA,KAAA,EAAA,OAKhCoG,EAAQlB,OAAOxC,KAAKyB,UAIhB6B,KAAK,WACbM,EAAgBpB,OAAO,+BAAgCkB,GAEvDC,EAAOC,EAAcnB,KAAK,eAE1BkB,EAAOD,EAAMjB,KAAK,cAGpB7B,EAAAZ,KAAAkB,GAAmBiD,mBACnBnE,KAAKoE,oBAAoBR,GAAAK,EAAAC,KAAA,EAGjB9B,EAASsB,EAAMJ,KAAK,UACtBI,EAAMJ,KAAK,UAAUe,cADV,QAAAR,EAAA,QAAAC,EAEX9D,KAAKsC,SAASF,cAAA,IAFH0B,OAAA,EAEXA,EAAsBO,qBAAA,IAFXR,EAAAA,EAE4B,MAAAI,EAAA3G,KAAA,EACpBgH,MAAMZ,EAAMJ,KAAK,WAAaI,EAAMJ,KAAK,QAAS,CACvElB,OAAQA,EACRmC,KAAiB,QAAXnC,EAAmBpC,KAAKwE,gBAAgBd,GAAS,KACvDe,QAAS,CACPC,mBAAoB,oBAAA,KAAA,EAAA,IAJlBX,EAAAE,EAAAU,MAQQC,GAAA,CAAAX,EAAA3G,KAAA,GAAA,MAAA,OAAA2G,EAAA3G,KAAA,GACN0C,KAAK6E,oBAAoBd,EAAUL,GAAA,KAAA,GAAAO,EAAA3G,KAAA,GAAA,MAAA,KAAA,GAAA,OAAA2G,EAAA3G,KAAA,GAEnC0C,KAAK8E,yBAAyBf,EAAUL,EAAOC,GAAA,KAAA,GAAAM,EAAA3G,KAAA,GAAA,MAAA,KAAA,GAAA2G,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAAe,MAAA,GAGvDC,QAAQvF,MAARuE,EAAAc,IAAA,KAAA,GAAA,OAAAd,EAAAC,KAAA,GAEAtD,EAAAZ,KAAAkB,GAAmBgE,mBACnBlF,KAAKmF,mBAAmBvB,GAAAK,EAAAmB,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAnB,EAAAoB,UAAA5B,EAAAzD,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,UAAA,WAAA,OAAAiD,EAAA9C,MAAAH,KAAAE,cAAA,CAAAzB,IAAA,kBAAAhB,MAAA,SASZiG,GACd,IACIjB,EA1HR9F,EAAAG,EAyHUwI,EAActF,KAAKsC,SAASJ,gBAAkB,GAGpD,GAAIwB,EAAMJ,KAAK,UAAW,CACxB,IAAMM,EAAgBpB,OAAO,+BAAgCkB,GAE7DjB,EAAO,IAAI8C,SAAS7B,EAAM,IAEtBE,EAAcnH,QAChBgG,EAAK+C,OAAO5B,EAAcN,KAAK,QAAS,UAG1Cb,EAAO,IAAI8C,SAGb,IAAA,IAAAlJ,EAAA,EAAAC,EAAyBC,OAAOC,QAAQ8I,GAAxCjJ,EAAAC,EAAAG,OAAAJ,IAAsD,CAAA,IAAAK,GAxI1DC,EAwI0DL,EAAAD,GAxI1DS,EAwI0D,EAxI1D,SAAAH,GAAA,GAAAC,MAAAC,QAAAF,GAAA,OAAAA,EAAA,CAAAA,IAAA,SAAAA,EAAAG,GAAA,GAAA,oBAAAC,QAAAA,OAAAC,YAAAT,OAAAI,GAAA,CAAA,IAAAM,EAAA,GAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA,EAAA,IAAA,IAAA,IAAAC,EAAAhB,EAAAM,EAAAI,OAAAC,cAAAE,GAAAG,EAAAhB,EAAAiB,QAAAC,QAAAN,EAAAO,KAAAH,EAAAI,QAAAX,GAAAG,EAAAR,SAAAK,GAAAI,GAAA,IAAA,MAAAQ,GAAAP,GAAA,EAAAC,EAAAM,EAAA,QAAA,IAAAR,GAAA,MAAAb,EAAAsB,QAAAtB,EAAAsB,SAAA,QAAA,GAAAR,EAAA,MAAAC,GAAA,OAAAH,GAAA,CAAAN,EAAAG,IAAA,SAAAc,EAAAC,GAAA,GAAAD,EAAA,CAAA,GAAA,iBAAAA,EAAA,OAAAmB,EAAAnB,EAAAC,GAAA,IAAAE,EAAAxB,OAAAyB,UAAAC,SAAAC,KAAAN,GAAAO,MAAA,GAAA,GAAA,MAAA,WAAAJ,GAAAH,EAAAQ,cAAAL,EAAAH,EAAAQ,YAAAC,MAAA,QAAAN,GAAA,QAAAA,EAAAnB,MAAA0B,KAAAV,GAAA,cAAAG,GAAA,2CAAAQ,KAAAR,GAAAgB,EAAAnB,EAAAC,QAAA,GAAA,CAAAlB,EAAAG,IAAA,WAAA,MAAA,IAAA0B,UAAA,6IAAA,IAwIcC,EAA4C/B,EAAA,GAAvCe,EAAuCf,EAAA,GACpD+F,EAAK+C,OAAO/G,EAAKhB,GAGnB,OAAOgF,IAAA,CAAAhE,IAAA,sBAAAhB,OAAAuF,EAAAnD,EAAA0D,mBAAAC,MAAA,SAAAiC,EASiB1B,EAAUL,GAAA,IAAAgC,EAAA,OAAAnC,mBAAAS,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAArI,MAAA,KAAA,EAAA,OAAAqI,EAAArI,KAAA,EACPyG,EAAS6B,QAAQC,OAAA,KAAA,EAAtCH,EAAAC,EAAAhB,KAEkB,MAApBZ,EAAS+B,QACXlF,EAAAZ,KAAAoB,GAAoB2E,wBAAwBrC,EAAOgC,GAEnDlD,OAAOwD,UAAUC,QAAQ,4BAA6B,CAACjG,QAC9C0F,EAAajJ,OAAS,IAC/BuJ,SAASE,OACTF,SAASG,MAAMT,GACfM,SAASI,SAAA,KAAA,EAAA,IAAA,MAAA,OAAAT,EAAAN,UAAAI,EAAAzF,UAAA,SAAAqG,EAAAC,GAAA,OAAAtD,EAAA7C,MAAAH,KAAAE,cAAA,CAAAzB,IAAA,2BAAAhB,OAAAsF,EAAAlD,EAAA0D,mBAAAC,MAAA,SAAA+C,EAWkBxC,EAAUL,EAAOC,GAAA,IAAA+B,EAAAc,EAAA,OAAAjD,mBAAAS,MAAA,SAAAyC,GAAA,OAAA,OAAAA,EAAAvC,KAAAuC,EAAAnJ,MAAA,KAAA,EAAA,OAAAmJ,EAAAnJ,KAAA,EACnB0C,KAAK0G,eAAe3C,GAAA,KAAA,EAAzC2B,EAAAe,EAAA9B,KAEF6B,EAAW9C,EAAMjB,KAAK,+BAEM,mBAArBkE,OAAOH,GAChBG,OAAOH,GAAUd,GACRA,EAAakB,aACtB5G,KAAK6G,kBAAkBlD,EAAM+B,IAE7B1F,KAAK8G,iBACL9G,KAAK+G,eAAepD,EAAM+B,GAC1B1F,KAAKgH,eAAerD,GAEpBnB,OAAOwD,UAAUC,QAAQ,+BAAA,IAEdtC,IACTgD,OAAOM,SAAStD,KAAOA,IAAA,KAAA,EAAA,IAAA,MAAA,OAAA8C,EAAApB,UAAAkB,EAAAvG,UAAA,SAAAkH,EAAAC,EAAAC,GAAA,OAAArE,EAAA5C,MAAAH,KAAAE,cAAA,CAAAzB,IAAA,kBAAAhB,MAAA,YAAA,IAMvBuC,KAAKsC,SAASL,gBAIlBrB,EAAAZ,KAAAkB,GAAmBmG,oBAAA,CAAA5I,IAAA,sBAAAhB,MAAA,SAGDmG,QAAA,IACPA,GACTA,EAAc0D,KAAK,YAAA,KAAY,CAAA7I,IAAA,qBAAAhB,MAAA,SAIhBmG,QAAA,IACNA,GACTA,EAAc0D,KAAK,YAAA,KAAY,CAAA7I,IAAA,iBAAAhB,OAAAqF,EAAAjD,EAAA0D,mBAAAC,MAAA,SAAA+D,EASdxD,GAAA,OAAAR,mBAAAS,MAAA,SAAAwD,GAAA,OAAA,OAAAA,EAAAtD,KAAAsD,EAAAlK,MAAA,KAAA,EAAA,OAAAkK,EAAAtD,KAAA,EAAAsD,EAAAlK,KAAA,EAEJyG,EAAS6B,QAAQ6B,OAAA,KAAA,EAAA,OAAAD,EAAAE,OAAA,SAAAF,EAAA7C,MAAA,KAAA,EAAA,OAAA6C,EAAAtD,KAAA,EAAAsD,EAAAzC,GAAAyC,EAAAxC,MAAA,GAAAwC,EAAAlK,KAAA,GAEjByG,EAAS6B,QAAQC,OAAA,KAAA,GAAA,OAAA2B,EAAAE,OAAA,SAAAF,EAAA7C,MAAA,KAAA,GAAA,IAAA,MAAA,OAAA6C,EAAAnC,UAAAkC,EAAA,KAAA,CAAA,CAAA,EAAA,SAAA,SAAAI,GAAA,OAAA7E,EAAA3C,MAAAH,KAAAE,cAAA,CAAAzB,IAAA,oBAAAhB,MAAA,SAIhBkG,EAAM+B,QAAA,IACX/B,GACTgD,OAAOM,SAASW,KAAOlC,EAAakB,aAAejD,EACnDgD,OAAOM,SAASY,UAEhBlB,OAAOM,SAASW,KAAOlC,EAAakB,eAAA,CAAAnI,IAAA,iBAAAhB,MAAA,WAQtC,IAAMqK,EAAYtF,OAAOxC,KAAKsC,SAASN,eAAe+F,SAASC,IAE3DxF,OAAOwD,UAAUiC,YAAcH,GACjCtF,OAAO,cAAc0F,QACnB,CACED,UAAWH,GAEb,UAAA,CAAArJ,IAAA,iBAAAhB,MAAA,SAKSkG,EAAM+B,GACf/B,GAAQnB,OAAOmB,GAAMlH,OACvB+F,OAAOmB,GAAMwE,KAAK3F,OAAOkD,GAAcxC,KAAKS,GAAMwE,QAElD3F,OAAOxC,KAAKsC,SAASN,eAAemG,KAAKzC,KAAA,CAAAjH,IAAA,iBAAAhB,MAAA,SAI9BkG,IACUA,GAAQnB,OAAOmB,GAAMlH,OAAS+F,OAAOmB,GAAQnB,OAAOxC,KAAKsC,SAASN,gBAE1EkB,KAAK,2BAA2BkF,aAE/CpI,KAAKqI,wBAAAjI,EAAA0B,EAAA9D,UAAA6E,GAAArB,EArQI,GAqQJ8G,EAAA9G,SAAAA,EAAA,IAAAoB,EAAA,WAxOC,IAAA2F,EAAAvI,KACAwI,EAAOxI,KAEbA,KAAKqI,mBACLrI,KAAKqH,kBACLrH,KAAKyB,QAAQgH,YAAA,EAEbjG,OAAOxC,KAAKyB,SACTiH,GAAG,UAAU,SAACC,GACbA,EAAEC,iBAEFhI,EAAA2H,EAAInH,GAAgByH,iBAEpBrG,OAAOwD,UAAUC,QAAQ,8BAA+B,CAACsC,IAErD3H,EAAA2H,EAAInH,GAAgBiB,aAAezB,EAAA2H,EAAInH,GAAgB0H,gBAAgBP,EAAK9G,UAC9E8G,EAAKQ,wBAGRL,GAAG,SAAS,SAAUC,GACgB,MAAjCnG,OAAOxC,MAAMsH,KAAK,aACpBqB,EAAEC,iBAEFJ,EAAKO,yBAGRL,GAAG,UAAU,YAAA,IACR9H,EAAA2H,EAAInH,GAAgBiB,cACtBzB,EAAA2H,EAAInH,GAAgB4H,0BACpBpI,EAAA2H,EAAInH,GAAgB6H,2BAA2BV,EAAK9G,mBC5D9D,SAAAyH,EAAA7I,EAAAC,GAAA,IAAA,IAAAxD,EAAA,EAAAA,EAAAwD,EAAA7D,OAAAK,IAAA,CAAA,IAAAyD,EAAAD,EAAAxD,GAAAyD,EAAAC,WAAAD,EAAAC,aAAA,EAAAD,EAAAE,cAAA,EAAA,UAAAF,IAAAA,EAAAG,UAAA,GAAAnE,OAAAoE,eAAAN,EAAAE,EAAA9B,IAAA8B,IAAA,SAAA4I,EAAAtI,EAAA6B,EAAA5C,GAAA,IAAA4C,EAAAC,IAAA9B,GAAA,MAAA,IAAArC,UAAA,kDAAA,OAAAsB,EAAA,SAAAsJ,EAAAvI,EAAAC,GAAA,IAAAP,EAAAO,EAAAC,IAAAF,GAAA,IAAAN,EAAA,MAAA,IAAA/B,UAAA,kDAAA,OAAA+B,EAAAQ,IAAAR,EAAAQ,IAAA7C,KAAA2C,GAAAN,EAAA9C,6EAAA,IAAA4L,EAAA,IAAAlI,QAAAmI,EAAA,IAAA/H,QAEagI,EAAA,WAKX,SAAAA,EAAY9H,EAASG,IAAA,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAtD,UAAA,qCAAA,CAASwB,KAAAuJ,GAAAD,EAAAvH,IAAA/B,MAAAqJ,EAAApI,IAAAjB,KAAA,CAAAU,UAAA,EAAAjD,MAJnB,CACT+L,YAAa,MAAA,SAAA3I,EAAAC,EAAArD,GAAA,IAAA8C,EAAAO,EAAAC,IAAAF,GAAA,IAAAN,EAAA,MAAA,IAAA/B,UAAA,kDAAA,GAAA+B,EAAAU,IAAAV,EAAAU,IAAA/C,KAAA2C,EAAApD,OAAA,CAAA,IAAA8C,EAAAG,SAAA,MAAA,IAAAlC,UAAA,4CAAA+B,EAAA9C,MAAAA,GAAA,CAIbuC,KAAAqJ,GAAA,EAAgBtN,EAAAwG,eAAA6G,EAAcpJ,KAAdqJ,GAA6BzH,EAASY,OAAOf,GAASgB,QAAU,KAAA,IAAAX,EAAAe,EAAA,OAAAf,EAAAyH,GAAA1G,EAAA,CAAA,CAAApE,IAAA,kBAAAhB,MAAA,WAIhF,IAAKuI,SAASyD,eAAe,iBAAkB,CAC7C,IAAMC,EAAQlH,OAAO,QACnB2F,EACE,kGACAiB,EAAApJ,KAAAqJ,GAAcG,YACd,cAEJhH,OAAO2F,GAAMwB,SAASD,MAAA,CAAAjL,IAAA,mBAAAhB,MAAA,WAKxB0L,EAAAnJ,KAAAsJ,EAAAM,GAAA1L,KAAA8B,MAAA,KAAyB,CAAAvB,IAAA,mBAAAhB,MAAA,WAIzB0L,EAAAnJ,KAAAsJ,EAAAM,GAAA1L,KAAA8B,MAAA,QAAyBkJ,EAAApH,EAAA9D,UAAA6E,GAAA0G,EA1BhB,GA0BgBM,EAAAN,aAAAA,EAAA,IAAAK,EAAA,SAGPE,GAAM,IAAAC,EACxB,QAAAA,EAAA/D,SAASyD,eAAe,wBAAA,IAAxBM,GAAAA,EAA0CC,UAAUC,OAAO,wBAAyBH,87BChC3EI,EAAA,WAAA,SAAAA,KAAA,SAAArI,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAtD,UAAA,qCAAA,CAAAwB,KAAAkK,GAAAC,EAAApI,IAAA/B,MAAAoK,EAAArI,IAAA/B,MAAAqK,EAAAtI,IAAA/B,MAAAsK,EAAAvI,IAAA/B,MAAAuK,EAAAxI,IAAA/B,MAAAwK,EAAAzI,IAAA/B,MAAAyK,EAAA1I,IAAA/B,MAAA0K,EAAAzJ,IAAAjB,KAAA,CAAAU,UAAA,EAAAjD,OAAA,IACI,IAAAqE,EAAAe,EAAA,OAAAf,EAAAoI,GAAArH,EAAA,CAAA,CAAApE,IAAA,kBAAAhB,MAAA,SAECkN,GAMd,OALA3K,KAAKgJ,0BACLhJ,KAAKiJ,2BAA2B0B,GAChCC,EAAA5K,KAAAsK,EAAAO,GAAA3M,KAAA8B,MACA4K,EAAA5K,KAAAoK,EAAAU,GAAA5M,KAAA8B,MAEA+K,EAAO/K,KAAP0K,KAAA,CAAAjM,IAAA,0BAAAhB,MAAA,WAIA+E,OAAO,8BAA8BwI,YAAY,aAAa9H,KAAK,sBAAsB+H,WAAA,CAAAxM,IAAA,6BAAAhB,MAAA,SAGhEkN,GAAM,IAAAO,EAAAC,o6BAAAC,CACXT,EAAKU,UADM,IAC/B,IAAAF,EAAAG,MAAAJ,EAAAC,EAAApN,KAAAR,MAAmC,CAAA,IAAxBgO,EAAwBL,EAAAzN,MACV,UAAnB8N,EAAMC,UAA2C,aAAnBD,EAAMC,UAA8C,WAAnBD,EAAMC,UAIpED,EAAME,kBACTb,EAAA5K,KAAAyK,EAAAiB,GAAAxN,KAAA8B,KAAoCwC,OAAO+I,IAC3CX,EAAA5K,KAAAuK,EAAAoB,GAAAzN,KAAA8B,KAAiCwC,OAAO+I,GAAQA,EAAMK,mBAEtDC,EAAA7L,KAAA0K,GAAA,KAV2B,MAAAhN,GAAAyN,EAAAxC,EAAAjL,GAAA,QAAAyN,EAAAW,OAAA,CAAArN,IAAA,iBAAAhB,MAAA,WAkD/BoO,EAAA7L,KAAA0K,GAAA,KAAoB,CAAAjM,IAAA,0BAAAhB,MAAA,SAGEiG,EAAOqI,GAC7B,IAAIC,EAAYxJ,OAAO,cACjByJ,EAAavI,EAAMR,KAAK,eAE9B8I,EAAUf,UAGVe,EAAYxJ,OAAOuJ,IAGhBG,OACAC,UAAUF,EAAWxP,OAAS,GAAKwP,EAAWG,GAAG,YAAcH,EAAavI,GAC5E2I,SAEHzB,EAAA5K,KAAAqK,EAAAiC,GAAApO,KAAA8B,KAAuC0D,EAAOsI,KAAA,CAAAvN,IAAA,cAAAsC,IAAA,WArB9C,OAAAgK,EAAO/K,KAAP0K,QAAA6B,EAAAzK,EAAA9D,UAAA6E,GAAAqH,EA9DS,GA8DTsC,EAAAtC,cAAAA,EAAA,IC1DFuC,ED0DEf,EAAA,SA/B6BgB,GAC7BA,EAAMtJ,QAAQ,eAAeuJ,SAAS,cAAAC,EAAA,SAGPF,GAC/BA,EAAMtJ,QAAQ,OAAOF,KAAK,sBAAsB+H,UAAAU,EAAA,SAGtBkB,EAAUC,GACpClC,EAAA5K,KAAAwK,EAAAoC,GAAA1O,KAAA8B,KAAsC6M,GAEtCA,EACGzJ,QAAQ,yCACRoC,OACC,yFACEsH,EACA,aAAAjC,EAAA,WAKN,GAAIrI,OAAO,aAAa/F,OAAS,EAAG,CAClC,IAAIiQ,EAAQlK,OAAO,yCACjBuK,EAAQL,EAAMtJ,QAAQ,aAAakE,KAAK,MAC1C9E,OAAO,gCAAkCuK,EAAQ,MAAMC,IAAI,QAE3DN,EAAMxJ,KAAK,UAAU+J,UAAAX,EAAA,SA6BS5I,EAAOsI,GAAW,IAAAzD,EAAAvI,KAClDA,KAAKgJ,0BAGLgD,EAAU9I,KAAK,MAAMgK,MAAK,SAACC,EAAO1L,GAChC,IAAI2L,EAAQ5K,OAAOf,GACjB4L,EAAaD,EAAM3K,KAAK,SAE1B,GAAI4K,EAAW5Q,OAAS,EAAG,CACzB,IAAIiQ,EACFhJ,EAAMR,KAAK,IAAMmK,IAAe3J,EAAMR,KAAK,SAAWmK,EAAa,MAAMC,OAAO,2BAE9EZ,EAAMjQ,OAAS,IACjBmO,EAAArC,EAAIkC,EAAAiB,GAAJxN,KAAAqK,EAAoCmE,GAIf,IAAjBA,EAAMjQ,SACRmO,EAAArC,EAAIgC,EAAAoB,GAAJzN,KAAAqK,EAAiCmE,EAAOU,EAAMjF,QAC9CiF,EAAMnC,eAOsB,IAAhCe,EAAU9I,KAAK,MAAMzG,QACvBuP,EAAUf,SAGZL,EAAA5K,KAAAsK,EAAAO,GAAA3M,KAAA8B,MACA4K,EAAA5K,KAAAoK,EAAAU,GAAA5M,KAAA8B,OAAA8K,EAAA,WAIA,IAAMpH,EAAQlB,OAAOxC,KAAKyB,SACpB8L,EAAc7J,EAAMR,KAAK,yBAE/B,KAAIQ,EAAMN,QAAQ,UAAU3G,OAAS,IAIhC8Q,GAAsC,IAAvBA,EAAY9Q,SAIhCmO,EAAI5K,KAAJmK,EAAAqD,GAAAtP,KAAI8B,KAA0B0D,EAAMR,KAAK,kCAAzC,CAIA,IAAI4E,EAAYyF,EAAYxF,SAASC,IAErC,GAAIhI,KAAKsC,SAASH,oBAAqB,CACrC,IAAMsL,EAAuBjL,OAAOxC,KAAKsC,SAASH,qBAE9CsL,GAAwBA,EAAqBhR,OAAS,IACxDqL,GAAa2F,EAAqBC,UAItClL,OAAO,cAAc0F,QACnB,CACED,UAAWH,GAEb,UAAA0F,EAAA,SAIiB/L,GAEG,mBAAXe,QAAyBf,aAAmBe,SACrDf,EAAUA,EAAQ,IAGpB,IAAMgM,EAAuBjL,OAAOxC,KAAKsC,SAASH,qBAC9C2F,EAAY,EAEZ2F,IACF3F,EAAY2F,EAAqBC,UAGnC,IAAMC,EAAOlM,EAAQmM,wBAErB,OACED,EAAK3F,KAAOF,GACZ6F,EAAKE,MAAQ,GACbF,EAAKG,SAAWnH,OAAOoH,aAAe/H,SAASgI,gBAAgBC,eAC/DN,EAAKO,QAAUvH,OAAOwH,YAAcnI,SAASgI,gBAAgBI,eCzKjE3B,EAoBCjK,QAjBC1C,GAAFsI,WAAmB,SAAUxG,GAC3B,OAAO5B,KAAKkN,MAAK,WACVT,EAAEhK,KAAKzC,KAAM,sBAChByM,EAAEhK,KACAzC,KACA,oBACA,IAAIsI,EAAA9G,SAASxB,KAAM,IAAI6J,EAAAN,aAAavJ,KAAM4B,GAAU,IAAI4K,EAAAtC,cAAiBtI,QAMjF6K,EAAE,2BAA2BrE,aAE7BqE,EAAEzG,UAAU0C,GAAG,WAAW,SAACC,GACzB8D,EAAE9D,EAAEtI,QAAQ6C,KAAK,2BAA2BkF,gBL3BhD","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      mergedSettings[keyStripped] = value;\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class AjaxForm {\n  #loadingLayer;\n  #formValidator;\n  #defaults = {\n    targetElement: \"#content\",\n    loadingOverlay: true,\n    customFormData: null,\n    scrollOffsetElement: null,\n    method: null,\n  };\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {LoadingLayer} loadingLayer\n   * @param {FormValidator} formValidator\n   * @param {object} options\n   */\n  constructor(element, loadingLayer, formValidator, options) {\n    this.element = element;\n    this.isFormValid = true;\n\n    this.#loadingLayer = loadingLayer;\n    this.#formValidator = formValidator;\n\n    this.settings = mergeSettings(this.#defaults, options, jQuery(element).data());\n    this.#init();\n  }\n\n  #init() {\n    const that = this;\n\n    this.findSubmitButton();\n    this.addLoadingLayer();\n    this.element.noValidate = true;\n\n    jQuery(this.element)\n      .on(\"submit\", (e) => {\n        e.preventDefault();\n\n        this.#formValidator.setFormAsValid();\n\n        jQuery(document).trigger(\"acp3.ajaxFrom.submit.before\", [this]);\n\n        if (this.#formValidator.isFormValid && this.#formValidator.preValidateForm(this.element)) {\n          this.performAjaxRequest();\n        }\n      })\n      .on(\"click\", function (e) {\n        if (jQuery(this).prop(\"tagName\") === \"A\") {\n          e.preventDefault();\n\n          that.performAjaxRequest();\n        }\n      })\n      .on(\"change\", () => {\n        if (this.#formValidator.isFormValid === false) {\n          this.#formValidator.removeAllPreviousErrors();\n          this.#formValidator.checkFormElementsForErrors(this.element);\n        }\n      });\n  }\n\n  findSubmitButton() {\n    jQuery(this.element)\n      .find(\":submit\")\n      .click(function () {\n        jQuery(\":submit\", jQuery(this).closest(\"form\")).removeAttr(\"data-clicked\");\n        jQuery(this).attr(\"data-clicked\", \"true\");\n      });\n  }\n\n  async performAjaxRequest() {\n    const $form = jQuery(this.element);\n\n    let hash, $submitButton;\n\n    if ($form.attr(\"method\")) {\n      $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      hash = $submitButton.data(\"hashChange\");\n    } else {\n      hash = $form.data(\"hashChange\");\n    }\n\n    this.#loadingLayer.showLoadingLayer();\n    this.disableSubmitButton($submitButton);\n\n    try {\n      const method = $form.attr(\"method\")\n        ? $form.attr(\"method\").toUpperCase()\n        : this.settings.method?.toUpperCase() ?? \"GET\";\n      const response = await fetch($form.attr(\"action\") || $form.attr(\"href\"), {\n        method: method,\n        body: method !== \"GET\" ? this.prepareFormData($form) : null,\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (!response.ok) {\n        await this.handleResponseError(response, $form);\n      } else {\n        await this.handleSuccessfulResponse(response, $form, hash);\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.#loadingLayer.hideLoadingLayer();\n      this.enableSubmitButton($submitButton);\n    }\n  }\n\n  /**\n   *\n   * @param {jQuery} $form\n   * @returns {FormData}\n   */\n  prepareFormData($form) {\n    const initialData = this.settings.customFormData || {};\n    let data;\n\n    if ($form.attr(\"method\")) {\n      const $submitButton = jQuery(':submit[data-clicked=\"true\"]', $form);\n\n      data = new FormData($form[0]);\n\n      if ($submitButton.length) {\n        data.append($submitButton.attr(\"name\"), \"1\");\n      }\n    } else {\n      data = new FormData();\n    }\n\n    for (let [key, value] of Object.entries(initialData)) {\n      data.append(key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @returns {Promise<void>}\n   */\n  async handleResponseError(response, $form) {\n    const responseData = await response.clone().text();\n\n    if (response.status === 400) {\n      this.#formValidator.handleFormErrorMessages($form, responseData);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.submit.fail\", [this]);\n    } else if (responseData.length > 0) {\n      document.open();\n      document.write(responseData);\n      document.close();\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @param {jQuery} $form\n   * @param {string} hash\n   * @returns {Promise<void>}\n   */\n  async handleSuccessfulResponse(response, $form, hash) {\n    const responseData = await this.decodeResponse(response);\n\n    let callback = $form.data(\"ajax-form-complete-callback\");\n\n    if (typeof window[callback] === \"function\") {\n      window[callback](responseData);\n    } else if (responseData.redirect_url) {\n      this.redirectToNewPage(hash, responseData);\n    } else {\n      this.scrollIntoView();\n      this.replaceContent(hash, responseData);\n      this.rebindHandlers(hash);\n\n      jQuery(document).trigger(\"acp3.ajaxFrom.complete\");\n\n      if (typeof hash !== \"undefined\") {\n        window.location.hash = hash;\n      }\n    }\n  }\n\n  addLoadingLayer() {\n    if (this.settings.loadingOverlay === false) {\n      return;\n    }\n\n    this.#loadingLayer.addLoadingLayer();\n  }\n\n  disableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", true);\n    }\n  }\n\n  enableSubmitButton($submitButton) {\n    if (typeof $submitButton !== \"undefined\") {\n      $submitButton.prop(\"disabled\", false);\n    }\n  }\n\n  /**\n   *\n   * @param {Response} response\n   * @returns {Promise<*>}\n   */\n  async decodeResponse(response) {\n    try {\n      return await response.clone().json();\n    } catch (error) {\n      return await response.clone().text();\n    }\n  }\n\n  redirectToNewPage(hash, responseData) {\n    if (typeof hash !== \"undefined\") {\n      window.location.href = responseData.redirect_url + hash;\n      window.location.reload();\n    } else {\n      window.location.href = responseData.redirect_url;\n    }\n  }\n\n  /**\n   * Scroll to the beginning of the content area, if the current viewport is near the bottom\n   */\n  scrollIntoView() {\n    const offsetTop = jQuery(this.settings.targetElement).offset().top;\n\n    if (jQuery(document).scrollTop() > offsetTop) {\n      jQuery(\"html, body\").animate(\n        {\n          scrollTop: offsetTop,\n        },\n        \"fast\"\n      );\n    }\n  }\n\n  replaceContent(hash, responseData) {\n    if (hash && jQuery(hash).length) {\n      jQuery(hash).html(jQuery(responseData).find(hash).html());\n    } else {\n      jQuery(this.settings.targetElement).html(responseData);\n    }\n  }\n\n  rebindHandlers(hash) {\n    const $bindingTarget = hash && jQuery(hash).length ? jQuery(hash) : jQuery(this.settings.targetElement);\n\n    $bindingTarget.find('[data-ajax-form=\"true\"]').formSubmit();\n\n    this.findSubmitButton();\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nimport { mergeSettings } from \"./utils\";\n\nexport class LoadingLayer {\n  #options = {\n    loadingText: \"\",\n  };\n\n  constructor(element, options) {\n    this.#options = mergeSettings(this.#options, options, jQuery(element).data() || {});\n  }\n\n  addLoadingLayer() {\n    if (!document.getElementById(\"loading-layer\")) {\n      const $body = jQuery(\"body\"),\n        html =\n          '<div id=\"loading-layer\" class=\"loading-layer\"><h1><span class=\"fas fa-spinner fa-spin\"></span> ' +\n          this.#options.loadingText +\n          \"</h1></div>\";\n\n      jQuery(html).appendTo($body);\n    }\n  }\n\n  showLoadingLayer() {\n    this.#toggleLoadingLayer(true);\n  }\n\n  hideLoadingLayer() {\n    this.#toggleLoadingLayer(false);\n  }\n\n  #toggleLoadingLayer(show) {\n    document.getElementById(\"loading-layer\")?.classList.toggle(\"loading-layer__active\", show);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport class FormValidator {\n  #isFormValid = true;\n\n  preValidateForm(form) {\n    this.removeAllPreviousErrors();\n    this.checkFormElementsForErrors(form);\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n\n    return this.#isFormValid;\n  }\n\n  removeAllPreviousErrors() {\n    jQuery(\"form .form-group.has-error\").removeClass(\"has-error\").find(\".validation-failed\").remove();\n  }\n\n  checkFormElementsForErrors(form) {\n    for (const field of form.elements) {\n      if (field.nodeName !== \"INPUT\" && field.nodeName !== \"TEXTAREA\" && field.nodeName !== \"SELECT\") {\n        continue;\n      }\n\n      if (!field.checkValidity()) {\n        this.#addErrorDecorationToFormGroup(jQuery(field));\n        this.#addErrorMessageToFormField(jQuery(field), field.validationMessage);\n\n        this.#isFormValid = false;\n      }\n    }\n  }\n\n  #addErrorDecorationToFormGroup($elem) {\n    $elem.closest(\".form-group\").addClass(\"has-error\");\n  }\n\n  #removeErrorMessageFromFormField($elem) {\n    $elem.closest(\"div\").find(\".validation-failed\").remove();\n  }\n\n  #addErrorMessageToFormField($element, errorMessage) {\n    this.#removeErrorMessageFromFormField($element);\n\n    $element\n      .closest(\"div:not(.input-group):not(.btn-group)\")\n      .append(\n        '<small class=\"help-block validation-failed\"><i class=\"fas fa-exclamation-circle\"></i> ' +\n          errorMessage +\n          \"</small>\"\n      );\n  }\n\n  #focusTabWithFirstErrorMessage() {\n    if (jQuery(\".tabbable\").length > 0) {\n      let $elem = jQuery(\".tabbable .form-group.has-error:first\"),\n        tabId = $elem.closest(\".tab-pane\").prop(\"id\");\n      jQuery('.tabbable .nav-tabs a[href=\"#' + tabId + '\"]').tab(\"show\");\n\n      $elem.find(\":input\").focus();\n    }\n  }\n\n  get isFormValid() {\n    return this.#isFormValid;\n  }\n\n  setFormAsValid() {\n    this.#isFormValid = true;\n  }\n\n  handleFormErrorMessages($form, errorMessagesHtml) {\n    let $errorBox = jQuery(\"#error-box\");\n    const $modalBody = $form.find(\".modal-body\");\n\n    $errorBox.remove();\n\n    // Place the error messages inside the modal body for a better styling\n    $errorBox = jQuery(errorMessagesHtml);\n\n    $errorBox\n      .hide()\n      .prependTo($modalBody.length > 0 && $modalBody.is(\":visible\") ? $modalBody : $form)\n      .fadeIn();\n\n    this.#prettyPrintResponseErrorMessages($form, $errorBox);\n  }\n\n  #prettyPrintResponseErrorMessages($form, $errorBox) {\n    this.removeAllPreviousErrors();\n\n    // highlight all input fields where the validation has failed\n    $errorBox.find(\"li\").each((index, element) => {\n      let $this = jQuery(element),\n        errorClass = $this.data(\"error\");\n\n      if (errorClass.length > 0) {\n        let $elem =\n          $form.find(\"#\" + errorClass) || $form.find('[id|=\"' + errorClass + '\"]').filter(':not([id$=\"container\"])');\n\n        if ($elem.length > 0) {\n          this.#addErrorDecorationToFormGroup($elem);\n\n          // Move the error message to the responsible input field(s)\n          // and remove the list item from the error box container\n          if ($elem.length === 1) {\n            this.#addErrorMessageToFormField($elem, $this.html());\n            $this.remove();\n          }\n        }\n      }\n    });\n\n    // if all list items have been removed, remove the error box container too\n    if ($errorBox.find(\"li\").length === 0) {\n      $errorBox.remove();\n    }\n\n    this.#focusTabWithFirstErrorMessage();\n    this.#scrollToFirstFormError();\n  }\n\n  #scrollToFirstFormError() {\n    const $form = jQuery(this.element);\n    const $formErrors = $form.find(\".form-group.has-error\");\n\n    if ($form.closest(\".modal\").length > 0) {\n      return;\n    }\n\n    if (!$formErrors || $formErrors.length === 0) {\n      return;\n    }\n\n    if (this.#isElementInViewport($form.find(\".help-block.validation-failed\"))) {\n      return;\n    }\n\n    let offsetTop = $formErrors.offset().top;\n\n    if (this.settings.scrollOffsetElement) {\n      const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n\n      if ($scrollOffsetElement && $scrollOffsetElement.length > 0) {\n        offsetTop -= $scrollOffsetElement.height();\n      }\n    }\n\n    jQuery(\"html, body\").animate(\n      {\n        scrollTop: offsetTop,\n      },\n      \"fast\"\n    );\n  }\n\n  #isElementInViewport(element) {\n    // special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && element instanceof jQuery) {\n      element = element[0];\n    }\n\n    const $scrollOffsetElement = jQuery(this.settings.scrollOffsetElement);\n    let offsetTop = 0;\n\n    if ($scrollOffsetElement) {\n      offsetTop = $scrollOffsetElement.height();\n    }\n\n    const rect = element.getBoundingClientRect();\n\n    return (\n      rect.top >= offsetTop &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { AjaxForm } from \"../lib/ajax-form\";\nimport { LoadingLayer } from \"../lib/loading-layer\";\nimport { FormValidator } from \"../lib/form-validator\";\n\n(($) => {\n  const pluginName = \"formSubmit\";\n\n  $.fn[pluginName] = function (options) {\n    return this.each(function () {\n      if (!$.data(this, \"plugin_\" + pluginName)) {\n        $.data(\n          this,\n          \"plugin_\" + pluginName,\n          new AjaxForm(this, new LoadingLayer(this, options), new FormValidator(), options)\n        );\n      }\n    });\n  };\n\n  $('[data-ajax-form=\"true\"]').formSubmit();\n\n  $(document).on(\"draw.dt\", (e) => {\n    $(e.target).find('[data-ajax-form=\"true\"]').formSubmit();\n  });\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlc1xcYnJvd3Nlci1wYWNrLWZsYXRcXF9wcmVsdWRlIiwiQUNQMy9Nb2R1bGVzL0FDUDMvU3lzdGVtL1Jlc291cmNlcy9Bc3NldHMvanMvbGliL3V0aWxzLmpzIiwiQUNQMy9Nb2R1bGVzL0FDUDMvU3lzdGVtL1Jlc291cmNlcy9Bc3NldHMvanMvbGliL2FqYXgtZm9ybS5qcyIsIkFDUDMvTW9kdWxlcy9BQ1AzL1N5c3RlbS9SZXNvdXJjZXMvQXNzZXRzL2pzL2xpYi9sb2FkaW5nLWxheWVyLmpzIiwiQUNQMy9Nb2R1bGVzL0FDUDMvU3lzdGVtL1Jlc291cmNlcy9Bc3NldHMvanMvbGliL2Zvcm0tdmFsaWRhdG9yLmpzIiwiQUNQMy9Nb2R1bGVzL0FDUDMvU3lzdGVtL1Jlc291cmNlcy9Bc3NldHMvanMvcGFydGlhbHMvYWpheC1mb3JtLmpzIl0sIm5hbWVzIjpbIl8kdXRpbHNfNCIsImRlZmF1bHRTZXR0aW5ncyIsImNvbnN0cnVjdG9yT3B0aW9ucyIsImRhdGFBdHRyaWJ1dGVPcHRpb25zIiwibWVyZ2VkU2V0dGluZ3MiLCJfb2JqZWN0U3ByZWFkIiwiX2kiLCJfT2JqZWN0JGVudHJpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwibGVuZ3RoIiwiX09iamVjdCRlbnRyaWVzJF9pIiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiaSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwibmV4dCIsImRvbmUiLCJwdXNoIiwidmFsdWUiLCJlcnIiLCJyZXR1cm4iLCJvIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJuIiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIlR5cGVFcnJvciIsImtleSIsImtleVN0cmlwcGVkIiwic3RyaW5nIiwicmVwbGFjZSIsImNoYXJBdCIsInRvTG93ZXJDYXNlIiwiX19fYXJyYXlMaWtlVG9BcnJheV8xIiwibGVuIiwiYXJyMiIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsInJlc29sdmUiLCJyZWplY3QiLCJfbmV4dCIsIl90aHJvdyIsImFyZyIsImluZm8iLCJlcnJvciIsIlByb21pc2UiLCJ0aGVuIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJmbiIsInNlbGYiLCJ0aGlzIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJkZWZpbmVQcm9wZXJ0eSIsIl9jbGFzc1ByaXZhdGVGaWVsZEdldCIsInJlY2VpdmVyIiwicHJpdmF0ZU1hcCIsImdldCIsIl9jbGFzc1ByaXZhdGVGaWVsZFNldCIsInNldCIsIl9sb2FkaW5nTGF5ZXIiLCJXZWFrTWFwIiwiX2Zvcm1WYWxpZGF0b3IiLCJfZGVmYXVsdHMiLCJfaW5pdCIsIldlYWtTZXQiLCJBamF4Rm9ybSIsImVsZW1lbnQiLCJsb2FkaW5nTGF5ZXIiLCJmb3JtVmFsaWRhdG9yIiwib3B0aW9ucyIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJhZGQiLCJ0YXJnZXRFbGVtZW50IiwibG9hZGluZ092ZXJsYXkiLCJjdXN0b21Gb3JtRGF0YSIsInNjcm9sbE9mZnNldEVsZW1lbnQiLCJtZXRob2QiLCJpc0Zvcm1WYWxpZCIsInNldHRpbmdzIiwibWVyZ2VTZXR0aW5ncyIsImpRdWVyeSIsImRhdGEiLCJwcml2YXRlU2V0IiwiaGFzIiwiX2luaXQyIiwicHJvdG9Qcm9wcyIsIl9kZWNvZGVSZXNwb25zZSIsIl9oYW5kbGVTdWNjZXNzZnVsUmVzcG9uc2UiLCJfaGFuZGxlUmVzcG9uc2VFcnJvciIsIl9wZXJmb3JtQWpheFJlcXVlc3QiLCJmaW5kIiwiY2xpY2siLCJjbG9zZXN0IiwicmVtb3ZlQXR0ciIsImF0dHIiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJtYXJrIiwiX2NhbGxlZSIsIiRmb3JtIiwiaGFzaCIsIiRzdWJtaXRCdXR0b24iLCJfdGhpcyRzZXR0aW5ncyRtZXRob2QiLCJfdGhpcyRzZXR0aW5ncyRtZXRob2QyIiwicmVzcG9uc2UiLCJ3cmFwIiwiX2NvbnRleHQiLCJwcmV2Iiwic2hvd0xvYWRpbmdMYXllciIsImRpc2FibGVTdWJtaXRCdXR0b24iLCJ0b1VwcGVyQ2FzZSIsImZldGNoIiwiYm9keSIsInByZXBhcmVGb3JtRGF0YSIsImhlYWRlcnMiLCJYLVJlcXVlc3RlZC1XaXRoIiwic2VudCIsIm9rIiwiaGFuZGxlUmVzcG9uc2VFcnJvciIsImhhbmRsZVN1Y2Nlc3NmdWxSZXNwb25zZSIsInQwIiwiY2F0Y2giLCJjb25zb2xlIiwiaGlkZUxvYWRpbmdMYXllciIsImVuYWJsZVN1Ym1pdEJ1dHRvbiIsImZpbmlzaCIsInN0b3AiLCJpbml0aWFsRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwiX2NhbGxlZTIiLCJyZXNwb25zZURhdGEiLCJfY29udGV4dDIiLCJjbG9uZSIsInRleHQiLCJzdGF0dXMiLCJoYW5kbGVGb3JtRXJyb3JNZXNzYWdlcyIsImRvY3VtZW50IiwidHJpZ2dlciIsIm9wZW4iLCJ3cml0ZSIsImNsb3NlIiwiX3giLCJfeDIiLCJfY2FsbGVlMyIsImNhbGxiYWNrIiwiX2NvbnRleHQzIiwiZGVjb2RlUmVzcG9uc2UiLCJ3aW5kb3ciLCJyZWRpcmVjdF91cmwiLCJyZWRpcmVjdFRvTmV3UGFnZSIsInNjcm9sbEludG9WaWV3IiwicmVwbGFjZUNvbnRlbnQiLCJyZWJpbmRIYW5kbGVycyIsImxvY2F0aW9uIiwiX3gzIiwiX3g0IiwiX3g1IiwiYWRkTG9hZGluZ0xheWVyIiwicHJvcCIsIl9jYWxsZWU0IiwiX2NvbnRleHQ0IiwianNvbiIsImFicnVwdCIsIl94NiIsImhyZWYiLCJyZWxvYWQiLCJvZmZzZXRUb3AiLCJvZmZzZXQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJhbmltYXRlIiwiaHRtbCIsImZvcm1TdWJtaXQiLCJmaW5kU3VibWl0QnV0dG9uIiwiXyRhamF4Rm9ybV8xIiwiX3RoaXMiLCJ0aGF0Iiwibm9WYWxpZGF0ZSIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2V0Rm9ybUFzVmFsaWQiLCJwcmVWYWxpZGF0ZUZvcm0iLCJwZXJmb3JtQWpheFJlcXVlc3QiLCJyZW1vdmVBbGxQcmV2aW91c0Vycm9ycyIsImNoZWNrRm9ybUVsZW1lbnRzRm9yRXJyb3JzIiwiX19fZGVmaW5lUHJvcGVydGllc18zIiwiX2NsYXNzUHJpdmF0ZU1ldGhvZEdldCIsIl9fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0XzMiLCJfb3B0aW9ucyIsIl90b2dnbGVMb2FkaW5nTGF5ZXIiLCJMb2FkaW5nTGF5ZXIiLCJsb2FkaW5nVGV4dCIsImdldEVsZW1lbnRCeUlkIiwiJGJvZHkiLCJhcHBlbmRUbyIsIl90b2dnbGVMb2FkaW5nTGF5ZXIyIiwiXyRsb2FkaW5nTGF5ZXJfMyIsInNob3ciLCJfZG9jdW1lbnQkZ2V0RWxlbWVudEIiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJGb3JtVmFsaWRhdG9yIiwiX2lzRWxlbWVudEluVmlld3BvcnQiLCJfc2Nyb2xsVG9GaXJzdEZvcm1FcnJvciIsIl9wcmV0dHlQcmludFJlc3BvbnNlRXJyb3JNZXNzYWdlcyIsIl9mb2N1c1RhYldpdGhGaXJzdEVycm9yTWVzc2FnZSIsIl9hZGRFcnJvck1lc3NhZ2VUb0Zvcm1GaWVsZCIsIl9yZW1vdmVFcnJvck1lc3NhZ2VGcm9tRm9ybUZpZWxkIiwiX2FkZEVycm9yRGVjb3JhdGlvblRvRm9ybUdyb3VwIiwiX2lzRm9ybVZhbGlkIiwiZm9ybSIsIl9fX2NsYXNzUHJpdmF0ZU1ldGhvZEdldF8yIiwiX2ZvY3VzVGFiV2l0aEZpcnN0RXJyb3JNZXNzYWdlMiIsIl9zY3JvbGxUb0ZpcnN0Rm9ybUVycm9yMiIsIl9fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0XzIiLCJyZW1vdmVDbGFzcyIsInJlbW92ZSIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJlbGVtZW50cyIsInMiLCJmaWVsZCIsIm5vZGVOYW1lIiwiY2hlY2tWYWxpZGl0eSIsIl9hZGRFcnJvckRlY29yYXRpb25Ub0Zvcm1Hcm91cDIiLCJfYWRkRXJyb3JNZXNzYWdlVG9Gb3JtRmllbGQyIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfX19jbGFzc1ByaXZhdGVGaWVsZFNldF8yIiwiZiIsImVycm9yTWVzc2FnZXNIdG1sIiwiJGVycm9yQm94IiwiJG1vZGFsQm9keSIsImhpZGUiLCJwcmVwZW5kVG8iLCJpcyIsImZhZGVJbiIsIl9wcmV0dHlQcmludFJlc3BvbnNlRXJyb3JNZXNzYWdlczIiLCJfX19kZWZpbmVQcm9wZXJ0aWVzXzIiLCJfJGZvcm1WYWxpZGF0b3JfMiIsIiQiLCIkZWxlbSIsImFkZENsYXNzIiwiX3JlbW92ZUVycm9yTWVzc2FnZUZyb21Gb3JtRmllbGQyIiwiJGVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJ0YWJJZCIsInRhYiIsImZvY3VzIiwiZWFjaCIsImluZGV4IiwiJHRoaXMiLCJlcnJvckNsYXNzIiwiZmlsdGVyIiwiJGZvcm1FcnJvcnMiLCJfaXNFbGVtZW50SW5WaWV3cG9ydDIiLCIkc2Nyb2xsT2Zmc2V0RWxlbWVudCIsImhlaWdodCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwiYm90dG9tIiwiaW5uZXJIZWlnaHQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRIZWlnaHQiLCJyaWdodCIsImlubmVyV2lkdGgiLCJjbGllbnRXaWR0aCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxJQUFBQSxFQUFBLHEyQkNJTyxTQUF1QkMsRUFBaUJDLEVBQW9CQyxHQUdqRSxJQUZBLElBQU1DLEVBQWNDLEVBQUFBLEVBQUEsR0FBUUosR0FBb0JDLEdBRWhESSxFQUFBLEVBQUFDLEVBQXlCQyxPQUFPQyxRQUFRTixHQUF4Q0csRUFBQUMsRUFBQUcsT0FBQUosSUFBK0QsQ0FBQSxJQUFBSyxHQUFBLEVBQUEsU0FBQUMsR0FBQSxHQUFBQyxNQUFBQyxRQUFBRixH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QUNoQnlNLEVBQUVoSyxLQUNBekMsS0FDQSxvQkFDQSxJQUFJc0ksRUFBQTlHLFNBQVN4QixLQUFNLElBQUk2SixFQUFBTixhQUFhdkosS0FBTTRCLEdBQVUsSUFBSTRLLEVBQUF0QyxjQUFpQnRJLFFBTWpGNkssRUFBRSwyQkFBMkJyRSxhQUU3QnFFLEVBQUV6RyxVQUFVMEMsR0FBRyxXQUFXLFNBQUNDLEdBQ3pCOEQsRUFBRTlELEVBQUV0SSxRQUFRNkMsS0FBSywyQkFBMkJrRixnQkwzQmhEIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSBieSB0aGUgQUNQMyBEZXZlbG9wZXJzLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHRvcC1sZXZlbCBtb2R1bGUgZGlyZWN0b3J5IGZvciBsaWNlbnNpbmcgZGV0YWlscy5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VTZXR0aW5ncyhkZWZhdWx0U2V0dGluZ3MsIGNvbnN0cnVjdG9yT3B0aW9ucywgZGF0YUF0dHJpYnV0ZU9wdGlvbnMpIHtcbiAgY29uc3QgbWVyZ2VkU2V0dGluZ3MgPSB7IC4uLmRlZmF1bHRTZXR0aW5ncywgLi4uY29uc3RydWN0b3JPcHRpb25zIH07XG5cbiAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGFBdHRyaWJ1dGVPcHRpb25zKSkge1xuICAgIGNvbnN0IGtleVN0cmlwcGVkID0gbG93ZXJDYXNlRmlyc3RMZXR0ZXIoa2V5LnJlcGxhY2UoXCJhamF4Rm9ybVwiLCBcIlwiKSk7XG5cbiAgICBpZiAoa2V5U3RyaXBwZWQubGVuZ3RoID4gMCAmJiB0eXBlb2YgbWVyZ2VkU2V0dGluZ3Nba2V5U3RyaXBwZWRdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBtZXJnZWRTZXR0aW5nc1trZXlTdHJpcHBlZF0gPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkU2V0dGluZ3M7XG59XG5cbmZ1bmN0aW9uIGxvd2VyQ2FzZUZpcnN0TGV0dGVyKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufVxuIiwiLypcbiAqIENvcHlyaWdodCAoYykgYnkgdGhlIEFDUDMgRGV2ZWxvcGVycy5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGF0IHRoZSB0b3AtbGV2ZWwgbW9kdWxlIGRpcmVjdG9yeSBmb3IgbGljZW5zaW5nIGRldGFpbHMuXG4gKi9cblxuaW1wb3J0IHsgbWVyZ2VTZXR0aW5ncyB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmV4cG9ydCBjbGFzcyBBamF4Rm9ybSB7XG4gICNsb2FkaW5nTGF5ZXI7XG4gICNmb3JtVmFsaWRhdG9yO1xuICAjZGVmYXVsdHMgPSB7XG4gICAgdGFyZ2V0RWxlbWVudDogXCIjY29udGVudFwiLFxuICAgIGxvYWRpbmdPdmVybGF5OiB0cnVlLFxuICAgIGN1c3RvbUZvcm1EYXRhOiBudWxsLFxuICAgIHNjcm9sbE9mZnNldEVsZW1lbnQ6IG51bGwsXG4gICAgbWV0aG9kOiBudWxsLFxuICB9O1xuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7TG9hZGluZ0xheWVyfSBsb2FkaW5nTGF5ZXJcbiAgICogQHBhcmFtIHtGb3JtVmFsaWRhdG9yfSBmb3JtVmFsaWRhdG9yXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqL1xuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBsb2FkaW5nTGF5ZXIsIGZvcm1WYWxpZGF0b3IsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuaXNGb3JtVmFsaWQgPSB0cnVlO1xuXG4gICAgdGhpcy4jbG9hZGluZ0xheWVyID0gbG9hZGluZ0xheWVyO1xuICAgIHRoaXMuI2Zvcm1WYWxpZGF0b3IgPSBmb3JtVmFsaWRhdG9yO1xuXG4gICAgdGhpcy5zZXR0aW5ncyA9IG1lcmdlU2V0dGluZ3ModGhpcy4jZGVmYXVsdHMsIG9wdGlvbnMsIGpRdWVyeShlbGVtZW50KS5kYXRhKCkpO1xuICAgIHRoaXMuI2luaXQoKTtcbiAgfVxuXG4gICNpbml0KCkge1xuICAgIGNvbnN0IHRoYXQgPSB0aGlzO1xuXG4gICAgdGhpcy5maW5kU3VibWl0QnV0dG9uKCk7XG4gICAgdGhpcy5hZGRMb2FkaW5nTGF5ZXIoKTtcbiAgICB0aGlzLmVsZW1lbnQubm9WYWxpZGF0ZSA9IHRydWU7XG5cbiAgICBqUXVlcnkodGhpcy5lbGVtZW50KVxuICAgICAgLm9uKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICB0aGlzLiNmb3JtVmFsaWRhdG9yLnNldEZvcm1Bc1ZhbGlkKCk7XG5cbiAgICAgICAgalF1ZXJ5KGRvY3VtZW50KS50cmlnZ2VyKFwiYWNwMy5hamF4RnJvbS5zdWJtaXQuYmVmb3JlXCIsIFt0aGlzXSk7XG5cbiAgICAgICAgaWYgKHRoaXMuI2Zvcm1WYWxpZGF0b3IuaXNGb3JtVmFsaWQgJiYgdGhpcy4jZm9ybVZhbGlkYXRvci5wcmVWYWxpZGF0ZUZvcm0odGhpcy5lbGVtZW50KSkge1xuICAgICAgICAgIHRoaXMucGVyZm9ybUFqYXhSZXF1ZXN0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoalF1ZXJ5KHRoaXMpLnByb3AoXCJ0YWdOYW1lXCIpID09PSBcIkFcIikge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIHRoYXQucGVyZm9ybUFqYXhSZXF1ZXN0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAub24oXCJjaGFuZ2VcIiwgKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy4jZm9ybVZhbGlkYXRvci5pc0Zvcm1WYWxpZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICB0aGlzLiNmb3JtVmFsaWRhdG9yLnJlbW92ZUFsbFByZXZpb3VzRXJyb3JzKCk7XG4gICAgICAgICAgdGhpcy4jZm9ybVZhbGlkYXRvci5jaGVja0Zvcm1FbGVtZW50c0ZvckVycm9ycyh0aGlzLmVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIGZpbmRTdWJtaXRCdXR0b24oKSB7XG4gICAgalF1ZXJ5KHRoaXMuZWxlbWVudClcbiAgICAgIC5maW5kKFwiOnN1Ym1pdFwiKVxuICAgICAgLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgalF1ZXJ5KFwiOnN1Ym1pdFwiLCBqUXVlcnkodGhpcykuY2xvc2VzdChcImZvcm1cIikpLnJlbW92ZUF0dHIoXCJkYXRhLWNsaWNrZWRcIik7XG4gICAgICAgIGpRdWVyeSh0aGlzKS5hdHRyKFwiZGF0YS1jbGlja2VkXCIsIFwidHJ1ZVwiKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgcGVyZm9ybUFqYXhSZXF1ZXN0KCkge1xuICAgIGNvbnN0ICRmb3JtID0galF1ZXJ5KHRoaXMuZWxlbWVudCk7XG5cbiAgICBsZXQgaGFzaCwgJHN1Ym1pdEJ1dHRvbjtcblxuICAgIGlmICgkZm9ybS5hdHRyKFwibWV0aG9kXCIpKSB7XG4gICAgICAkc3VibWl0QnV0dG9uID0galF1ZXJ5KCc6c3VibWl0W2RhdGEtY2xpY2tlZD1cInRydWVcIl0nLCAkZm9ybSk7XG5cbiAgICAgIGhhc2ggPSAkc3VibWl0QnV0dG9uLmRhdGEoXCJoYXNoQ2hhbmdlXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBoYXNoID0gJGZvcm0uZGF0YShcImhhc2hDaGFuZ2VcIik7XG4gICAgfVxuXG4gICAgdGhpcy4jbG9hZGluZ0xheWVyLnNob3dMb2FkaW5nTGF5ZXIoKTtcbiAgICB0aGlzLmRpc2FibGVTdWJtaXRCdXR0b24oJHN1Ym1pdEJ1dHRvbik7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgbWV0aG9kID0gJGZvcm0uYXR0cihcIm1ldGhvZFwiKVxuICAgICAgICA/ICRmb3JtLmF0dHIoXCJtZXRob2RcIikudG9VcHBlckNhc2UoKVxuICAgICAgICA6IHRoaXMuc2V0dGluZ3MubWV0aG9kPy50b1VwcGVyQ2FzZSgpID8/IFwiR0VUXCI7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCRmb3JtLmF0dHIoXCJhY3Rpb25cIikgfHwgJGZvcm0uYXR0cihcImhyZWZcIiksIHtcbiAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgIGJvZHk6IG1ldGhvZCAhPT0gXCJHRVRcIiA/IHRoaXMucHJlcGFyZUZvcm1EYXRhKCRmb3JtKSA6IG51bGwsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICBcIlgtUmVxdWVzdGVkLVdpdGhcIjogXCJYTUxIdHRwUmVxdWVzdFwiLFxuICAgICAgICB9LFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgYXdhaXQgdGhpcy5oYW5kbGVSZXNwb25zZUVycm9yKHJlc3BvbnNlLCAkZm9ybSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhd2FpdCB0aGlzLmhhbmRsZVN1Y2Nlc3NmdWxSZXNwb25zZShyZXNwb25zZSwgJGZvcm0sIGhhc2gpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy4jbG9hZGluZ0xheWVyLmhpZGVMb2FkaW5nTGF5ZXIoKTtcbiAgICAgIHRoaXMuZW5hYmxlU3VibWl0QnV0dG9uKCRzdWJtaXRCdXR0b24pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJGZvcm1cbiAgICogQHJldHVybnMge0Zvcm1EYXRhfVxuICAgKi9cbiAgcHJlcGFyZUZvcm1EYXRhKCRmb3JtKSB7XG4gICAgY29uc3QgaW5pdGlhbERhdGEgPSB0aGlzLnNldHRpbmdzLmN1c3RvbUZvcm1EYXRhIHx8IHt9O1xuICAgIGxldCBkYXRhO1xuXG4gICAgaWYgKCRmb3JtLmF0dHIoXCJtZXRob2RcIikpIHtcbiAgICAgIGNvbnN0ICRzdWJtaXRCdXR0b24gPSBqUXVlcnkoJzpzdWJtaXRbZGF0YS1jbGlja2VkPVwidHJ1ZVwiXScsICRmb3JtKTtcblxuICAgICAgZGF0YSA9IG5ldyBGb3JtRGF0YSgkZm9ybVswXSk7XG5cbiAgICAgIGlmICgkc3VibWl0QnV0dG9uLmxlbmd0aCkge1xuICAgICAgICBkYXRhLmFwcGVuZCgkc3VibWl0QnV0dG9uLmF0dHIoXCJuYW1lXCIpLCBcIjFcIik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoaW5pdGlhbERhdGEpKSB7XG4gICAgICBkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNwb25zZVxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJGZvcm1cbiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBhc3luYyBoYW5kbGVSZXNwb25zZUVycm9yKHJlc3BvbnNlLCAkZm9ybSkge1xuICAgIGNvbnN0IHJlc3BvbnNlRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmNsb25lKCkudGV4dCgpO1xuXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7XG4gICAgICB0aGlzLiNmb3JtVmFsaWRhdG9yLmhhbmRsZUZvcm1FcnJvck1lc3NhZ2VzKCRmb3JtLCByZXNwb25zZURhdGEpO1xuXG4gICAgICBqUXVlcnkoZG9jdW1lbnQpLnRyaWdnZXIoXCJhY3AzLmFqYXhGcm9tLnN1Ym1pdC5mYWlsXCIsIFt0aGlzXSk7XG4gICAgfSBlbHNlIGlmIChyZXNwb25zZURhdGEubGVuZ3RoID4gMCkge1xuICAgICAgZG9jdW1lbnQub3BlbigpO1xuICAgICAgZG9jdW1lbnQud3JpdGUocmVzcG9uc2VEYXRhKTtcbiAgICAgIGRvY3VtZW50LmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7UmVzcG9uc2V9IHJlc3BvbnNlXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkZm9ybVxuICAgKiBAcGFyYW0ge3N0cmluZ30gaGFzaFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICovXG4gIGFzeW5jIGhhbmRsZVN1Y2Nlc3NmdWxSZXNwb25zZShyZXNwb25zZSwgJGZvcm0sIGhhc2gpIHtcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCB0aGlzLmRlY29kZVJlc3BvbnNlKHJlc3BvbnNlKTtcblxuICAgIGxldCBjYWxsYmFjayA9ICRmb3JtLmRhdGEoXCJhamF4LWZvcm0tY29tcGxldGUtY2FsbGJhY2tcIik7XG5cbiAgICBpZiAodHlwZW9mIHdpbmRvd1tjYWxsYmFja10gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgd2luZG93W2NhbGxiYWNrXShyZXNwb25zZURhdGEpO1xuICAgIH0gZWxzZSBpZiAocmVzcG9uc2VEYXRhLnJlZGlyZWN0X3VybCkge1xuICAgICAgdGhpcy5yZWRpcmVjdFRvTmV3UGFnZShoYXNoLCByZXNwb25zZURhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNjcm9sbEludG9WaWV3KCk7XG4gICAgICB0aGlzLnJlcGxhY2VDb250ZW50KGhhc2gsIHJlc3BvbnNlRGF0YSk7XG4gICAgICB0aGlzLnJlYmluZEhhbmRsZXJzKGhhc2gpO1xuXG4gICAgICBqUXVlcnkoZG9jdW1lbnQpLnRyaWdnZXIoXCJhY3AzLmFqYXhGcm9tLmNvbXBsZXRlXCIpO1xuXG4gICAgICBpZiAodHlwZW9mIGhhc2ggIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGFkZExvYWRpbmdMYXllcigpIHtcbiAgICBpZiAodGhpcy5zZXR0aW5ncy5sb2FkaW5nT3ZlcmxheSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLiNsb2FkaW5nTGF5ZXIuYWRkTG9hZGluZ0xheWVyKCk7XG4gIH1cblxuICBkaXNhYmxlU3VibWl0QnV0dG9uKCRzdWJtaXRCdXR0b24pIHtcbiAgICBpZiAodHlwZW9mICRzdWJtaXRCdXR0b24gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICRzdWJtaXRCdXR0b24ucHJvcChcImRpc2FibGVkXCIsIHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIGVuYWJsZVN1Ym1pdEJ1dHRvbigkc3VibWl0QnV0dG9uKSB7XG4gICAgaWYgKHR5cGVvZiAkc3VibWl0QnV0dG9uICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAkc3VibWl0QnV0dG9uLnByb3AoXCJkaXNhYmxlZFwiLCBmYWxzZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7UmVzcG9uc2V9IHJlc3BvbnNlXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPCo+fVxuICAgKi9cbiAgYXN5bmMgZGVjb2RlUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmNsb25lKCkuanNvbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuY2xvbmUoKS50ZXh0KCk7XG4gICAgfVxuICB9XG5cbiAgcmVkaXJlY3RUb05ld1BhZ2UoaGFzaCwgcmVzcG9uc2VEYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBoYXNoICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHJlc3BvbnNlRGF0YS5yZWRpcmVjdF91cmwgKyBoYXNoO1xuICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHJlc3BvbnNlRGF0YS5yZWRpcmVjdF91cmw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNjcm9sbCB0byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjb250ZW50IGFyZWEsIGlmIHRoZSBjdXJyZW50IHZpZXdwb3J0IGlzIG5lYXIgdGhlIGJvdHRvbVxuICAgKi9cbiAgc2Nyb2xsSW50b1ZpZXcoKSB7XG4gICAgY29uc3Qgb2Zmc2V0VG9wID0galF1ZXJ5KHRoaXMuc2V0dGluZ3MudGFyZ2V0RWxlbWVudCkub2Zmc2V0KCkudG9wO1xuXG4gICAgaWYgKGpRdWVyeShkb2N1bWVudCkuc2Nyb2xsVG9wKCkgPiBvZmZzZXRUb3ApIHtcbiAgICAgIGpRdWVyeShcImh0bWwsIGJvZHlcIikuYW5pbWF0ZShcbiAgICAgICAge1xuICAgICAgICAgIHNjcm9sbFRvcDogb2Zmc2V0VG9wLFxuICAgICAgICB9LFxuICAgICAgICBcImZhc3RcIlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICByZXBsYWNlQ29udGVudChoYXNoLCByZXNwb25zZURhdGEpIHtcbiAgICBpZiAoaGFzaCAmJiBqUXVlcnkoaGFzaCkubGVuZ3RoKSB7XG4gICAgICBqUXVlcnkoaGFzaCkuaHRtbChqUXVlcnkocmVzcG9uc2VEYXRhKS5maW5kKGhhc2gpLmh0bWwoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGpRdWVyeSh0aGlzLnNldHRpbmdzLnRhcmdldEVsZW1lbnQpLmh0bWwocmVzcG9uc2VEYXRhKTtcbiAgICB9XG4gIH1cblxuICByZWJpbmRIYW5kbGVycyhoYXNoKSB7XG4gICAgY29uc3QgJGJpbmRpbmdUYXJnZXQgPSBoYXNoICYmIGpRdWVyeShoYXNoKS5sZW5ndGggPyBqUXVlcnkoaGFzaCkgOiBqUXVlcnkodGhpcy5zZXR0aW5ncy50YXJnZXRFbGVtZW50KTtcblxuICAgICRiaW5kaW5nVGFyZ2V0LmZpbmQoJ1tkYXRhLWFqYXgtZm9ybT1cInRydWVcIl0nKS5mb3JtU3VibWl0KCk7XG5cbiAgICB0aGlzLmZpbmRTdWJtaXRCdXR0b24oKTtcbiAgfVxufVxuIiwiLypcbiAqIENvcHlyaWdodCAoYykgYnkgdGhlIEFDUDMgRGV2ZWxvcGVycy5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGF0IHRoZSB0b3AtbGV2ZWwgbW9kdWxlIGRpcmVjdG9yeSBmb3IgbGljZW5zaW5nIGRldGFpbHMuXG4gKi9cblxuaW1wb3J0IHsgbWVyZ2VTZXR0aW5ncyB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmV4cG9ydCBjbGFzcyBMb2FkaW5nTGF5ZXIge1xuICAjb3B0aW9ucyA9IHtcbiAgICBsb2FkaW5nVGV4dDogXCJcIixcbiAgfTtcblxuICBjb25zdHJ1Y3RvcihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy4jb3B0aW9ucyA9IG1lcmdlU2V0dGluZ3ModGhpcy4jb3B0aW9ucywgb3B0aW9ucywgalF1ZXJ5KGVsZW1lbnQpLmRhdGEoKSB8fCB7fSk7XG4gIH1cblxuICBhZGRMb2FkaW5nTGF5ZXIoKSB7XG4gICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmctbGF5ZXJcIikpIHtcbiAgICAgIGNvbnN0ICRib2R5ID0galF1ZXJ5KFwiYm9keVwiKSxcbiAgICAgICAgaHRtbCA9XG4gICAgICAgICAgJzxkaXYgaWQ9XCJsb2FkaW5nLWxheWVyXCIgY2xhc3M9XCJsb2FkaW5nLWxheWVyXCI+PGgxPjxzcGFuIGNsYXNzPVwiZmFzIGZhLXNwaW5uZXIgZmEtc3BpblwiPjwvc3Bhbj4gJyArXG4gICAgICAgICAgdGhpcy4jb3B0aW9ucy5sb2FkaW5nVGV4dCArXG4gICAgICAgICAgXCI8L2gxPjwvZGl2PlwiO1xuXG4gICAgICBqUXVlcnkoaHRtbCkuYXBwZW5kVG8oJGJvZHkpO1xuICAgIH1cbiAgfVxuXG4gIHNob3dMb2FkaW5nTGF5ZXIoKSB7XG4gICAgdGhpcy4jdG9nZ2xlTG9hZGluZ0xheWVyKHRydWUpO1xuICB9XG5cbiAgaGlkZUxvYWRpbmdMYXllcigpIHtcbiAgICB0aGlzLiN0b2dnbGVMb2FkaW5nTGF5ZXIoZmFsc2UpO1xuICB9XG5cbiAgI3RvZ2dsZUxvYWRpbmdMYXllcihzaG93KSB7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nLWxheWVyXCIpPy5jbGFzc0xpc3QudG9nZ2xlKFwibG9hZGluZy1sYXllcl9fYWN0aXZlXCIsIHNob3cpO1xuICB9XG59XG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSBieSB0aGUgQUNQMyBEZXZlbG9wZXJzLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHRvcC1sZXZlbCBtb2R1bGUgZGlyZWN0b3J5IGZvciBsaWNlbnNpbmcgZGV0YWlscy5cbiAqL1xuXG5leHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gICNpc0Zvcm1WYWxpZCA9IHRydWU7XG5cbiAgcHJlVmFsaWRhdGVGb3JtKGZvcm0pIHtcbiAgICB0aGlzLnJlbW92ZUFsbFByZXZpb3VzRXJyb3JzKCk7XG4gICAgdGhpcy5jaGVja0Zvcm1FbGVtZW50c0ZvckVycm9ycyhmb3JtKTtcbiAgICB0aGlzLiNmb2N1c1RhYldpdGhGaXJzdEVycm9yTWVzc2FnZSgpO1xuICAgIHRoaXMuI3Njcm9sbFRvRmlyc3RGb3JtRXJyb3IoKTtcblxuICAgIHJldHVybiB0aGlzLiNpc0Zvcm1WYWxpZDtcbiAgfVxuXG4gIHJlbW92ZUFsbFByZXZpb3VzRXJyb3JzKCkge1xuICAgIGpRdWVyeShcImZvcm0gLmZvcm0tZ3JvdXAuaGFzLWVycm9yXCIpLnJlbW92ZUNsYXNzKFwiaGFzLWVycm9yXCIpLmZpbmQoXCIudmFsaWRhdGlvbi1mYWlsZWRcIikucmVtb3ZlKCk7XG4gIH1cblxuICBjaGVja0Zvcm1FbGVtZW50c0ZvckVycm9ycyhmb3JtKSB7XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiBmb3JtLmVsZW1lbnRzKSB7XG4gICAgICBpZiAoZmllbGQubm9kZU5hbWUgIT09IFwiSU5QVVRcIiAmJiBmaWVsZC5ub2RlTmFtZSAhPT0gXCJURVhUQVJFQVwiICYmIGZpZWxkLm5vZGVOYW1lICE9PSBcIlNFTEVDVFwiKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWZpZWxkLmNoZWNrVmFsaWRpdHkoKSkge1xuICAgICAgICB0aGlzLiNhZGRFcnJvckRlY29yYXRpb25Ub0Zvcm1Hcm91cChqUXVlcnkoZmllbGQpKTtcbiAgICAgICAgdGhpcy4jYWRkRXJyb3JNZXNzYWdlVG9Gb3JtRmllbGQoalF1ZXJ5KGZpZWxkKSwgZmllbGQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuXG4gICAgICAgIHRoaXMuI2lzRm9ybVZhbGlkID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgI2FkZEVycm9yRGVjb3JhdGlvblRvRm9ybUdyb3VwKCRlbGVtKSB7XG4gICAgJGVsZW0uY2xvc2VzdChcIi5mb3JtLWdyb3VwXCIpLmFkZENsYXNzKFwiaGFzLWVycm9yXCIpO1xuICB9XG5cbiAgI3JlbW92ZUVycm9yTWVzc2FnZUZyb21Gb3JtRmllbGQoJGVsZW0pIHtcbiAgICAkZWxlbS5jbG9zZXN0KFwiZGl2XCIpLmZpbmQoXCIudmFsaWRhdGlvbi1mYWlsZWRcIikucmVtb3ZlKCk7XG4gIH1cblxuICAjYWRkRXJyb3JNZXNzYWdlVG9Gb3JtRmllbGQoJGVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xuICAgIHRoaXMuI3JlbW92ZUVycm9yTWVzc2FnZUZyb21Gb3JtRmllbGQoJGVsZW1lbnQpO1xuXG4gICAgJGVsZW1lbnRcbiAgICAgIC5jbG9zZXN0KFwiZGl2Om5vdCguaW5wdXQtZ3JvdXApOm5vdCguYnRuLWdyb3VwKVwiKVxuICAgICAgLmFwcGVuZChcbiAgICAgICAgJzxzbWFsbCBjbGFzcz1cImhlbHAtYmxvY2sgdmFsaWRhdGlvbi1mYWlsZWRcIj48aSBjbGFzcz1cImZhcyBmYS1leGNsYW1hdGlvbi1jaXJjbGVcIj48L2k+ICcgK1xuICAgICAgICAgIGVycm9yTWVzc2FnZSArXG4gICAgICAgICAgXCI8L3NtYWxsPlwiXG4gICAgICApO1xuICB9XG5cbiAgI2ZvY3VzVGFiV2l0aEZpcnN0RXJyb3JNZXNzYWdlKCkge1xuICAgIGlmIChqUXVlcnkoXCIudGFiYmFibGVcIikubGVuZ3RoID4gMCkge1xuICAgICAgbGV0ICRlbGVtID0galF1ZXJ5KFwiLnRhYmJhYmxlIC5mb3JtLWdyb3VwLmhhcy1lcnJvcjpmaXJzdFwiKSxcbiAgICAgICAgdGFiSWQgPSAkZWxlbS5jbG9zZXN0KFwiLnRhYi1wYW5lXCIpLnByb3AoXCJpZFwiKTtcbiAgICAgIGpRdWVyeSgnLnRhYmJhYmxlIC5uYXYtdGFicyBhW2hyZWY9XCIjJyArIHRhYklkICsgJ1wiXScpLnRhYihcInNob3dcIik7XG5cbiAgICAgICRlbGVtLmZpbmQoXCI6aW5wdXRcIikuZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBnZXQgaXNGb3JtVmFsaWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuI2lzRm9ybVZhbGlkO1xuICB9XG5cbiAgc2V0Rm9ybUFzVmFsaWQoKSB7XG4gICAgdGhpcy4jaXNGb3JtVmFsaWQgPSB0cnVlO1xuICB9XG5cbiAgaGFuZGxlRm9ybUVycm9yTWVzc2FnZXMoJGZvcm0sIGVycm9yTWVzc2FnZXNIdG1sKSB7XG4gICAgbGV0ICRlcnJvckJveCA9IGpRdWVyeShcIiNlcnJvci1ib3hcIik7XG4gICAgY29uc3QgJG1vZGFsQm9keSA9ICRmb3JtLmZpbmQoXCIubW9kYWwtYm9keVwiKTtcblxuICAgICRlcnJvckJveC5yZW1vdmUoKTtcblxuICAgIC8vIFBsYWNlIHRoZSBlcnJvciBtZXNzYWdlcyBpbnNpZGUgdGhlIG1vZGFsIGJvZHkgZm9yIGEgYmV0dGVyIHN0eWxpbmdcbiAgICAkZXJyb3JCb3ggPSBqUXVlcnkoZXJyb3JNZXNzYWdlc0h0bWwpO1xuXG4gICAgJGVycm9yQm94XG4gICAgICAuaGlkZSgpXG4gICAgICAucHJlcGVuZFRvKCRtb2RhbEJvZHkubGVuZ3RoID4gMCAmJiAkbW9kYWxCb2R5LmlzKFwiOnZpc2libGVcIikgPyAkbW9kYWxCb2R5IDogJGZvcm0pXG4gICAgICAuZmFkZUluKCk7XG5cbiAgICB0aGlzLiNwcmV0dHlQcmludFJlc3BvbnNlRXJyb3JNZXNzYWdlcygkZm9ybSwgJGVycm9yQm94KTtcbiAgfVxuXG4gICNwcmV0dHlQcmludFJlc3BvbnNlRXJyb3JNZXNzYWdlcygkZm9ybSwgJGVycm9yQm94KSB7XG4gICAgdGhpcy5yZW1vdmVBbGxQcmV2aW91c0Vycm9ycygpO1xuXG4gICAgLy8gaGlnaGxpZ2h0IGFsbCBpbnB1dCBmaWVsZHMgd2hlcmUgdGhlIHZhbGlkYXRpb24gaGFzIGZhaWxlZFxuICAgICRlcnJvckJveC5maW5kKFwibGlcIikuZWFjaCgoaW5kZXgsIGVsZW1lbnQpID0+IHtcbiAgICAgIGxldCAkdGhpcyA9IGpRdWVyeShlbGVtZW50KSxcbiAgICAgICAgZXJyb3JDbGFzcyA9ICR0aGlzLmRhdGEoXCJlcnJvclwiKTtcblxuICAgICAgaWYgKGVycm9yQ2xhc3MubGVuZ3RoID4gMCkge1xuICAgICAgICBsZXQgJGVsZW0gPVxuICAgICAgICAgICRmb3JtLmZpbmQoXCIjXCIgKyBlcnJvckNsYXNzKSB8fCAkZm9ybS5maW5kKCdbaWR8PVwiJyArIGVycm9yQ2xhc3MgKyAnXCJdJykuZmlsdGVyKCc6bm90KFtpZCQ9XCJjb250YWluZXJcIl0pJyk7XG5cbiAgICAgICAgaWYgKCRlbGVtLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB0aGlzLiNhZGRFcnJvckRlY29yYXRpb25Ub0Zvcm1Hcm91cCgkZWxlbSk7XG5cbiAgICAgICAgICAvLyBNb3ZlIHRoZSBlcnJvciBtZXNzYWdlIHRvIHRoZSByZXNwb25zaWJsZSBpbnB1dCBmaWVsZChzKVxuICAgICAgICAgIC8vIGFuZCByZW1vdmUgdGhlIGxpc3QgaXRlbSBmcm9tIHRoZSBlcnJvciBib3ggY29udGFpbmVyXG4gICAgICAgICAgaWYgKCRlbGVtLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdGhpcy4jYWRkRXJyb3JNZXNzYWdlVG9Gb3JtRmllbGQoJGVsZW0sICR0aGlzLmh0bWwoKSk7XG4gICAgICAgICAgICAkdGhpcy5yZW1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIGlmIGFsbCBsaXN0IGl0ZW1zIGhhdmUgYmVlbiByZW1vdmVkLCByZW1vdmUgdGhlIGVycm9yIGJveCBjb250YWluZXIgdG9vXG4gICAgaWYgKCRlcnJvckJveC5maW5kKFwibGlcIikubGVuZ3RoID09PSAwKSB7XG4gICAgICAkZXJyb3JCb3gucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgdGhpcy4jZm9jdXNUYWJXaXRoRmlyc3RFcnJvck1lc3NhZ2UoKTtcbiAgICB0aGlzLiNzY3JvbGxUb0ZpcnN0Rm9ybUVycm9yKCk7XG4gIH1cblxuICAjc2Nyb2xsVG9GaXJzdEZvcm1FcnJvcigpIHtcbiAgICBjb25zdCAkZm9ybSA9IGpRdWVyeSh0aGlzLmVsZW1lbnQpO1xuICAgIGNvbnN0ICRmb3JtRXJyb3JzID0gJGZvcm0uZmluZChcIi5mb3JtLWdyb3VwLmhhcy1lcnJvclwiKTtcblxuICAgIGlmICgkZm9ybS5jbG9zZXN0KFwiLm1vZGFsXCIpLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoISRmb3JtRXJyb3JzIHx8ICRmb3JtRXJyb3JzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiNpc0VsZW1lbnRJblZpZXdwb3J0KCRmb3JtLmZpbmQoXCIuaGVscC1ibG9jay52YWxpZGF0aW9uLWZhaWxlZFwiKSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgb2Zmc2V0VG9wID0gJGZvcm1FcnJvcnMub2Zmc2V0KCkudG9wO1xuXG4gICAgaWYgKHRoaXMuc2V0dGluZ3Muc2Nyb2xsT2Zmc2V0RWxlbWVudCkge1xuICAgICAgY29uc3QgJHNjcm9sbE9mZnNldEVsZW1lbnQgPSBqUXVlcnkodGhpcy5zZXR0aW5ncy5zY3JvbGxPZmZzZXRFbGVtZW50KTtcblxuICAgICAgaWYgKCRzY3JvbGxPZmZzZXRFbGVtZW50ICYmICRzY3JvbGxPZmZzZXRFbGVtZW50Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgb2Zmc2V0VG9wIC09ICRzY3JvbGxPZmZzZXRFbGVtZW50LmhlaWdodCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGpRdWVyeShcImh0bWwsIGJvZHlcIikuYW5pbWF0ZShcbiAgICAgIHtcbiAgICAgICAgc2Nyb2xsVG9wOiBvZmZzZXRUb3AsXG4gICAgICB9LFxuICAgICAgXCJmYXN0XCJcbiAgICApO1xuICB9XG5cbiAgI2lzRWxlbWVudEluVmlld3BvcnQoZWxlbWVudCkge1xuICAgIC8vIHNwZWNpYWwgYm9udXMgZm9yIHRob3NlIHVzaW5nIGpRdWVyeVxuICAgIGlmICh0eXBlb2YgalF1ZXJ5ID09PSBcImZ1bmN0aW9uXCIgJiYgZWxlbWVudCBpbnN0YW5jZW9mIGpRdWVyeSkge1xuICAgICAgZWxlbWVudCA9IGVsZW1lbnRbMF07XG4gICAgfVxuXG4gICAgY29uc3QgJHNjcm9sbE9mZnNldEVsZW1lbnQgPSBqUXVlcnkodGhpcy5zZXR0aW5ncy5zY3JvbGxPZmZzZXRFbGVtZW50KTtcbiAgICBsZXQgb2Zmc2V0VG9wID0gMDtcblxuICAgIGlmICgkc2Nyb2xsT2Zmc2V0RWxlbWVudCkge1xuICAgICAgb2Zmc2V0VG9wID0gJHNjcm9sbE9mZnNldEVsZW1lbnQuaGVpZ2h0KCk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgcmVjdC50b3AgPj0gb2Zmc2V0VG9wICYmXG4gICAgICByZWN0LmxlZnQgPj0gMCAmJlxuICAgICAgcmVjdC5ib3R0b20gPD0gKHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KSAmJlxuICAgICAgcmVjdC5yaWdodCA8PSAod2luZG93LmlubmVyV2lkdGggfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIGJ5IHRoZSBBQ1AzIERldmVsb3BlcnMuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBhdCB0aGUgdG9wLWxldmVsIG1vZHVsZSBkaXJlY3RvcnkgZm9yIGxpY2VuY2luZyBkZXRhaWxzLlxuICovXG5cbmltcG9ydCB7IEFqYXhGb3JtIH0gZnJvbSBcIi4uL2xpYi9hamF4LWZvcm1cIjtcbmltcG9ydCB7IExvYWRpbmdMYXllciB9IGZyb20gXCIuLi9saWIvbG9hZGluZy1sYXllclwiO1xuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9saWIvZm9ybS12YWxpZGF0b3JcIjtcblxuKCgkKSA9PiB7XG4gIGNvbnN0IHBsdWdpbk5hbWUgPSBcImZvcm1TdWJtaXRcIjtcblxuICAkLmZuW3BsdWdpbk5hbWVdID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSkpIHtcbiAgICAgICAgJC5kYXRhKFxuICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgXCJwbHVnaW5fXCIgKyBwbHVnaW5OYW1lLFxuICAgICAgICAgIG5ldyBBamF4Rm9ybSh0aGlzLCBuZXcgTG9hZGluZ0xheWVyKHRoaXMsIG9wdGlvbnMpLCBuZXcgRm9ybVZhbGlkYXRvcigpLCBvcHRpb25zKVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQoJ1tkYXRhLWFqYXgtZm9ybT1cInRydWVcIl0nKS5mb3JtU3VibWl0KCk7XG5cbiAgJChkb2N1bWVudCkub24oXCJkcmF3LmR0XCIsIChlKSA9PiB7XG4gICAgJChlLnRhcmdldCkuZmluZCgnW2RhdGEtYWpheC1mb3JtPVwidHJ1ZVwiXScpLmZvcm1TdWJtaXQoKTtcbiAgfSk7XG59KShqUXVlcnkpO1xuIl19","file":"ajax-form.min.js"}