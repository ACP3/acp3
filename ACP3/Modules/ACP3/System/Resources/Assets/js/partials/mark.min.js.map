{"version":3,"sources":["ACP3/Modules/ACP3/System/Resources/Assets/js/partials/mark.js"],"names":["cssClassName","markEntries","$markAllElem","name","action","fields","parents","next","find","jQuery","each","$tableRows","$","prop","addClass","removeClass","fn","highlightTableRow","checkboxName","$markAllCheckbox","closest","on","e","$tableRow","$tbody","target","type","nodeName","$elem","is","toggleClass","length","deleteMarkedResults","options","$this","settings","extend","checkBoxName","language","confirmationTextSingle","confirmationTextMultiple","noEntriesSelectedText","bootboxLocale","preventDefault","$entries","confirmationText","replace","bootbox","confirm","message","locale","callback","result","$form","formSubmit","customFormData","triggerHandler","alert","$markAll","index","element","click","data"],"mappings":"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","sourcesContent":["const cssClassName = 'info';\n\n/**\n * Marks all visible results\n *\n * @param $markAllElem\n * @param name\n * @param action\n */\nfunction markEntries($markAllElem, name, action) {\n    const fields = $markAllElem.parents('thead:first').next('tbody').find('input[name=\"' + name + '[]\"]:visible');\n\n    jQuery.each(fields, function () {\n        const $tableRows = $(this).prop('checked', (action === 'add')).parents('tr:first');\n\n        if (action === 'add') {\n            $tableRows.addClass(cssClassName);\n        } else {\n            $tableRows.removeClass(cssClassName);\n        }\n    });\n}\n\n/**\n *\n * @param checkboxName\n * @returns {*|jQuery|HTMLElement}\n */\njQuery.fn.highlightTableRow = function (checkboxName) {\n    const $markAllCheckbox = $(this);\n\n    $markAllCheckbox\n        .closest('table')\n        .on(\n            'click', 'tr:has(td :checkbox)',\n            function (e) {\n                const $tableRow = $(this),\n                    $tbody = $tableRow.closest('tbody');\n\n                if (e.target.type !== 'checkbox') {\n                    if (e.target.nodeName === 'A') {\n                        return;\n                    }\n\n                    const $elem = $('input[name=\"' + checkboxName + '[]\"]', this);\n                    $elem.prop('checked', !$elem.is(':checked'));\n                }\n\n                $tableRow.toggleClass(cssClassName);\n\n                // Alle DatensÃ¤tze auf einer Seite wurden markiert\n                $markAllCheckbox.prop(\n                    'checked',\n                    ($tbody.find('input[name=\"' + checkboxName + '[]\"]:visible').length === $tbody.find('tr.' + cssClassName + ':visible').length)\n                );\n            }\n        );\n\n    return $markAllCheckbox;\n};\n\n/**\n *\n * @param options\n * @returns {*|jQuery|HTMLElement}\n */\njQuery.fn.deleteMarkedResults = function (options) {\n    const defaults = {\n            checkBoxName: '',\n            language: {\n                confirmationTextSingle: '',\n                confirmationTextMultiple: '',\n                noEntriesSelectedText: ''\n            },\n            bootboxLocale: 'en'\n        },\n        $this = $(this),\n        settings = $.extend(defaults, options);\n\n    $this.on('click', function (e) {\n        e.preventDefault();\n\n        const $entries = $('form .table input[name=\"' + settings.checkBoxName + '[]\"]:checked');\n\n        if ($entries.length > 0) {\n            const confirmationText = $entries.length === 1\n                ? settings.language.confirmationTextSingle\n                : (settings.language.confirmationTextMultiple.replace('{items}', $entries.length));\n\n            bootbox.confirm({\n                message: confirmationText,\n                locale: settings.bootboxLocale,\n                callback: (result) => {\n                    if (result) {\n                        const $form = $this.closest('form');\n\n                        $form.formSubmit({\n                            customFormData: {\n                                action: 'confirmed'\n                            }\n                        });\n                        $form.triggerHandler('submit');\n                    }\n                }\n            });\n        } else {\n            bootbox.alert({\n                message: settings.language.noEntriesSelectedText,\n                locale: settings.bootboxLocale\n            });\n        }\n    });\n\n    return $this;\n};\n\n(($) => {\n    const $markAll = $('[data-mark-all-id]');\n\n    $markAll.each((index, element) => {\n        const $this = $(element);\n\n        $this\n            .click(function () {\n                markEntries($this, $this.data('checkbox-name'), $this.is(':checked') ? 'add' : 'remove');\n            })\n            .highlightTableRow($this.data('checkbox-name'));\n    });\n\n    $('form #adm-list .fa-trash')\n        .closest('.btn')\n        .deleteMarkedResults($markAll.data('delete-options'));\n})(jQuery);\n"],"file":"ACP3\\Modules\\ACP3\\System\\Resources\\Assets\\js\\partials\\mark.min.js"}