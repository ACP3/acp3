(e=>{const a=e.getElementById("db-name"),t=e.querySelectorAll("#db-host, #db-user, #db-password"),d=a.dataset.availableDatabasesUrl;let s=!1;t.forEach((n=>{n.addEventListener("change",(async()=>{a.disabled=!0;for(let e=1;e<a.children.length;++e)a.children[e].remove();t.forEach((e=>{e.classList.remove("is-invalid","is-valid")}));const s=new FormData;s.append("db_host",e.getElementById("db-host").value),s.append("db_user",e.getElementById("db-user").value),s.append("db_password",e.getElementById("db-password").value);try{const e=await fetch(d,{method:"POST",body:s,headers:{"X-Requested-With":"XMLHttpRequest"}}),n=await e.json();if(n.length>0){for(let e=0;e<n.length;++e)a.insertAdjacentHTML("beforeend",'<option value="'+n[e]+'">'+n[e]+"</option>");t.forEach((e=>{e.classList.add("is-valid")}))}else t.forEach((e=>{e.classList.add("is-invalid")}))}finally{a.disabled=!1}})),n.value&&!s&&(n.dispatchEvent(new InputEvent("change")),s=!0)}))})(document);
//# sourceMappingURL=available_databases.min.js.map