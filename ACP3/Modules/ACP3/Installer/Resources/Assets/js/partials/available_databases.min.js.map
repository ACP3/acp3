{"version":3,"file":"./ACP3/Modules/ACP3/Installer/Resources/Assets/js/partials/available_databases.min.js","mappings":"AAKA,CAAEA,IACA,MAAMC,EAASD,EAASE,eAAe,WACjCC,EAAaH,EAASI,iBAAiB,oCACvCC,EAAUJ,EAAOK,QAAQC,sBAC/B,IAAIC,GAAkB,EAEtBL,EAAWM,SAASC,IAClBA,EAAUC,iBAAiB,UAAUC,UACnCX,EAAOY,UAAW,EAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAOc,SAASC,SAAUF,EAC5Cb,EAAOc,SAASD,GAAGG,SAGrBd,EAAWM,SAASC,IAClBA,EAAUQ,UAAUD,OAAO,aAAc,WAAzC,IAGF,MAAME,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWrB,EAASE,eAAe,WAAWoB,OAC9DH,EAASE,OAAO,UAAWrB,EAASE,eAAe,WAAWoB,OAC9DH,EAASE,OAAO,cAAerB,EAASE,eAAe,eAAeoB,OAEtE,IACE,MAAMC,QAAiBC,MAAMnB,EAAS,CACpCoB,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACP,mBAAoB,oBAGlBC,QAAqBL,EAASM,OAEpC,GAAID,EAAaZ,OAAS,EAAG,CAC3B,IAAK,IAAIF,EAAI,EAAGA,EAAIc,EAAaZ,SAAUF,EACzCb,EAAO6B,mBACL,YACA,kBAAoBF,EAAad,GAAK,KAAOc,EAAad,GAAK,aAInEX,EAAWM,SAASC,IAClBA,EAAUQ,UAAUa,IAAI,WAAxB,GAEH,MACC5B,EAAWM,SAASC,IAClBA,EAAUQ,UAAUa,IAAI,aAAxB,GAKL,CA5BD,QA2BE9B,EAAOY,UAAW,CACnB,KAGCH,EAAUY,QAAUd,IACtBE,EAAUsB,cAAc,IAAIC,WAAW,WAEvCzB,GAAkB,EACnB,GA1DL,GA4DGR","sources":["webpack://acp3-cms/./ACP3/Modules/ACP3/Installer/Resources/Assets/js/partials/available_databases.js"],"sourcesContent":["/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\n((document) => {\n  const dbName = document.getElementById(\"db-name\");\n  const formFields = document.querySelectorAll(\"#db-host, #db-user, #db-password\");\n  const ajaxUrl = dbName.dataset.availableDatabasesUrl;\n  let formIsPrefilled = false;\n\n  formFields.forEach((formField) => {\n    formField.addEventListener(\"change\", async () => {\n      dbName.disabled = true;\n\n      for (let i = 1; i < dbName.children.length; ++i) {\n        dbName.children[i].remove();\n      }\n\n      formFields.forEach((formField) => {\n        formField.classList.remove(\"is-invalid\", \"is-valid\");\n      });\n\n      const formData = new FormData();\n      formData.append(\"db_host\", document.getElementById(\"db-host\").value);\n      formData.append(\"db_user\", document.getElementById(\"db-user\").value);\n      formData.append(\"db_password\", document.getElementById(\"db-password\").value);\n\n      try {\n        const response = await fetch(ajaxUrl, {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n          },\n        });\n        const responseData = await response.json();\n\n        if (responseData.length > 0) {\n          for (let i = 0; i < responseData.length; ++i) {\n            dbName.insertAdjacentHTML(\n              \"beforeend\",\n              '<option value=\"' + responseData[i] + '\">' + responseData[i] + \"</option>\"\n            );\n          }\n\n          formFields.forEach((formField) => {\n            formField.classList.add(\"is-valid\");\n          });\n        } else {\n          formFields.forEach((formField) => {\n            formField.classList.add(\"is-invalid\");\n          });\n        }\n      } finally {\n        dbName.disabled = false;\n      }\n    });\n\n    if (formField.value && !formIsPrefilled) {\n      formField.dispatchEvent(new InputEvent(\"change\"));\n\n      formIsPrefilled = true;\n    }\n  });\n})(document);\n"],"names":["document","dbName","getElementById","formFields","querySelectorAll","ajaxUrl","dataset","availableDatabasesUrl","formIsPrefilled","forEach","formField","addEventListener","async","disabled","i","children","length","remove","classList","formData","FormData","append","value","response","fetch","method","body","headers","responseData","json","insertAdjacentHTML","add","dispatchEvent","InputEvent"],"sourceRoot":""}