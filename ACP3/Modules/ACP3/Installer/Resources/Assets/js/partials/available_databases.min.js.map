{"version":3,"sources":["ACP3/Modules/ACP3/Installer/Resources/Assets/js/partials/ACP3/Modules/ACP3/Installer/Resources/Assets/js/partials/available_databases.js"],"names":["document","dbName","getElementById","formFields","querySelectorAll","ajaxUrl","dataset","availableDatabasesUrl","formIsPrefilled","forEach","formField","addEventListener","async","disabled","i","children","length","remove","classList","formData","FormData","append","value","response","fetch","method","body","headers","X-Requested-With","responseData","json","insertAdjacentHTML","add","dispatchEvent","InputEvent"],"mappings":"AAKA,CAAEA,IACA,MAAMC,EAASD,EAASE,eAAe,WACjCC,EAAaH,EAASI,iBAAiB,oCACvCC,EAAUJ,EAAOK,QAAQC,sBAC/B,IAAIC,GAAA,EAEJL,EAAWM,QAASC,IAClBA,EAAUC,iBAAiB,SAAUC,UACnCX,EAAOY,UAAA,EAEP,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAOc,SAASC,SAAUF,EAC5Cb,EAAOc,SAASD,GAAGG,SAGrBd,EAAWM,QAASC,IAClBA,EAAUQ,UAAUD,OAAO,aAAc,cAG3C,MAAME,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWrB,EAASE,eAAe,WAAWoB,OAC9DH,EAASE,OAAO,UAAWrB,EAASE,eAAe,WAAWoB,OAC9DH,EAASE,OAAO,cAAerB,EAASE,eAAe,eAAeoB,OAEtE,IACE,MAAMC,QAAiBC,MAAMnB,EAAS,CACpCoB,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACPC,mBAAoB,oBAGlBC,QAAqBN,EAASO,OAEpC,GAAID,EAAab,OAAS,EAAG,CAC3B,IAAK,IAAIF,EAAI,EAAGA,EAAIe,EAAab,SAAUF,EACzCb,EAAO8B,mBACL,YACA,kBAAoBF,EAAaf,GAAK,KAAOe,EAAaf,GAAK,aAInEX,EAAWM,QAASC,IAClBA,EAAUQ,UAAUc,IAAI,mBAG1B7B,EAAWM,QAASC,IAClBA,EAAUQ,UAAUc,IAAI,gBAvB9B,QA2BE/B,EAAOY,UAAA,KAIPH,EAAUY,QAAUd,IACtBE,EAAUuB,cAAc,IAAIC,WAAW,WAEvC1B,GAAA,MAzDN,CA4DGR","sourcesContent":["/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\n((document) => {\n  const dbName = document.getElementById(\"db-name\");\n  const formFields = document.querySelectorAll(\"#db-host, #db-user, #db-password\");\n  const ajaxUrl = dbName.dataset.availableDatabasesUrl;\n  let formIsPrefilled = false;\n\n  formFields.forEach((formField) => {\n    formField.addEventListener(\"change\", async () => {\n      dbName.disabled = true;\n\n      for (let i = 1; i < dbName.children.length; ++i) {\n        dbName.children[i].remove();\n      }\n\n      formFields.forEach((formField) => {\n        formField.classList.remove(\"is-invalid\", \"is-valid\");\n      });\n\n      const formData = new FormData();\n      formData.append(\"db_host\", document.getElementById(\"db-host\").value);\n      formData.append(\"db_user\", document.getElementById(\"db-user\").value);\n      formData.append(\"db_password\", document.getElementById(\"db-password\").value);\n\n      try {\n        const response = await fetch(ajaxUrl, {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n          },\n        });\n        const responseData = await response.json();\n\n        if (responseData.length > 0) {\n          for (let i = 0; i < responseData.length; ++i) {\n            dbName.insertAdjacentHTML(\n              \"beforeend\",\n              '<option value=\"' + responseData[i] + '\">' + responseData[i] + \"</option>\"\n            );\n          }\n\n          formFields.forEach((formField) => {\n            formField.classList.add(\"is-valid\");\n          });\n        } else {\n          formFields.forEach((formField) => {\n            formField.classList.add(\"is-invalid\");\n          });\n        }\n      } finally {\n        dbName.disabled = false;\n      }\n    });\n\n    if (formField.value && !formIsPrefilled) {\n      formField.dispatchEvent(new InputEvent('change'));\n\n      formIsPrefilled = true;\n    }\n  });\n})(document);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFDUDMvTW9kdWxlcy9BQ1AzL0luc3RhbGxlci9SZXNvdXJjZXMvQXNzZXRzL2pzL3BhcnRpYWxzL2F2YWlsYWJsZV9kYXRhYmFzZXMuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJkYk5hbWUiLCJnZXRFbGVtZW50QnlJZCIsImZvcm1GaWVsZHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWpheFVybCIsImRhdGFzZXQiLCJhdmFpbGFibGVEYXRhYmFzZXNVcmwiLCJmb3JtSXNQcmVmaWxsZWQiLCJmb3JFYWNoIiwiZm9ybUZpZWxkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzeW5jIiwiZGlzYWJsZWQiLCJpIiwiY2hpbGRyZW4iLCJsZW5ndGgiLCJyZW1vdmUiLCJjbGFzc0xpc3QiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwidmFsdWUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsImhlYWRlcnMiLCJYLVJlcXVlc3RlZC1XaXRoIiwicmVzcG9uc2VEYXRhIiwianNvbiIsImluc2VydEFkamFjZW50SFRNTCIsImFkZCIsImRpc3BhdGNoRXZlbnQiLCJJbnB1dEV2ZW50Il0sIm1hcHBpbmdzIjoiQUFLQSxDQUFFQSxJQUNBLE1BQU1DLEVBQVNELEVBQVNFLGVBQWUsV0FDakNDLEVBQWFILEVBQVNJLGlCQUFpQixvQ0FDdkNDLEVBQVVKLEVBQU9LLFFBQVFDLHNCQUMvQixJQUFJQyxHQUFBLEVBRUpMLEVBQVdNLFFBQVNDLElBQ2xCQSxFQUFVQyxpQkFBaUIsU0FBVUMsVUFDbkNYLEVBQU9ZLFVBQUEsRUFFUCxJQUFLLElBQUlDLEVBQUksRUFBR0EsRUFBSWIsRUFBT2MsU0FBU0MsU0FBVUYsRUFDNUNiLEVBQU9jLFNBQVNELEdBQUdHLFNBR3JCZCxFQUFXTSxRQUFTQyxJQUNsQkEsRUFBVVEsVUFBVUQsT0FBTyxhQUFjLGNBRzNDLE1BQU1FLEVBQVcsSUFBSUMsU0FDckJELEVBQVNFLE9BQU8sVUFBV3JCLEVBQVNFLGVBQWUsV0FBV29CLE9BQzlESCxFQUFTRSxPQUFPLFVBQVdyQixFQUFTRSxlQUFlLFdBQVdvQixPQUM5REgsRUFBU0UsT0FBTyxjQUFlckIsRUFBU0UsZUFBZSxlQUFlb0IsT0FFdEUsSUFDRSxNQUFNQyxRQUFpQkMsTUFBTW5CLEVBQVMsQ0FDcENvQixPQUFRLE9BQ1JDLEtBQU1QLEVBQ05RLFFBQVMsQ0FDUEMsbUJBQW9CLG9CQUdsQkMsUUFBcUJOLEVBQVNPLE9BRXBDLEdBQUlELEVBQWFiLE9BQVMsRUFBRyxDQUMzQixJQUFLLElBQUlGLEVBQUksRUFBR0EsRUFBSWUsRUFBYWIsU0FBVUYsRUFDekNiLEVBQU84QixtQkFDTCxZQUNBLGtCQUFvQkYsRUFBYWYsR0FBSyxLQUFPZSxFQUFhZixHQUFLLGFBSW5FWCxFQUFXTSxRQUFTQyxJQUNsQkEsRUFBVVEsVUFBVWMsSUFBSSxtQkFHMUI3QixFQUFXTSxRQUFTQyxJQUNsQkEsRUFBVVEsVUFBVWMsSUFBSSxnQkF2QjlCLFFBMkJFL0IsRUFBT1ksVUFBQSxLQUlQSCxFQUFVWSxRQUFVZCxJQUN0QkUsRUFBVXVCLGNBQWMsSUFBSUMsV0FBVyxXQUV2QzFCLEdBQUEsTUF6RE4sQ0E0REdSIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgYnkgdGhlIEFDUDMgRGV2ZWxvcGVycy5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGF0IHRoZSB0b3AtbGV2ZWwgbW9kdWxlIGRpcmVjdG9yeSBmb3IgbGljZW5jaW5nIGRldGFpbHMuXG4gKi9cblxuKChkb2N1bWVudCkgPT4ge1xuICBjb25zdCBkYk5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRiLW5hbWVcIik7XG4gIGNvbnN0IGZvcm1GaWVsZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2RiLWhvc3QsICNkYi11c2VyLCAjZGItcGFzc3dvcmRcIik7XG4gIGNvbnN0IGFqYXhVcmwgPSBkYk5hbWUuZGF0YXNldC5hdmFpbGFibGVEYXRhYmFzZXNVcmw7XG4gIGxldCBmb3JtSXNQcmVmaWxsZWQgPSBmYWxzZTtcblxuICBmb3JtRmllbGRzLmZvckVhY2goKGZvcm1GaWVsZCkgPT4ge1xuICAgIGZvcm1GaWVsZC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGFzeW5jICgpID0+IHtcbiAgICAgIGRiTmFtZS5kaXNhYmxlZCA9IHRydWU7XG5cbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgZGJOYW1lLmNoaWxkcmVuLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGRiTmFtZS5jaGlsZHJlbltpXS5yZW1vdmUoKTtcbiAgICAgIH1cblxuICAgICAgZm9ybUZpZWxkcy5mb3JFYWNoKChmb3JtRmllbGQpID0+IHtcbiAgICAgICAgZm9ybUZpZWxkLmNsYXNzTGlzdC5yZW1vdmUoXCJpcy1pbnZhbGlkXCIsIFwiaXMtdmFsaWRcIik7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgIGZvcm1EYXRhLmFwcGVuZChcImRiX2hvc3RcIiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYi1ob3N0XCIpLnZhbHVlKTtcbiAgICAgIGZvcm1EYXRhLmFwcGVuZChcImRiX3VzZXJcIiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYi11c2VyXCIpLnZhbHVlKTtcbiAgICAgIGZvcm1EYXRhLmFwcGVuZChcImRiX3Bhc3N3b3JkXCIsIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGItcGFzc3dvcmRcIikudmFsdWUpO1xuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGFqYXhVcmwsIHtcbiAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgIGJvZHk6IGZvcm1EYXRhLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiOiBcIlhNTEh0dHBSZXF1ZXN0XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgICAgICBpZiAocmVzcG9uc2VEYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3BvbnNlRGF0YS5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgZGJOYW1lLmluc2VydEFkamFjZW50SFRNTChcbiAgICAgICAgICAgICAgXCJiZWZvcmVlbmRcIixcbiAgICAgICAgICAgICAgJzxvcHRpb24gdmFsdWU9XCInICsgcmVzcG9uc2VEYXRhW2ldICsgJ1wiPicgKyByZXNwb25zZURhdGFbaV0gKyBcIjwvb3B0aW9uPlwiXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGZvcm1GaWVsZHMuZm9yRWFjaCgoZm9ybUZpZWxkKSA9PiB7XG4gICAgICAgICAgICBmb3JtRmllbGQuY2xhc3NMaXN0LmFkZChcImlzLXZhbGlkXCIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZvcm1GaWVsZHMuZm9yRWFjaCgoZm9ybUZpZWxkKSA9PiB7XG4gICAgICAgICAgICBmb3JtRmllbGQuY2xhc3NMaXN0LmFkZChcImlzLWludmFsaWRcIik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGRiTmFtZS5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKGZvcm1GaWVsZC52YWx1ZSAmJiAhZm9ybUlzUHJlZmlsbGVkKSB7XG4gICAgICBmb3JtRmllbGQuZGlzcGF0Y2hFdmVudChuZXcgSW5wdXRFdmVudCgnY2hhbmdlJykpO1xuXG4gICAgICBmb3JtSXNQcmVmaWxsZWQgPSB0cnVlO1xuICAgIH1cbiAgfSk7XG59KShkb2N1bWVudCk7XG4iXX0=","file":"available_databases.min.js"}