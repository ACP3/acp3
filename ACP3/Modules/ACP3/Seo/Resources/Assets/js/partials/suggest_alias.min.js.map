{"version":3,"file":"./ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/suggest_alias.min.js","mappings":"ixBAEO,MAAMA,EAIXC,YAAYC,EAASC,GAAS,wGAC5B,EAAAC,KAAA,EAAgBF,GAChB,EAAAE,KAAA,ECHG,SAAuBC,EAAiBC,EAAoBC,GACjE,MAAMC,EAAiB,IAAKH,KAAoBC,GAEhD,IAAKC,EACH,OAAOC,EAGT,IAAK,IAAKC,EAAKC,KAAUC,OAAOC,QAAQL,GAAuB,CAC7D,MAAMM,GAcoBC,EAdeL,EAAIM,QAAQ,WAAY,KAerDC,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,GAbnD,GAAIL,EAAYM,OAAS,QAA4C,IAAhCX,EAAeK,GAClD,IACEL,EAAeK,GAAeO,KAAKC,MAAMX,EAG1C,CAFC,MACAF,EAAeK,GAAeH,CAC/B,CAEJ,CAKH,IAA8BI,EAH5B,OAAON,CACR,CDjBoBc,CACf,CACEC,OAAQ,GACRC,gBAAiB,KACjBC,aAAc,MAEhBtB,IAGF,EAAAC,KAAA,UAAAA,KACD,E,aAGC,EAAAA,KAAA,GAAcsB,iBAAiB,SAASC,UACtCC,EAAEC,uBAEI,EAAAzB,KAAN,UAAMA,KAAN,GAEH,C,mBAGC,GAAK,EAAAA,KAAD,UAACA,MAIL,IACE,EAAAA,KAAA,GAAc0B,UAAUC,IAAI,YAE5B,MAAMC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,SAAU,EAAA9B,KAAA,GAAemB,QACrCS,EAAKE,OAAO,QAAS,EAAA9B,KAAA,GAAeoB,gBAAgBd,OAEpD,MAAMyB,QAAiBC,MAAM,EAAAhC,KAAA,GAAciC,KAAM,CAC/CC,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CACP,mBAAoB,oBAIxB,GAAIL,EAASM,GAAI,CACf,MAAMC,QAAqBP,EAASQ,OAEhCD,GAAcE,OAAOzB,OAAS,IAChC,EAAAf,KAAA,GAAeqB,aAAaf,MAAQgC,EAAaE,MAEpD,CAKF,CAJC,MAAOC,GACPC,QAAQC,MAAMF,EAAIG,QACnB,CAxBD,QAyBE,EAAA5C,KAAA,GAAc0B,UAAUmB,OAAO,WAChC,CACF,C,aAMC,OACqC,OAAnC,EAAA7C,KAAA,GAAeoB,iBACiB,OAAhC,EAAApB,KAAA,GAAeqB,cAC0B,KAAzC,EAAArB,KAAA,GAAeoB,gBAAgBd,KAElC,CEhEH,CAAEwC,IACA,IAAIlD,EAAakD,EAASC,eAAe,wBAAyB,CAChE5B,OAAQ2B,EAASE,cAAc,2BAA2BC,QAAQC,eAAiB,GACnF9B,gBAAiB0B,EAASE,cAAc,+BACxC3B,aAAcyB,EAASC,eAAe,UAJ1C,GAMGD,S","sources":["webpack://acp3-cms/./ACP3/Modules/ACP3/Seo/Resources/Assets/js/lib/suggest-alias.js","webpack://acp3-cms/./ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","webpack://acp3-cms/./ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/suggest_alias.js"],"sourcesContent":["import { mergeSettings } from \"../../../../../System/Resources/Assets/js/lib/utils\";\n\nexport class SuggestAlias {\n  #element;\n  #settings;\n\n  constructor(element, options) {\n    this.#element = element;\n    this.#settings = mergeSettings(\n      {\n        prefix: \"\",\n        slugBaseElement: null,\n        aliasElement: null,\n      },\n      options\n    );\n\n    this.#init();\n  }\n\n  #init() {\n    this.#element.addEventListener(\"click\", async (e) => {\n      e.preventDefault();\n\n      await this.#performAjaxRequest();\n    });\n  }\n\n  async #performAjaxRequest() {\n    if (!this.#canPerformAjaxRequest()) {\n      return;\n    }\n\n    try {\n      this.#element.classList.add(\"disabled\");\n\n      const data = new FormData();\n      data.append(\"prefix\", this.#settings.prefix);\n      data.append(\"title\", this.#settings.slugBaseElement.value);\n\n      const response = await fetch(this.#element.href, {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (response.ok) {\n        const responseData = await response.json();\n\n        if (responseData?.alias?.length > 0) {\n          this.#settings.aliasElement.value = responseData.alias;\n        }\n      }\n    } catch (err) {\n      console.error(err.message);\n    } finally {\n      this.#element.classList.remove(\"disabled\");\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  #canPerformAjaxRequest() {\n    return (\n      this.#settings.slugBaseElement !== null &&\n      this.#settings.aliasElement !== null &&\n      this.#settings.slugBaseElement.value !== \"\"\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  if (!dataAttributeOptions) {\n    return mergedSettings;\n  }\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      try {\n        mergedSettings[keyStripped] = JSON.parse(value);\n      } catch {\n        mergedSettings[keyStripped] = value;\n      }\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n/**\n * This function add downloads javascript code (e.g. after XHR requests) to the HTML documents <head>, so that the\n * javascript code can actually get executed.\n *\n * @param {HTMLElement} elementContainingScriptTags\n */\nexport function addScriptsToHead(elementContainingScriptTags) {\n  for (const ajaxScriptElement of elementContainingScriptTags.getElementsByTagName(\"script\")) {\n    const scriptElement = document.createElement(\"script\");\n    if (!ajaxScriptElement.src) {\n      scriptElement.innerHTML = ajaxScriptElement.innerHTML;\n    } else {\n      scriptElement.src = ajaxScriptElement.src;\n    }\n    document.head.appendChild(scriptElement);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { SuggestAlias } from \"../lib/suggest-alias\";\n\n((document) => {\n  new SuggestAlias(document.getElementById(\"seo-alias-suggestion\"), {\n    prefix: document.querySelector(\"[data-seo-slug-prefix]\")?.dataset.seoSlugPrefix ?? \"\",\n    slugBaseElement: document.querySelector('[data-seo-slug-base=\"true\"]'),\n    aliasElement: document.getElementById(\"alias\"),\n  });\n})(document);\n"],"names":["SuggestAlias","constructor","element","options","this","defaultSettings","constructorOptions","dataAttributeOptions","mergedSettings","key","value","Object","entries","keyStripped","string","replace","charAt","toLowerCase","slice","length","JSON","parse","mergeSettings","prefix","slugBaseElement","aliasElement","addEventListener","async","e","preventDefault","classList","add","data","FormData","append","response","fetch","href","method","body","headers","ok","responseData","json","alias","err","console","error","message","remove","document","getElementById","querySelector","dataset","seoSlugPrefix"],"sourceRoot":""}