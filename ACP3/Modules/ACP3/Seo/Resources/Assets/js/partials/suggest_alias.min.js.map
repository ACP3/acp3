{"version":3,"sources":["ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/ACP3/Modules/ACP3/Seo/Resources/Assets/js/lib/suggest-alias.js","ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/ACP3/Modules/ACP3/Seo/Resources/Assets/js/partials/suggest_alias.js"],"names":["_$utils_3","defaultSettings","constructorOptions","dataAttributeOptions","string","arr","mergedSettings","_objectSpread","_i","_Object$entries","Object","entries","length","_Object$entries$_i","Array","isArray","i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","return","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","TypeError","key","keyStripped","replace","charAt","toLowerCase","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_classPrivateFieldLooseBase","receiver","privateKey","hasOwnProperty","id","_classPrivateFieldLooseKey","_element","_settings","_init","_performAjaxRequest","_canPerformAjaxRequest","_init2","_ref","_this","addEventListener","regeneratorRuntime","mark","_callee","e","wrap","_context","prev","preventDefault","stop","_x","_performAjaxRequest2","_performAjaxRequest3","_callee2","data","response","_responseData$alias","responseData","_context2","abrupt","classList","add","FormData","append","prefix","slugBaseElement","fetch","href","method","body","headers","X-Requested-With","sent","ok","json","alias","aliasElement","t0","catch","console","message","remove","finish","_canPerformAjaxRequest2","_$suggestAlias_1","SuggestAlias","element","options","instance","Constructor","defineProperty","writable","mergeSettings","document","_document$querySelect","_document$querySelect2","getElementById","querySelector","dataset","seoSlugPrefix"],"mappings":"CAAA,WACA,IAAAA,EAAA,q2BCIO,SAAuBC,EAAiBC,EAAoBC,GACjE,IAiB4BC,EAAAC,EAjBtBC,EAAcC,EAAAA,EAAA,GAAQN,GAAoBC,GAEhD,IAAKC,EACH,OAAOG,EAGT,IAAA,IAAAE,EAAA,EAAAC,EAAyBC,OAAOC,QAAQR,GAAxCK,EAAAC,EAAAG,OAAAJ,IAA+D,CAA1D,IAAAK,GAAA,EAAA,SAAAR,GAAA,GAAAS,MAAAC,QAAAV,GAAA,OAAAA,EAAA,CAAAA,EAAAI,EAAAD,KAAA,SAAAH,EAAAW,GAAA,IAAAR,EAAA,MAAAH,EAAA,KAAA,oBAAAY,QAAAZ,EAAAY,OAAAC,WAAAb,EAAA,cAAA,GAAA,MAAAG,EAAA,CAAA,IAAAW,EAAAC,EAAAC,EAAA,GAAAC,GAAA,EAAAC,GAAA,EAAA,IAAA,IAAAf,EAAAA,EAAAgB,KAAAnB,KAAAiB,GAAAH,EAAAX,EAAAiB,QAAAC,QAAAL,EAAAM,KAAAR,EAAAS,OAAAZ,IAAAK,EAAAT,QAAAU,GAAA,IAAA,MAAAO,GAAAN,GAAA,EAAAH,EAAAS,EAAA,QAAA,IAAAP,GAAA,MAAAd,EAAAsB,QAAAtB,EAAAsB,SAAA,QAAA,GAAAP,EAAA,MAAAH,GAAA,OAAAC,GAAA,CAAAhB,IAAA,SAAA0B,EAAAC,GAAA,GAAAD,EAAA,CAAA,GAAA,iBAAAA,EAAA,OAAAE,EAAAF,EAAAf,GAAA,IAAAkB,EAAAxB,OAAAyB,UAAAC,SAAAZ,KAAAO,GAAAM,MAAA,GAAA,GAAA,MAAA,WAAAH,GAAAH,EAAAO,cAAAJ,EAAAH,EAAAO,YAAAC,MAAA,QAAAL,GAAA,QAAAA,EAAApB,MAAA0B,KAAAT,GAAA,cAAAG,GAAA,2CAAAO,KAAAP,GAAAD,EAAAF,EAAAf,QAAA,GAAA,CAAAX,IAAA,WAAA,MAAA,IAAAqC,UAAA,6IAAA,IAAKC,EAAL9B,EAAA,GAAUe,EAAVf,EAAA,GACG+B,GAUoBxC,EAVeuC,EAAIE,QAAQ,WAAY,KAWrDC,OAAO,GAAGC,cAAgB3C,EAAOiC,MAAM,GAT/CO,EAAYhC,OAAS,QAAA,IAAYN,EAAesC,KAClDtC,EAAesC,GAAehB,GAIlC,OAAOtB,YCpBT,SAAA0C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,GAAA,IAAA,IAAAC,EAAAN,EAAAN,GAAAW,GAAA1B,EAAA2B,EAAA3B,MAAA,MAAA4B,GAAA,YAAAL,EAAAK,GAAAD,EAAA7B,KAAAwB,EAAAtB,GAAA6B,QAAAP,QAAAtB,GAAA8B,KAAAN,EAAAC,GAAA,SAAAM,EAAAC,GAAA,OAAA,WAAA,IAAAC,EAAAC,KAAAC,EAAAC,UAAA,OAAA,IAAAP,SAAA,SAAAP,EAAAC,GAAA,IAAAF,EAAAW,EAAAK,MAAAJ,EAAAE,GAAA,SAAAX,EAAAxB,GAAAoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzB,GAAA,SAAAyB,EAAAxB,GAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAAAxB,GAAAuB,OAAA,OAAA,SAAAc,EAAAC,EAAAC,GAAA,IAAA1D,OAAAyB,UAAAkC,eAAA7C,KAAA2C,EAAAC,GAAA,MAAA,IAAA1B,UAAA,kDAAA,OAAAyB,yEAAA,IAAAG,EAAA,EAAA,SAAAC,EAAAhC,GAAA,MAAA,aAAA+B,IAAA,IAAA/B,EAAA,IAAAiC,EAAAD,EAAA,WAAAE,EAAAF,EAAA,YAAAG,EAAAH,EAAA,QAAAI,EAAAJ,EAAA,sBAAAK,EAAAL,EAAA,yBAAA,SAAAM,IAoBU,IACNC,EADMC,EAAAjB,KACNI,EAAAJ,KAAAU,GAAAA,GAAcQ,iBAAiB,SAA/BF,EAAAnB,EAAAsB,mBAAAC,MAAwC,SAAAC,EAAOC,GAAP,OAAAH,mBAAAI,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAA7D,MAAA,KAAA,EAAA,OACtC2D,EAAEI,iBADoCF,EAAA7D,KAAA,EAAAyC,EAGhCa,EAHgCJ,GAAAA,KAAA,KAAA,EAAA,IAAA,MAAA,OAAAW,EAAAG,UAAAN,OAAxC,SAAAO,GAAA,OAAAZ,EAAAb,MAAAH,KAAAE,cAAA,SAAA2B,IAAA,OAAAC,EAAA3B,MAAAH,KAAAE,WAAA,SAAA4B,IAAA,OAAAA,EAAAjC,EAAAsB,mBAAAC,MAAA,SAAAW,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhB,mBAAAI,MAAA,SAAAa,GAAA,OAAA,OAAAA,EAAAX,KAAAW,EAAAzE,MAAA,KAAA,EAAA,GAAAyC,EAQKJ,KAAAc,GAAAA,KAAA,CAAAsB,EAAAzE,KAAA,EAAA,MAAA,OAAAyE,EAAAC,OAAA,UAAA,KAAA,EAAA,OAAAD,EAAAX,KAAA,EAKHrB,EAAAJ,KAAAU,GAAAA,GAAc4B,UAAUC,IAAI,aAEtBP,EAAO,IAAIQ,UACZC,OAAO,SAAUrC,EAAAJ,KAAAW,GAAAA,GAAe+B,QACrCV,EAAKS,OAAO,QAASrC,EAAAJ,KAAAW,GAAAA,GAAegC,gBAAgB7E,OAAAsE,EAAAzE,KAAA,EAE7BiF,MAAMxC,EAAAJ,KAAAU,GAAAA,GAAcmC,KAAM,CAC/CC,OAAQ,OACRC,KAAMf,EACNgB,QAAS,CACPC,mBAAoB,oBAAA,KAAA,EAAA,KAJlBhB,EAAAG,EAAAc,MAQOC,GAAA,CAAAf,EAAAzE,KAAA,GAAA,MAAA,OAAAyE,EAAAzE,KAAA,GACgBsE,EAASmB,OAAA,KAAA,IAEhC,OAFEjB,EAAAC,EAAAc,OAEF,QAAAhB,EAAAC,EAAckB,aAAA,IAAdnB,OAFE,EAEFA,EAAqBpF,QAAS,IAChCsD,EAAAJ,KAAAW,GAAAA,GAAe2C,aAAaxF,MAAQqE,EAAakB,OAAA,KAAA,GAAAjB,EAAAzE,KAAA,GAAA,MAAA,KAAA,GAAAyE,EAAAX,KAAA,GAAAW,EAAAmB,GAAAnB,EAAAoB,MAAA,GAIrDC,QAAQ/D,MAAM0C,EAAAmB,GAAIG,SAAA,KAAA,GAAA,OAAAtB,EAAAX,KAAA,GAElBrB,EAAAJ,KAAAU,GAAAA,GAAc4B,UAAUqB,OAAO,YAAAvB,EAAAwB,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAxB,EAAAT,UAAAI,EAAA/B,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,WAAAG,MAAAH,KAAAE,WAAA,SAAA2D,IAQjC,OACqC,OAAnCzD,EAAAJ,KAAAW,GAAAA,GAAegC,iBACiB,OAAhCvC,EAAAJ,KAAAW,GAAAA,GAAe2C,cAC0B,KAAzClD,EAAAJ,KAAAW,GAAAA,GAAegC,gBAAgB7E,MAAAgG,EAAAC,aA/DnC,SAAAA,EAAYC,EAASC,IAAA,SAAAC,EAAAC,GAAA,KAAAD,aAAAC,GAAA,MAAA,IAAAvF,UAAA,qCAAA,CAASoB,KAAA+D,GAAAnH,OAAAwH,eAAApE,KAAAc,EAAA,CAAAhD,MAAA+F,IAAAjH,OAAAwH,eAAApE,KAAAa,EAAA,CAAA/C,MAAA+D,IAAAjF,OAAAwH,eAAApE,KAAAY,EAAA,CAAA9C,MAAAiD,IAAAnE,OAAAwH,eAAApE,KAAAU,EAAA,CAAA2D,UAAA,EAAAvG,WAAA,IAAAlB,OAAAwH,eAAApE,KAAAW,EAAA,CAAA0D,UAAA,EAAAvG,WAAA,IAC5BsC,EAAAJ,KAAAU,GAAAA,GAAgBsD,EAChB5D,EAAAJ,KAAAW,GAAAA,IAAA,EAAiBzE,EAAAoI,eACf,CACE5B,OAAQ,GACRC,gBAAiB,KACjBW,aAAc,MAEhBW,GAGF7D,EAAAJ,KAAAY,GAAAA,MCVJ,SAAE2D,GAAa,IAAAC,EAAAC,EACb,IAAIX,EAAAC,aAAaQ,EAASG,eAAe,wBAAyB,CAChEhC,OAAM,QAAA8B,EAAA,QAAAC,EAAEF,EAASI,cAAc,iCAAA,IAAzBF,OAAA,EAAEA,EAAkDG,QAAQC,qBAAA,IAA5DL,EAAAA,EAA6E,GACnF7B,gBAAiB4B,EAASI,cAAc,+BACxCrB,aAAciB,EAASG,eAAe,WAJ1C,CAMGH,UHbH","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  if (!dataAttributeOptions) {\n    return mergedSettings;\n  }\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      mergedSettings[keyStripped] = value;\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n","import { mergeSettings } from \"../../../../../System/Resources/Assets/js/lib/utils\";\n\nexport class SuggestAlias {\n  #element;\n  #settings;\n\n  constructor(element, options) {\n    this.#element = element;\n    this.#settings = mergeSettings(\n      {\n        prefix: \"\",\n        slugBaseElement: null,\n        aliasElement: null,\n      },\n      options\n    );\n\n    this.#init();\n  }\n\n  #init() {\n    this.#element.addEventListener(\"click\", async (e) => {\n      e.preventDefault();\n\n      await this.#performAjaxRequest();\n    });\n  }\n\n  async #performAjaxRequest() {\n    if (!this.#canPerformAjaxRequest()) {\n      return;\n    }\n\n    try {\n      this.#element.classList.add(\"disabled\");\n\n      const data = new FormData();\n      data.append(\"prefix\", this.#settings.prefix);\n      data.append(\"title\", this.#settings.slugBaseElement.value);\n\n      const response = await fetch(this.#element.href, {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      });\n\n      if (response.ok) {\n        const responseData = await response.json();\n\n        if (responseData?.alias?.length > 0) {\n          this.#settings.aliasElement.value = responseData.alias;\n        }\n      }\n    } catch (err) {\n      console.error(err.message);\n    } finally {\n      this.#element.classList.remove(\"disabled\");\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  #canPerformAjaxRequest() {\n    return (\n      this.#settings.slugBaseElement !== null &&\n      this.#settings.aliasElement !== null &&\n      this.#settings.slugBaseElement.value !== \"\"\n    );\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licencing details.\n */\n\nimport { SuggestAlias } from \"../lib/suggest-alias\";\n\n((document) => {\n  new SuggestAlias(document.getElementById(\"seo-alias-suggestion\"), {\n    prefix: document.querySelector(\"[data-seo-slug-prefix]\")?.dataset.seoSlugPrefix ?? \"\",\n    slugBaseElement: document.querySelector('[data-seo-slug-base=\"true\"]'),\n    aliasElement: document.getElementById(\"alias\"),\n  });\n})(document);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,","file":"suggest_alias.min.js"}