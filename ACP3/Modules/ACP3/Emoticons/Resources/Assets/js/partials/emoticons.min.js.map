{"version":3,"sources":["ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/libs/insert-emoticon.js","ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/emoticons.js"],"names":["_$insertEmoticon_1","emoticonElement","textarea","caretPosition","addEventListener","event","preventDefault","currentValue","value","textBeforeSelection","substr","textAfterSelection","emoticonCode","concat","title","length","focus","setSelectionRange","selectionStart","document","querySelectorAll","forEach","elem","querySelector","dataset","emoticonsInput","emoticonElem","insertEmoticon"],"mappings":"CAAA,WACA,IAAAA,EAAA,qECSO,SAAwBC,EAAiBC,GAC9C,IAAIC,EAAgB,EAEpBF,EAAgBG,iBAAiB,QAAUC,IACzCA,EAAMC,iBAEN,MAAMC,EAAeL,EAASM,MACxBC,EAAsBF,EAAaG,OAAO,EAAGP,GAC7CQ,EAAqBJ,EAAaG,OAAOP,GAGzCS,EAAY,IAAAC,OAAOZ,EAAgBa,MAAvB,KAElBX,GAAiBS,EAAaG,OAE9Bb,EAASM,MAAQC,EAAsBG,EAAeD,EACtDT,EAASc,QAETd,EAASe,kBAAkBd,EAAeA,KAM5CD,EAASE,iBAAiB,OAAQ,KAChCD,EAAgBD,EAASgB,kBCjC7B,CAAEC,IACAA,EAASC,iBAAiB,0BAA0BC,QAASC,IAI3D,MAAMpB,EAAWiB,EAASI,cAAcD,EAAKE,QAAQC,gBAErDH,EAAKF,iBAAiB,KAAKC,QAASK,KAAA,EAClC1B,EAAA2B,gBAAeD,EAAcxB,QARnC,CAWGiB,UFbH","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\n/**\n *\n * @param {Element} emoticonElement\n * @param {HTMLTextAreaElement} textarea\n */\nexport function insertEmoticon(emoticonElement, textarea) {\n  let caretPosition = 0;\n\n  emoticonElement.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n\n    const currentValue = textarea.value;\n    const textBeforeSelection = currentValue.substr(0, caretPosition);\n    const textAfterSelection = currentValue.substr(caretPosition);\n\n    // Add leading and trailing spaces to the to be inserted emoticon, so that we aren't getting into overflow problems, etc.\n    const emoticonCode = ` ${emoticonElement.title} `;\n\n    caretPosition += emoticonCode.length;\n\n    textarea.value = textBeforeSelection + emoticonCode + textAfterSelection;\n    textarea.focus();\n\n    textarea.setSelectionRange(caretPosition, caretPosition);\n  });\n\n  // When clicking on one of the emoticons, the textarea's blur event gets triggered.\n  // We can use this to save the last known caret position, so that the emoticon can be inserted into the correct\n  // position\n  textarea.addEventListener(\"blur\", () => {\n    caretPosition = textarea.selectionStart;\n  });\n}\n","import { insertEmoticon } from \"../libs/insert-emoticon\";\n\n((document) => {\n  document.querySelectorAll(\"[data-emoticons-input]\").forEach((elem) => {\n    /**\n     * @type {HTMLTextAreaElement}\n     */\n    const textarea = document.querySelector(elem.dataset.emoticonsInput);\n\n    elem.querySelectorAll(\"a\").forEach((emoticonElem) => {\n      insertEmoticon(emoticonElem, textarea);\n    });\n  });\n})(document);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2stZmxhdC9fcHJlbHVkZSIsIkFDUDMvTW9kdWxlcy9BQ1AzL0Vtb3RpY29ucy9SZXNvdXJjZXMvQXNzZXRzL2pzL2xpYnMvaW5zZXJ0LWVtb3RpY29uLmpzIiwiQUNQMy9Nb2R1bGVzL0FDUDMvRW1vdGljb25zL1Jlc291cmNlcy9Bc3NldHMvanMvcGFydGlhbHMvZW1vdGljb25zLmpzIl0sIm5hbWVzIjpbIl8kaW5zZXJ0RW1vdGljb25fMSIsImVtb3RpY29uRWxlbWVudCIsInRleHRhcmVhIiwiY2FyZXRQb3NpdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwiY3VycmVudFZhbHVlIiwidmFsdWUiLCJ0ZXh0QmVmb3JlU2VsZWN0aW9uIiwic3Vic3RyIiwidGV4dEFmdGVyU2VsZWN0aW9uIiwiZW1vdGljb25Db2RlIiwiY29uY2F0IiwidGl0bGUiLCJsZW5ndGgiLCJmb2N1cyIsInNldFNlbGVjdGlvblJhbmdlIiwic2VsZWN0aW9uU3RhcnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWxlbSIsInF1ZXJ5U2VsZWN0b3IiLCJkYXRhc2V0IiwiZW1vdGljb25zSW5wdXQiLCJlbW90aWNvbkVsZW0iLCJpbnNlcnRFbW90aWNvbiJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxJQUFBQSxFQUFBLHFFQ1NPLFNBQXdCQyxFQUFpQkMsR0FDOUMsSUFBSUMsRUFBZ0IsRUFFcEJGLEVBQWdCRyxpQkFBaUIsUUFBVUMsSUFDekNBLEVBQU1DLGlCQUVOLE1BQU1DLEVBQWVMLEVBQVNNLE1BQ3hCQyxFQUFzQkYsRUFBYUcsT0FBTyxFQUFHUCxHQUM3Q1EsRUFBcUJKLEVBQWFHLE9BQU9QLEdBR3pDUyxFQUFZLElBQUFDLE9BQU9aLEVBQWdCYSxNQUF2QixLQUVsQlgsR0FBaUJTLEVBQWFHLE9BRTlCYixFQUFTTSxNQUFRQyxFQUFzQkcsRUFBZUQsRUFDdERULEVBQVNjLFFBRVRkLEVBQVNlLGtCQUFrQmQsRUFBZUEsS0FNNUNELEVBQVNFLGlCQUFpQixPQUFRLEtBQ2hDRCxFQUFnQkQsRUFBU2dCLGtCQ2pDN0IsQ0FBRUMsSUFDQUEsRUFBU0MsaUJBQWlCLDBCQUEwQkMsUUFBU0MsSUFJM0QsTUFBTXBCLEVBQVdpQixFQUFTSSxjQUFjRCxFQUFLRSxRQUFRQyxnQkFFckRILEVBQUtGLGlCQUFpQixLQUFLQyxRQUFTSyxLQUFBLEVBQ2xDMUIsRUFBQTJCLGdCQUFlRCxFQUFjeEIsUUFSbkMsQ0FXR2lCLFVGYkgiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcbiIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIGJ5IHRoZSBBQ1AzIERldmVsb3BlcnMuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBhdCB0aGUgdG9wLWxldmVsIG1vZHVsZSBkaXJlY3RvcnkgZm9yIGxpY2Vuc2luZyBkZXRhaWxzLlxuICovXG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gZW1vdGljb25FbGVtZW50XG4gKiBAcGFyYW0ge0hUTUxUZXh0QXJlYUVsZW1lbnR9IHRleHRhcmVhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnNlcnRFbW90aWNvbihlbW90aWNvbkVsZW1lbnQsIHRleHRhcmVhKSB7XG4gIGxldCBjYXJldFBvc2l0aW9uID0gMDtcblxuICBlbW90aWNvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBjb25zdCBjdXJyZW50VmFsdWUgPSB0ZXh0YXJlYS52YWx1ZTtcbiAgICBjb25zdCB0ZXh0QmVmb3JlU2VsZWN0aW9uID0gY3VycmVudFZhbHVlLnN1YnN0cigwLCBjYXJldFBvc2l0aW9uKTtcbiAgICBjb25zdCB0ZXh0QWZ0ZXJTZWxlY3Rpb24gPSBjdXJyZW50VmFsdWUuc3Vic3RyKGNhcmV0UG9zaXRpb24pO1xuXG4gICAgLy8gQWRkIGxlYWRpbmcgYW5kIHRyYWlsaW5nIHNwYWNlcyB0byB0aGUgdG8gYmUgaW5zZXJ0ZWQgZW1vdGljb24sIHNvIHRoYXQgd2UgYXJlbid0IGdldHRpbmcgaW50byBvdmVyZmxvdyBwcm9ibGVtcywgZXRjLlxuICAgIGNvbnN0IGVtb3RpY29uQ29kZSA9IGAgJHtlbW90aWNvbkVsZW1lbnQudGl0bGV9IGA7XG5cbiAgICBjYXJldFBvc2l0aW9uICs9IGVtb3RpY29uQ29kZS5sZW5ndGg7XG5cbiAgICB0ZXh0YXJlYS52YWx1ZSA9IHRleHRCZWZvcmVTZWxlY3Rpb24gKyBlbW90aWNvbkNvZGUgKyB0ZXh0QWZ0ZXJTZWxlY3Rpb247XG4gICAgdGV4dGFyZWEuZm9jdXMoKTtcblxuICAgIHRleHRhcmVhLnNldFNlbGVjdGlvblJhbmdlKGNhcmV0UG9zaXRpb24sIGNhcmV0UG9zaXRpb24pO1xuICB9KTtcblxuICAvLyBXaGVuIGNsaWNraW5nIG9uIG9uZSBvZiB0aGUgZW1vdGljb25zLCB0aGUgdGV4dGFyZWEncyBibHVyIGV2ZW50IGdldHMgdHJpZ2dlcmVkLlxuICAvLyBXZSBjYW4gdXNlIHRoaXMgdG8gc2F2ZSB0aGUgbGFzdCBrbm93biBjYXJldCBwb3NpdGlvbiwgc28gdGhhdCB0aGUgZW1vdGljb24gY2FuIGJlIGluc2VydGVkIGludG8gdGhlIGNvcnJlY3RcbiAgLy8gcG9zaXRpb25cbiAgdGV4dGFyZWEuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgKCkgPT4ge1xuICAgIGNhcmV0UG9zaXRpb24gPSB0ZXh0YXJlYS5zZWxlY3Rpb25TdGFydDtcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyBpbnNlcnRFbW90aWNvbiB9IGZyb20gXCIuLi9saWJzL2luc2VydC1lbW90aWNvblwiO1xuXG4oKGRvY3VtZW50KSA9PiB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1lbW90aWNvbnMtaW5wdXRdXCIpLmZvckVhY2goKGVsZW0pID0+IHtcbiAgICAvKipcbiAgICAgKiBAdHlwZSB7SFRNTFRleHRBcmVhRWxlbWVudH1cbiAgICAgKi9cbiAgICBjb25zdCB0ZXh0YXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbS5kYXRhc2V0LmVtb3RpY29uc0lucHV0KTtcblxuICAgIGVsZW0ucXVlcnlTZWxlY3RvckFsbChcImFcIikuZm9yRWFjaCgoZW1vdGljb25FbGVtKSA9PiB7XG4gICAgICBpbnNlcnRFbW90aWNvbihlbW90aWNvbkVsZW0sIHRleHRhcmVhKTtcbiAgICB9KTtcbiAgfSk7XG59KShkb2N1bWVudCk7XG4iXX0=","file":"emoticons.min.js"}