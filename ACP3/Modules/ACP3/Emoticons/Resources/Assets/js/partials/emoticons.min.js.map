{"version":3,"sources":["ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/libs/insert-emoticon.js","ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/emoticons.js","ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/node_modules/browser-pack-flat/_postlude"],"names":[],"mappings":"AAAA;AACA;iHCSO,SAAwB,eAAA,CAAiB,QAAA,CAAA,CAC9C,IAAI,aAAA,CAAgB,CAAA,CAEpB,eAAA,CAAgB,gBAAA,CAAiB,OAAA,CAAS,SAAC,KAAA,CAAA,CACzC,KAAA,CAAM,cAAA,EAAA,CAEN,IAAM,YAAA,CAAe,QAAA,CAAS,KAAA,CACxB,mBAAA,CAAsB,YAAA,CAAa,MAAA,CAAO,CAAA,CAAG,aAAA,CAAA,CAC7C,kBAAA,CAAqB,YAAA,CAAa,MAAA,CAAO,aAAA,CAAA,CAGzC,YAAA,CAAY,GAAA,CAAA,MAAA,CAAO,eAAA,CAAgB,KAAA,CAAvB,GAAA,CAAA,CAElB,aAAA,EAAiB,YAAA,CAAa,MAAA,CAE9B,QAAA,CAAS,KAAA,CAAQ,mBAAA,CAAsB,YAAA,CAAe,kBAAA,CACtD,QAAA,CAAS,KAAA,EAAA,CAET,QAAA,CAAS,iBAAA,CAAkB,aAAA,CAAe,aAAA,CAAA,CAAA,CAAA,CAM5C,QAAA,CAAS,gBAAA,CAAiB,MAAA,CAAQ,UAAA,CAChC,aAAA,CAAgB,QAAA,CAAS,cAAA,CAAA,CAAA,CAAA,CAAA;;;aCnC7B,IAAA,AAKM,QAAA,CAAW,QAAA,CAAS,aAAA,CAAc,QAAA,CAAS,aAAA,CAAc,QAAA,CAAA,CAAU,OAAA,CAAQ,cAAA,CAAA,CACjF,QAAA,CAAS,gBAAA,CAAiB,UAAA,CAAA,CAAY,OAAA,CAAQ,SAAC,YAAA,CAAA,CAAA,CAC7C,CAAA,CAAA,kBAAA,CAAA,cAAA,EAAe,YAAA,CAAc,QAAA,CAAA,CAAA,CAAA,CAAA;ACP/B;AACA","file":"emoticons.min.js","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\n/**\n *\n * @param {Element} emoticonElement\n * @param {HTMLTextAreaElement} textarea\n */\nexport function insertEmoticon(emoticonElement, textarea) {\n  let caretPosition = 0;\n\n  emoticonElement.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n\n    const currentValue = textarea.value;\n    const textBeforeSelection = currentValue.substr(0, caretPosition);\n    const textAfterSelection = currentValue.substr(caretPosition);\n\n    // Add leading and trailing spaces to the to be inserted emoticon, so that we aren't getting into overflow problems, etc.\n    const emoticonCode = ` ${emoticonElement.title} `;\n\n    caretPosition += emoticonCode.length;\n\n    textarea.value = textBeforeSelection + emoticonCode + textAfterSelection;\n    textarea.focus();\n\n    textarea.setSelectionRange(caretPosition, caretPosition);\n  });\n\n  // When clicking on one of the emoticons, the textarea's blur event gets triggered.\n  // We can use this to save the last known caret position, so that the emoticon can be inserted into the correct\n  // position\n  textarea.addEventListener(\"blur\", () => {\n    caretPosition = textarea.selectionStart;\n  });\n}\n","import { insertEmoticon } from \"../libs/insert-emoticon\";\n\n/**\n * @type {HTMLTextAreaElement}\n */\nconst textarea = document.querySelector(document.querySelector(\".icons\").dataset.emoticonsInput);\ndocument.querySelectorAll(\".icons a\").forEach((emoticonElem) => {\n  insertEmoticon(emoticonElem, textarea);\n});\n","\n}());"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlc1xcYnJvd3Nlci1wYWNrLWZsYXRcXF9wcmVsdWRlIiwiQUNQMy9Nb2R1bGVzL0FDUDMvRW1vdGljb25zL1Jlc291cmNlcy9Bc3NldHMvanMvbGlicy9pbnNlcnQtZW1vdGljb24uanMiLCJBQ1AzL01vZHVsZXMvQUNQMy9FbW90aWNvbnMvUmVzb3VyY2VzL0Fzc2V0cy9qcy9wYXJ0aWFscy9lbW90aWNvbnMuanMiLCJub2RlX21vZHVsZXNcXGJyb3dzZXItcGFjay1mbGF0XFxfcG9zdGx1ZGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtpSENTTyxTQUF3QixlQUFBLENBQWlCLFFBQUEsQ0FBQSxDQUM5QyxJQUFJLGFBQUEsQ0FBZ0IsQ0FBQSxDQUVwQixlQUFBLENBQWdCLGdCQUFBLENBQWlCLE9BQUEsQ0FBUyxTQUFDLEtBQUEsQ0FBQSxDQUN6QyxLQUFBLENBQU0sY0FBQSxFQUFBLENBRU4sSUFBTSxZQUFBLENBQWUsUUFBQSxDQUFTLEtBQUEsQ0FDeEIsbUJBQUEsQ0FBc0IsWUFBQSxDQUFhLE1BQUEsQ0FBTyxDQUFBLENBQUcsYUFBQSxDQUFBLENBQzdDLGtCQUFBLENBQXFCLFlBQUEsQ0FBYSxNQUFBLENBQU8sYUFBQSxDQUFBLENBR3pDLFlBQUEsQ0FBWSxHQUFBLENBQUEsTUFBQSxDQUFPLGVBQUEsQ0FBZ0IsS0FBQSxDQUF2QixHQUFBLENBQUEsQ0FFbEIsYUFBQSxFQUFpQixZQUFBLENBQWEsTUFBQSxDQUU5QixRQUFBLENBQVMsS0FBQSxDQUFRLG1CQUFBLENBQXNCLFlBQUEsQ0FBZSxrQkFBQSxDQUN0RCxRQUFBLENBQVMsS0FBQSxFQUFBLENBRVQsUUFBQSxDQUFTLGlCQUFBLENBQWtCLGFBQUEsQ0FBZSxhQUFBLENBQUEsQ0FBQSxDQUFBLENBTTVDLFFBQUEsQ0FBUyxnQkFBQSxDQUFpQixNQUFBLENBQVEsVUFBQSxDQUNoQyxhQUFBLENBQWdCLFFBQUEsQ0FBUyxjQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE7OzthQ25DN0IsSUFBQSxBQUtNLFFBQUEsQ0FBVyxRQUFBLENBQVMsYUFBQSxDQUFjLFFBQUEsQ0FBUyxhQUFBLENBQWMsUUFBQSxDQUFBLENBQVUsT0FBQSxDQUFRLGNBQUEsQ0FBQSxDQUNqRixRQUFBLENBQVMsZ0JBQUEsQ0FBaUIsVUFBQSxDQUFBLENBQVksT0FBQSxDQUFRLFNBQUMsWUFBQSxDQUFBLENBQUEsQ0FDN0MsQ0FBQSxDQUFBLGtCQUFBLENBQUEsY0FBQSxFQUFlLFlBQUEsQ0FBYyxRQUFBLENBQUEsQ0FBQSxDQUFBLENBQUE7QUNQL0I7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSBieSB0aGUgQUNQMyBEZXZlbG9wZXJzLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHRvcC1sZXZlbCBtb2R1bGUgZGlyZWN0b3J5IGZvciBsaWNlbnNpbmcgZGV0YWlscy5cbiAqL1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVtb3RpY29uRWxlbWVudFxuICogQHBhcmFtIHtIVE1MVGV4dEFyZWFFbGVtZW50fSB0ZXh0YXJlYVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5zZXJ0RW1vdGljb24oZW1vdGljb25FbGVtZW50LCB0ZXh0YXJlYSkge1xuICBsZXQgY2FyZXRQb3NpdGlvbiA9IDA7XG5cbiAgZW1vdGljb25FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgY3VycmVudFZhbHVlID0gdGV4dGFyZWEudmFsdWU7XG4gICAgY29uc3QgdGV4dEJlZm9yZVNlbGVjdGlvbiA9IGN1cnJlbnRWYWx1ZS5zdWJzdHIoMCwgY2FyZXRQb3NpdGlvbik7XG4gICAgY29uc3QgdGV4dEFmdGVyU2VsZWN0aW9uID0gY3VycmVudFZhbHVlLnN1YnN0cihjYXJldFBvc2l0aW9uKTtcblxuICAgIC8vIEFkZCBsZWFkaW5nIGFuZCB0cmFpbGluZyBzcGFjZXMgdG8gdGhlIHRvIGJlIGluc2VydGVkIGVtb3RpY29uLCBzbyB0aGF0IHdlIGFyZW4ndCBnZXR0aW5nIGludG8gb3ZlcmZsb3cgcHJvYmxlbXMsIGV0Yy5cbiAgICBjb25zdCBlbW90aWNvbkNvZGUgPSBgICR7ZW1vdGljb25FbGVtZW50LnRpdGxlfSBgO1xuXG4gICAgY2FyZXRQb3NpdGlvbiArPSBlbW90aWNvbkNvZGUubGVuZ3RoO1xuXG4gICAgdGV4dGFyZWEudmFsdWUgPSB0ZXh0QmVmb3JlU2VsZWN0aW9uICsgZW1vdGljb25Db2RlICsgdGV4dEFmdGVyU2VsZWN0aW9uO1xuICAgIHRleHRhcmVhLmZvY3VzKCk7XG5cbiAgICB0ZXh0YXJlYS5zZXRTZWxlY3Rpb25SYW5nZShjYXJldFBvc2l0aW9uLCBjYXJldFBvc2l0aW9uKTtcbiAgfSk7XG5cbiAgLy8gV2hlbiBjbGlja2luZyBvbiBvbmUgb2YgdGhlIGVtb3RpY29ucywgdGhlIHRleHRhcmVhJ3MgYmx1ciBldmVudCBnZXRzIHRyaWdnZXJlZC5cbiAgLy8gV2UgY2FuIHVzZSB0aGlzIHRvIHNhdmUgdGhlIGxhc3Qga25vd24gY2FyZXQgcG9zaXRpb24sIHNvIHRoYXQgdGhlIGVtb3RpY29uIGNhbiBiZSBpbnNlcnRlZCBpbnRvIHRoZSBjb3JyZWN0XG4gIC8vIHBvc2l0aW9uXG4gIHRleHRhcmVhLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsICgpID0+IHtcbiAgICBjYXJldFBvc2l0aW9uID0gdGV4dGFyZWEuc2VsZWN0aW9uU3RhcnQ7XG4gIH0pO1xufVxuIiwiaW1wb3J0IHsgaW5zZXJ0RW1vdGljb24gfSBmcm9tIFwiLi4vbGlicy9pbnNlcnQtZW1vdGljb25cIjtcblxuLyoqXG4gKiBAdHlwZSB7SFRNTFRleHRBcmVhRWxlbWVudH1cbiAqL1xuY29uc3QgdGV4dGFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaWNvbnNcIikuZGF0YXNldC5lbW90aWNvbnNJbnB1dCk7XG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmljb25zIGFcIikuZm9yRWFjaCgoZW1vdGljb25FbGVtKSA9PiB7XG4gIGluc2VydEVtb3RpY29uKGVtb3RpY29uRWxlbSwgdGV4dGFyZWEpO1xufSk7XG4iLCJcbn0oKSk7Il19"}