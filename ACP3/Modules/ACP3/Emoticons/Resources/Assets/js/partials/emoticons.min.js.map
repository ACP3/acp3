{"version":3,"sources":["ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/ACP3/Modules/ACP3/Emoticons/Resources/Assets/js/partials/emoticons.js"],"names":["jQuery","fn","getCaretPosition","this","selectionStart","document","selection","focus","range","createRange","re","createTextRange","rc","duplicate","moveToBookmark","getBookmark","setEndPoint","text","length","setCaretPosition","pos","each","index","elem","setSelectionRange","collapse","moveEnd","moveStart","select","insertEmoticon","textareaId","caretPosition","textarea","$","click","e","preventDefault","currentValue","val","textBeforeSelection","substr","textAfterSelection","attr","blur","data"],"mappings":"AAKAA,OAAOC,GAAGC,iBAAmB,WAC3B,GAAIC,KAAK,GAAGC,eACV,OAAOD,KAAK,GAAGC,eACV,GAAIC,SAASC,UAAW,CAC7BH,KAAK,GAAGI,QAER,IAAMC,EAAQH,SAASC,UAAUG,cACjC,GAAa,MAATD,EACF,OAAO,EAGT,IAAME,EAAKP,KAAK,GAAGQ,kBACjBC,EAAKF,EAAGG,YAIV,OAHAH,EAAGI,eAAeN,EAAMO,eACxBH,EAAGI,YAAY,aAAcN,GAEtBE,EAAGK,KAAKC,OAEjB,OAAO,GASTlB,OAAOC,GAAGkB,iBAAmB,SAAUC,GAYrC,OAXAjB,KAAKkB,MAAK,SAAUC,EAAOC,GACzB,GAAIA,EAAKC,kBACPD,EAAKC,kBAAkBJ,EAAKA,QACvB,GAAIG,EAAKZ,gBAAiB,CAC/B,IAAMH,EAAQe,EAAKZ,kBACnBH,EAAMiB,UAAA,GACNjB,EAAMkB,QAAQ,YAAaN,GAC3BZ,EAAMmB,UAAU,YAAaP,GAC7BZ,EAAMoB,aAGHzB,MAOTH,OAAOC,GAAG4B,eAAiB,SAAUC,GACnC,IAAIC,EAAgB,EACdC,EAAWC,EAAEH,GACTG,EAAE9B,MAEN+B,OAAM,SAAUC,GACpBA,EAAEC,iBAEF,IAAIC,EAAeL,EAASM,MAC1BC,EAAsBF,EAAaG,OAAO,EAAGT,GAC7CU,EAAqBJ,EAAaG,OAAOT,GAE3CA,GAAiBE,EAAE9B,MAAMuC,KAAK,SAASxB,OAAS,EAEhDc,EACGM,IAAIC,EAAsB,IAAMN,EAAE9B,MAAMuC,KAAK,SAAW,IAAMD,GAC9DlC,QACAY,iBAAiBY,MAItBC,EAASW,MAAK,WACZZ,EAAgBC,EAAS9B,uBAI7B,SAAE+B,GACAA,EAAE,YAAYJ,eAAeI,EAAE,UAAUW,KAAK,oBADhD,CAEG5C","sourcesContent":["/**\n * Cursorposition in einem Textfeld bestimmen\n *\n * @returns {*}\n */\njQuery.fn.getCaretPosition = function () {\n  if (this[0].selectionStart) {\n    return this[0].selectionStart;\n  } else if (document.selection) {\n    this[0].focus();\n\n    const range = document.selection.createRange();\n    if (range == null) {\n      return 0;\n    }\n\n    const re = this[0].createTextRange(),\n      rc = re.duplicate();\n    re.moveToBookmark(range.getBookmark());\n    rc.setEndPoint(\"EndToStart\", re);\n\n    return rc.text.length;\n  }\n  return 0;\n};\n\n/**\n * Cursorposition in einem Textfeld an eine bestimme Position setzen\n *\n * @param pos\n * @returns {jQuery.fn}\n */\njQuery.fn.setCaretPosition = function (pos) {\n  this.each(function (index, elem) {\n    if (elem.setSelectionRange) {\n      elem.setSelectionRange(pos, pos);\n    } else if (elem.createTextRange) {\n      const range = elem.createTextRange();\n      range.collapse(true);\n      range.moveEnd(\"character\", pos);\n      range.moveStart(\"character\", pos);\n      range.select();\n    }\n  });\n  return this;\n};\n\n/**\n *\n * @param textareaId\n */\njQuery.fn.insertEmoticon = function (textareaId) {\n  let caretPosition = 0;\n  const textarea = $(textareaId),\n    $this = $(this);\n\n  $this.click(function (e) {\n    e.preventDefault();\n\n    let currentValue = textarea.val(),\n      textBeforeSelection = currentValue.substr(0, caretPosition),\n      textAfterSelection = currentValue.substr(caretPosition);\n\n    caretPosition += $(this).attr(\"title\").length + 2;\n\n    textarea\n      .val(textBeforeSelection + \" \" + $(this).attr(\"title\") + \" \" + textAfterSelection)\n      .focus()\n      .setCaretPosition(caretPosition);\n  });\n\n  // Aktuelle Cursorposition speichern\n  textarea.blur(() => {\n    caretPosition = textarea.getCaretPosition();\n  });\n};\n\n(($) => {\n  $(\".icons a\").insertEmoticon($(\".icons\").data(\"emoticons-input\"));\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFDUDMvTW9kdWxlcy9BQ1AzL0Vtb3RpY29ucy9SZXNvdXJjZXMvQXNzZXRzL2pzL3BhcnRpYWxzL2Vtb3RpY29ucy5qcyJdLCJuYW1lcyI6WyJqUXVlcnkiLCJmbiIsImdldENhcmV0UG9zaXRpb24iLCJ0aGlzIiwic2VsZWN0aW9uU3RhcnQiLCJkb2N1bWVudCIsInNlbGVjdGlvbiIsImZvY3VzIiwicmFuZ2UiLCJjcmVhdGVSYW5nZSIsInJlIiwiY3JlYXRlVGV4dFJhbmdlIiwicmMiLCJkdXBsaWNhdGUiLCJtb3ZlVG9Cb29rbWFyayIsImdldEJvb2ttYXJrIiwic2V0RW5kUG9pbnQiLCJ0ZXh0IiwibGVuZ3RoIiwic2V0Q2FyZXRQb3NpdGlvbiIsInBvcyIsImVhY2giLCJpbmRleCIsImVsZW0iLCJzZXRTZWxlY3Rpb25SYW5nZSIsImNvbGxhcHNlIiwibW92ZUVuZCIsIm1vdmVTdGFydCIsInNlbGVjdCIsImluc2VydEVtb3RpY29uIiwidGV4dGFyZWFJZCIsImNhcmV0UG9zaXRpb24iLCJ0ZXh0YXJlYSIsIiQiLCJjbGljayIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRWYWx1ZSIsInZhbCIsInRleHRCZWZvcmVTZWxlY3Rpb24iLCJzdWJzdHIiLCJ0ZXh0QWZ0ZXJTZWxlY3Rpb24iLCJhdHRyIiwiYmx1ciIsImRhdGEiXSwibWFwcGluZ3MiOiJBQUtBQSxPQUFPQyxHQUFHQyxpQkFBbUIsV0FDM0IsR0FBSUMsS0FBSyxHQUFHQyxlQUNWLE9BQU9ELEtBQUssR0FBR0MsZUFDVixHQUFJQyxTQUFTQyxVQUFXLENBQzdCSCxLQUFLLEdBQUdJLFFBRVIsSUFBTUMsRUFBUUgsU0FBU0MsVUFBVUcsY0FDakMsR0FBYSxNQUFURCxFQUNGLE9BQU8sRUFHVCxJQUFNRSxFQUFLUCxLQUFLLEdBQUdRLGtCQUNqQkMsRUFBS0YsRUFBR0csWUFJVixPQUhBSCxFQUFHSSxlQUFlTixFQUFNTyxlQUN4QkgsRUFBR0ksWUFBWSxhQUFjTixHQUV0QkUsRUFBR0ssS0FBS0MsT0FFakIsT0FBTyxHQVNUbEIsT0FBT0MsR0FBR2tCLGlCQUFtQixTQUFVQyxHQVlyQyxPQVhBakIsS0FBS2tCLE1BQUssU0FBVUMsRUFBT0MsR0FDekIsR0FBSUEsRUFBS0Msa0JBQ1BELEVBQUtDLGtCQUFrQkosRUFBS0EsUUFDdkIsR0FBSUcsRUFBS1osZ0JBQWlCLENBQy9CLElBQU1ILEVBQVFlLEVBQUtaLGtCQUNuQkgsRUFBTWlCLFVBQUEsR0FDTmpCLEVBQU1rQixRQUFRLFlBQWFOLEdBQzNCWixFQUFNbUIsVUFBVSxZQUFhUCxHQUM3QlosRUFBTW9CLGFBR0h6QixNQU9USCxPQUFPQyxHQUFHNEIsZUFBaUIsU0FBVUMsR0FDbkMsSUFBSUMsRUFBZ0IsRUFDZEMsRUFBV0MsRUFBRUgsR0FDVEcsRUFBRTlCLE1BRU4rQixPQUFNLFNBQVVDLEdBQ3BCQSxFQUFFQyxpQkFFRixJQUFJQyxFQUFlTCxFQUFTTSxNQUMxQkMsRUFBc0JGLEVBQWFHLE9BQU8sRUFBR1QsR0FDN0NVLEVBQXFCSixFQUFhRyxPQUFPVCxHQUUzQ0EsR0FBaUJFLEVBQUU5QixNQUFNdUMsS0FBSyxTQUFTeEIsT0FBUyxFQUVoRGMsRUFDR00sSUFBSUMsRUFBc0IsSUFBTU4sRUFBRTlCLE1BQU11QyxLQUFLLFNBQVcsSUFBTUQsR0FDOURsQyxRQUNBWSxpQkFBaUJZLE1BSXRCQyxFQUFTVyxNQUFLLFdBQ1paLEVBQWdCQyxFQUFTOUIsdUJBSTdCLFNBQUUrQixHQUNBQSxFQUFFLFlBQVlKLGVBQWVJLEVBQUUsVUFBVVcsS0FBSyxvQkFEaEQsQ0FFRzVDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDdXJzb3Jwb3NpdGlvbiBpbiBlaW5lbSBUZXh0ZmVsZCBiZXN0aW1tZW5cbiAqXG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xualF1ZXJ5LmZuLmdldENhcmV0UG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzWzBdLnNlbGVjdGlvblN0YXJ0KSB7XG4gICAgcmV0dXJuIHRoaXNbMF0uc2VsZWN0aW9uU3RhcnQ7XG4gIH0gZWxzZSBpZiAoZG9jdW1lbnQuc2VsZWN0aW9uKSB7XG4gICAgdGhpc1swXS5mb2N1cygpO1xuXG4gICAgY29uc3QgcmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTtcbiAgICBpZiAocmFuZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgY29uc3QgcmUgPSB0aGlzWzBdLmNyZWF0ZVRleHRSYW5nZSgpLFxuICAgICAgcmMgPSByZS5kdXBsaWNhdGUoKTtcbiAgICByZS5tb3ZlVG9Cb29rbWFyayhyYW5nZS5nZXRCb29rbWFyaygpKTtcbiAgICByYy5zZXRFbmRQb2ludChcIkVuZFRvU3RhcnRcIiwgcmUpO1xuXG4gICAgcmV0dXJuIHJjLnRleHQubGVuZ3RoO1xuICB9XG4gIHJldHVybiAwO1xufTtcblxuLyoqXG4gKiBDdXJzb3Jwb3NpdGlvbiBpbiBlaW5lbSBUZXh0ZmVsZCBhbiBlaW5lIGJlc3RpbW1lIFBvc2l0aW9uIHNldHplblxuICpcbiAqIEBwYXJhbSBwb3NcbiAqIEByZXR1cm5zIHtqUXVlcnkuZm59XG4gKi9cbmpRdWVyeS5mbi5zZXRDYXJldFBvc2l0aW9uID0gZnVuY3Rpb24gKHBvcykge1xuICB0aGlzLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtKSB7XG4gICAgaWYgKGVsZW0uc2V0U2VsZWN0aW9uUmFuZ2UpIHtcbiAgICAgIGVsZW0uc2V0U2VsZWN0aW9uUmFuZ2UocG9zLCBwb3MpO1xuICAgIH0gZWxzZSBpZiAoZWxlbS5jcmVhdGVUZXh0UmFuZ2UpIHtcbiAgICAgIGNvbnN0IHJhbmdlID0gZWxlbS5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgcmFuZ2UubW92ZUVuZChcImNoYXJhY3RlclwiLCBwb3MpO1xuICAgICAgcmFuZ2UubW92ZVN0YXJ0KFwiY2hhcmFjdGVyXCIsIHBvcyk7XG4gICAgICByYW5nZS5zZWxlY3QoKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB0ZXh0YXJlYUlkXG4gKi9cbmpRdWVyeS5mbi5pbnNlcnRFbW90aWNvbiA9IGZ1bmN0aW9uICh0ZXh0YXJlYUlkKSB7XG4gIGxldCBjYXJldFBvc2l0aW9uID0gMDtcbiAgY29uc3QgdGV4dGFyZWEgPSAkKHRleHRhcmVhSWQpLFxuICAgICR0aGlzID0gJCh0aGlzKTtcblxuICAkdGhpcy5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGxldCBjdXJyZW50VmFsdWUgPSB0ZXh0YXJlYS52YWwoKSxcbiAgICAgIHRleHRCZWZvcmVTZWxlY3Rpb24gPSBjdXJyZW50VmFsdWUuc3Vic3RyKDAsIGNhcmV0UG9zaXRpb24pLFxuICAgICAgdGV4dEFmdGVyU2VsZWN0aW9uID0gY3VycmVudFZhbHVlLnN1YnN0cihjYXJldFBvc2l0aW9uKTtcblxuICAgIGNhcmV0UG9zaXRpb24gKz0gJCh0aGlzKS5hdHRyKFwidGl0bGVcIikubGVuZ3RoICsgMjtcblxuICAgIHRleHRhcmVhXG4gICAgICAudmFsKHRleHRCZWZvcmVTZWxlY3Rpb24gKyBcIiBcIiArICQodGhpcykuYXR0cihcInRpdGxlXCIpICsgXCIgXCIgKyB0ZXh0QWZ0ZXJTZWxlY3Rpb24pXG4gICAgICAuZm9jdXMoKVxuICAgICAgLnNldENhcmV0UG9zaXRpb24oY2FyZXRQb3NpdGlvbik7XG4gIH0pO1xuXG4gIC8vIEFrdHVlbGxlIEN1cnNvcnBvc2l0aW9uIHNwZWljaGVyblxuICB0ZXh0YXJlYS5ibHVyKCgpID0+IHtcbiAgICBjYXJldFBvc2l0aW9uID0gdGV4dGFyZWEuZ2V0Q2FyZXRQb3NpdGlvbigpO1xuICB9KTtcbn07XG5cbigoJCkgPT4ge1xuICAkKFwiLmljb25zIGFcIikuaW5zZXJ0RW1vdGljb24oJChcIi5pY29uc1wiKS5kYXRhKFwiZW1vdGljb25zLWlucHV0XCIpKTtcbn0pKGpRdWVyeSk7XG4iXX0=","file":"emoticons.min.js"}