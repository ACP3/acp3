{"version":3,"sources":["ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/index.index.js"],"names":["_$utils_2","elementContainingScriptTags","ajaxScriptElement","getElementsByTagName","scriptElement","document","createElement","src","innerHTML","head","appendChild","createLinkElem","getElementById","modalElem","modal","bootstrap","Modal","addEventListener","async","e","preventDefault","show","classList","contains","response","fetch","href","headers","X-Requested-With","modalContentElem","querySelector","text","addScriptsToHead","add"],"mappings":"CAAA,WACA,IAAAA,EAAA,uECoCO,SAA0BC,GAC/B,IAAK,MAAMC,KAAqBD,EAA4BE,qBAAqB,UAAW,CAC1F,MAAMC,EAAgBC,SAASC,cAAc,UACxCJ,EAAkBK,IAGrBH,EAAcG,IAAML,EAAkBK,IAFtCH,EAAcI,UAAYN,EAAkBM,UAI9CH,SAASI,KAAKC,YAAYN,KCpC9B,CAAEC,IACA,MAAMM,EAAiBN,EAASO,eAAe,kBACzCC,EAAYR,EAASO,eAAe,mBACpCE,EAAQ,IAAIC,UAAUC,MAAMH,GAElCF,EAAeM,iBAAiB,QAASC,MAAAA,IAKvC,GAJAC,EAAEC,iBAEFN,EAAMO,OAEFR,EAAUS,UAAUC,SAAS,uBAC/B,OAGF,MAAMC,QAAiBC,MAAMd,EAAee,KAAM,CAChDC,QAAS,CACPC,mBAAoB,oBAIlBC,EAAmBhB,EAAUiB,cAAc,kBACjDD,EAAiBrB,gBAAkBgB,EAASO,QAAA,EAC5C/B,EAAAgC,kBAAiBH,GAEjBhB,EAAUS,UAAUW,IAAI,0BAxB5B,CA0BG5B,UFnCH","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  if (!dataAttributeOptions) {\n    return mergedSettings;\n  }\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      try {\n        mergedSettings[keyStripped] = JSON.parse(value);\n      } catch {\n        mergedSettings[keyStripped] = value;\n      }\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n/**\n * This function add downloads javascript code (e.g. after XHR requests) to the HTML documents <head>, so that the\n * javascript code can actually get executed.\n *\n * @param {HTMLElement} elementContainingScriptTags\n */\nexport function addScriptsToHead(elementContainingScriptTags) {\n  for (const ajaxScriptElement of elementContainingScriptTags.getElementsByTagName(\"script\")) {\n    const scriptElement = document.createElement(\"script\");\n    if (!ajaxScriptElement.src) {\n      scriptElement.innerHTML = ajaxScriptElement.innerHTML;\n    } else {\n      scriptElement.src = ajaxScriptElement.src;\n    }\n    document.head.appendChild(scriptElement);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\n/* global bootstrap */\n\nimport { addScriptsToHead } from \"../../../../../System/Resources/Assets/js/lib/utils\";\n\n((document) => {\n  const createLinkElem = document.getElementById(\"js-create-link\");\n  const modalElem = document.getElementById(\"js-modal-create\");\n  const modal = new bootstrap.Modal(modalElem);\n\n  createLinkElem.addEventListener(\"click\", async (e) => {\n    e.preventDefault();\n\n    modal.show();\n\n    if (modalElem.classList.contains(\"js-replaced-content\")) {\n      return;\n    }\n\n    const response = await fetch(createLinkElem.href, {\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n    });\n\n    const modalContentElem = modalElem.querySelector(\".modal-content\");\n    modalContentElem.innerHTML = await response.text();\n    addScriptsToHead(modalContentElem);\n\n    modalElem.classList.add(\"js-replaced-content\");\n  });\n})(document);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2stZmxhdC9fcHJlbHVkZSIsIkFDUDMvTW9kdWxlcy9BQ1AzL1N5c3RlbS9SZXNvdXJjZXMvQXNzZXRzL2pzL2xpYi91dGlscy5qcyIsIkFDUDMvTW9kdWxlcy9BQ1AzL0d1ZXN0Ym9vay9SZXNvdXJjZXMvQXNzZXRzL2pzL2Zyb250ZW5kL2luZGV4LmluZGV4LmpzIl0sIm5hbWVzIjpbIl8kdXRpbHNfMiIsImVsZW1lbnRDb250YWluaW5nU2NyaXB0VGFncyIsImFqYXhTY3JpcHRFbGVtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzY3JpcHRFbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiaW5uZXJIVE1MIiwiaGVhZCIsImFwcGVuZENoaWxkIiwiY3JlYXRlTGlua0VsZW0iLCJnZXRFbGVtZW50QnlJZCIsIm1vZGFsRWxlbSIsIm1vZGFsIiwiYm9vdHN0cmFwIiwiTW9kYWwiLCJhZGRFdmVudExpc3RlbmVyIiwiYXN5bmMiLCJlIiwicHJldmVudERlZmF1bHQiLCJzaG93IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZXNwb25zZSIsImZldGNoIiwiaHJlZiIsImhlYWRlcnMiLCJYLVJlcXVlc3RlZC1XaXRoIiwibW9kYWxDb250ZW50RWxlbSIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0IiwiYWRkU2NyaXB0c1RvSGVhZCIsImFkZCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxJQUFBQSxFQUFBLHVFQ29DTyxTQUEwQkMsR0FDL0IsSUFBSyxNQUFNQyxLQUFxQkQsRUFBNEJFLHFCQUFxQixVQUFXLENBQzFGLE1BQU1DLEVBQWdCQyxTQUFTQyxjQUFjLFVBQ3hDSixFQUFrQkssSUFHckJILEVBQWNHLElBQU1MLEVBQWtCSyxJQUZ0Q0gsRUFBY0ksVUFBWU4sRUFBa0JNLFVBSTlDSCxTQUFTSSxLQUFLQyxZQUFZTixLQ3BDOUIsQ0FBRUMsSUFDQSxNQUFNTSxFQUFpQk4sRUFBU08sZUFBZSxrQkFDekNDLEVBQVlSLEVBQVNPLGVBQWUsbUJBQ3BDRSxFQUFRLElBQUlDLFVBQVVDLE1BQU1ILEdBRWxDRixFQUFlTSxpQkFBaUIsUUFBU0MsTUFBQUEsSUFLdkMsR0FKQUMsRUFBRUMsaUJBRUZOLEVBQU1PLE9BRUZSLEVBQVVTLFVBQVVDLFNBQVMsdUJBQy9CLE9BR0YsTUFBTUMsUUFBaUJDLE1BQU1kLEVBQWVlLEtBQU0sQ0FDaERDLFFBQVMsQ0FDUEMsbUJBQW9CLG9CQUlsQkMsRUFBbUJoQixFQUFVaUIsY0FBYyxrQkFDakRELEVBQWlCckIsZ0JBQWtCZ0IsRUFBU08sUUFBQSxFQUM1Qy9CLEVBQUFnQyxrQkFBaUJILEdBRWpCaEIsRUFBVVMsVUFBVVcsSUFBSSwwQkF4QjVCLENBMEJHNUIsVUZuQ0giLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcbiIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIGJ5IHRoZSBBQ1AzIERldmVsb3BlcnMuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBhdCB0aGUgdG9wLWxldmVsIG1vZHVsZSBkaXJlY3RvcnkgZm9yIGxpY2Vuc2luZyBkZXRhaWxzLlxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZVNldHRpbmdzKGRlZmF1bHRTZXR0aW5ncywgY29uc3RydWN0b3JPcHRpb25zLCBkYXRhQXR0cmlidXRlT3B0aW9ucykge1xuICBjb25zdCBtZXJnZWRTZXR0aW5ncyA9IHsgLi4uZGVmYXVsdFNldHRpbmdzLCAuLi5jb25zdHJ1Y3Rvck9wdGlvbnMgfTtcblxuICBpZiAoIWRhdGFBdHRyaWJ1dGVPcHRpb25zKSB7XG4gICAgcmV0dXJuIG1lcmdlZFNldHRpbmdzO1xuICB9XG5cbiAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGFBdHRyaWJ1dGVPcHRpb25zKSkge1xuICAgIGNvbnN0IGtleVN0cmlwcGVkID0gbG93ZXJDYXNlRmlyc3RMZXR0ZXIoa2V5LnJlcGxhY2UoXCJhamF4Rm9ybVwiLCBcIlwiKSk7XG5cbiAgICBpZiAoa2V5U3RyaXBwZWQubGVuZ3RoID4gMCAmJiB0eXBlb2YgbWVyZ2VkU2V0dGluZ3Nba2V5U3RyaXBwZWRdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0cnkge1xuICAgICAgICBtZXJnZWRTZXR0aW5nc1trZXlTdHJpcHBlZF0gPSBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgIH0gY2F0Y2gge1xuICAgICAgICBtZXJnZWRTZXR0aW5nc1trZXlTdHJpcHBlZF0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkU2V0dGluZ3M7XG59XG5cbmZ1bmN0aW9uIGxvd2VyQ2FzZUZpcnN0TGV0dGVyKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWRkIGRvd25sb2FkcyBqYXZhc2NyaXB0IGNvZGUgKGUuZy4gYWZ0ZXIgWEhSIHJlcXVlc3RzKSB0byB0aGUgSFRNTCBkb2N1bWVudHMgPGhlYWQ+LCBzbyB0aGF0IHRoZVxuICogamF2YXNjcmlwdCBjb2RlIGNhbiBhY3R1YWxseSBnZXQgZXhlY3V0ZWQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudENvbnRhaW5pbmdTY3JpcHRUYWdzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRTY3JpcHRzVG9IZWFkKGVsZW1lbnRDb250YWluaW5nU2NyaXB0VGFncykge1xuICBmb3IgKGNvbnN0IGFqYXhTY3JpcHRFbGVtZW50IG9mIGVsZW1lbnRDb250YWluaW5nU2NyaXB0VGFncy5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKSkge1xuICAgIGNvbnN0IHNjcmlwdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgIGlmICghYWpheFNjcmlwdEVsZW1lbnQuc3JjKSB7XG4gICAgICBzY3JpcHRFbGVtZW50LmlubmVySFRNTCA9IGFqYXhTY3JpcHRFbGVtZW50LmlubmVySFRNTDtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NyaXB0RWxlbWVudC5zcmMgPSBhamF4U2NyaXB0RWxlbWVudC5zcmM7XG4gICAgfVxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0RWxlbWVudCk7XG4gIH1cbn1cbiIsIi8qXG4gKiBDb3B5cmlnaHQgKGMpIGJ5IHRoZSBBQ1AzIERldmVsb3BlcnMuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBhdCB0aGUgdG9wLWxldmVsIG1vZHVsZSBkaXJlY3RvcnkgZm9yIGxpY2Vuc2luZyBkZXRhaWxzLlxuICovXG5cbi8qIGdsb2JhbCBib290c3RyYXAgKi9cblxuaW1wb3J0IHsgYWRkU2NyaXB0c1RvSGVhZCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi9TeXN0ZW0vUmVzb3VyY2VzL0Fzc2V0cy9qcy9saWIvdXRpbHNcIjtcblxuKChkb2N1bWVudCkgPT4ge1xuICBjb25zdCBjcmVhdGVMaW5rRWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwianMtY3JlYXRlLWxpbmtcIik7XG4gIGNvbnN0IG1vZGFsRWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwianMtbW9kYWwtY3JlYXRlXCIpO1xuICBjb25zdCBtb2RhbCA9IG5ldyBib290c3RyYXAuTW9kYWwobW9kYWxFbGVtKTtcblxuICBjcmVhdGVMaW5rRWxlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBtb2RhbC5zaG93KCk7XG5cbiAgICBpZiAobW9kYWxFbGVtLmNsYXNzTGlzdC5jb250YWlucyhcImpzLXJlcGxhY2VkLWNvbnRlbnRcIikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGNyZWF0ZUxpbmtFbGVtLmhyZWYsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJYLVJlcXVlc3RlZC1XaXRoXCI6IFwiWE1MSHR0cFJlcXVlc3RcIixcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBtb2RhbENvbnRlbnRFbGVtID0gbW9kYWxFbGVtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtY29udGVudFwiKTtcbiAgICBtb2RhbENvbnRlbnRFbGVtLmlubmVySFRNTCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICBhZGRTY3JpcHRzVG9IZWFkKG1vZGFsQ29udGVudEVsZW0pO1xuXG4gICAgbW9kYWxFbGVtLmNsYXNzTGlzdC5hZGQoXCJqcy1yZXBsYWNlZC1jb250ZW50XCIpO1xuICB9KTtcbn0pKGRvY3VtZW50KTtcbiJdfQ==","file":"index.index.min.js"}