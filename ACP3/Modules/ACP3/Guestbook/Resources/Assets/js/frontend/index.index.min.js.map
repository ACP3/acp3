{"version":3,"sources":["ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/node_modules/browser-pack-flat/_prelude","ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/ACP3/Modules/ACP3/System/Resources/Assets/js/lib/utils.js","ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/ACP3/Modules/ACP3/Guestbook/Resources/Assets/js/frontend/index.index.js"],"names":["_$utils_2","addScriptsToHead","elementContainingScriptTags","ajaxScriptElement","getElementsByTagName","scriptElement","document","createElement","src","innerHTML","head","appendChild","createLinkElem","getElementById","modalElem","modal","bootstrap","Modal","addEventListener","async","e","preventDefault","show","classList","contains","response","fetch","href","headers","X-Requested-With","modalContentElem","querySelector","text","add"],"mappings":"CAAA,WACA,IAAAA,EAAA,oDCuBSA,EAAAC,iBAaF,SAA0BC,GAC/B,IAAK,MAAMC,KAAqBD,EAA4BE,qBAAqB,UAAW,CAC1F,MAAMC,EAAgBC,SAASC,cAAc,UACxCJ,EAAkBK,IAGrBH,EAAcG,IAAML,EAAkBK,IAFtCH,EAAcI,UAAYN,EAAkBM,UAI9CH,SAASI,KAAKC,YAAYN,KCpC9B,CAAEC,IACA,MAAMM,EAAiBN,EAASO,eAAe,kBACzCC,EAAYR,EAASO,eAAe,mBACpCE,EAAQ,IAAIC,UAAUC,MAAMH,GAElCF,EAAeM,iBAAiB,QAASC,MAAAA,IAKvC,GAJAC,EAAEC,iBAEFN,EAAMO,OAEFR,EAAUS,UAAUC,SAAS,uBAC/B,OAGF,MAAMC,QAAiBC,MAAMd,EAAee,KAAM,CAChDC,QAAS,CACPC,mBAAoB,oBAIlBC,EAAmBhB,EAAUiB,cAAc,kBACjDD,EAAiBrB,gBAAkBgB,EAASO,QAAA,EAC5ChC,EAAAC,kBAAiB6B,GAEjBhB,EAAUS,UAAUU,IAAI,0BAxB5B,CA0BG3B,UFnCH","sourcesContent":["(function(){\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\nexport function mergeSettings(defaultSettings, constructorOptions, dataAttributeOptions) {\n  const mergedSettings = { ...defaultSettings, ...constructorOptions };\n\n  if (!dataAttributeOptions) {\n    return mergedSettings;\n  }\n\n  for (let [key, value] of Object.entries(dataAttributeOptions)) {\n    const keyStripped = lowerCaseFirstLetter(key.replace(\"ajaxForm\", \"\"));\n\n    if (keyStripped.length > 0 && typeof mergedSettings[keyStripped] !== \"undefined\") {\n      try {\n        mergedSettings[keyStripped] = JSON.parse(value);\n      } catch {\n        mergedSettings[keyStripped] = value;\n      }\n    }\n  }\n\n  return mergedSettings;\n}\n\nfunction lowerCaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n/**\n * This function add downloads javascript code (e.g. after XHR requests) to the HTML documents <head>, so that the\n * javascript code can actually get executed.\n *\n * @param {HTMLElement} elementContainingScriptTags\n */\nexport function addScriptsToHead(elementContainingScriptTags) {\n  for (const ajaxScriptElement of elementContainingScriptTags.getElementsByTagName(\"script\")) {\n    const scriptElement = document.createElement(\"script\");\n    if (!ajaxScriptElement.src) {\n      scriptElement.innerHTML = ajaxScriptElement.innerHTML;\n    } else {\n      scriptElement.src = ajaxScriptElement.src;\n    }\n    document.head.appendChild(scriptElement);\n  }\n}\n","/*\n * Copyright (c) by the ACP3 Developers.\n * See the LICENSE file at the top-level module directory for licensing details.\n */\n\n/* global bootstrap */\n\nimport { addScriptsToHead } from \"../../../../../System/Resources/Assets/js/lib/utils\";\n\n((document) => {\n  const createLinkElem = document.getElementById(\"js-create-link\");\n  const modalElem = document.getElementById(\"js-modal-create\");\n  const modal = new bootstrap.Modal(modalElem);\n\n  createLinkElem.addEventListener(\"click\", async (e) => {\n    e.preventDefault();\n\n    modal.show();\n\n    if (modalElem.classList.contains(\"js-replaced-content\")) {\n      return;\n    }\n\n    const response = await fetch(createLinkElem.href, {\n      headers: {\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n    });\n\n    const modalContentElem = modalElem.querySelector(\".modal-content\");\n    modalContentElem.innerHTML = await response.text();\n    addScriptsToHead(modalContentElem);\n\n    modalElem.classList.add(\"js-replaced-content\");\n  });\n})(document);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2stZmxhdC9fcHJlbHVkZSIsIkFDUDMvTW9kdWxlcy9BQ1AzL1N5c3RlbS9SZXNvdXJjZXMvQXNzZXRzL2pzL2xpYi91dGlscy5qcyIsIkFDUDMvTW9kdWxlcy9BQ1AzL0d1ZXN0Ym9vay9SZXNvdXJjZXMvQXNzZXRzL2pzL2Zyb250ZW5kL2luZGV4LmluZGV4LmpzIl0sIm5hbWVzIjpbIl8kdXRpbHNfMiIsImFkZFNjcmlwdHNUb0hlYWQiLCJlbGVtZW50Q29udGFpbmluZ1NjcmlwdFRhZ3MiLCJhamF4U2NyaXB0RWxlbWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic2NyaXB0RWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImlubmVySFRNTCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZUxpbmtFbGVtIiwiZ2V0RWxlbWVudEJ5SWQiLCJtb2RhbEVsZW0iLCJtb2RhbCIsImJvb3RzdHJhcCIsIk1vZGFsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzeW5jIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2hvdyIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVzcG9uc2UiLCJmZXRjaCIsImhyZWYiLCJoZWFkZXJzIiwiWC1SZXF1ZXN0ZWQtV2l0aCIsIm1vZGFsQ29udGVudEVsZW0iLCJxdWVyeVNlbGVjdG9yIiwidGV4dCIsImFkZCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxJQUFBQSxFQUFBLG9EQ3VCU0EsRUFBQUMsaUJBYUYsU0FBMEJDLEdBQy9CLElBQUssTUFBTUMsS0FBcUJELEVBQTRCRSxxQkFBcUIsVUFBVyxDQUMxRixNQUFNQyxFQUFnQkMsU0FBU0MsY0FBYyxVQUN4Q0osRUFBa0JLLElBR3JCSCxFQUFjRyxJQUFNTCxFQUFrQkssSUFGdENILEVBQWNJLFVBQVlOLEVBQWtCTSxVQUk5Q0gsU0FBU0ksS0FBS0MsWUFBWU4sS0NwQzlCLENBQUVDLElBQ0EsTUFBTU0sRUFBaUJOLEVBQVNPLGVBQWUsa0JBQ3pDQyxFQUFZUixFQUFTTyxlQUFlLG1CQUNwQ0UsRUFBUSxJQUFJQyxVQUFVQyxNQUFNSCxHQUVsQ0YsRUFBZU0saUJBQWlCLFFBQVNDLE1BQUFBLElBS3ZDLEdBSkFDLEVBQUVDLGlCQUVGTixFQUFNTyxPQUVGUixFQUFVUyxVQUFVQyxTQUFTLHVCQUMvQixPQUdGLE1BQU1DLFFBQWlCQyxNQUFNZCxFQUFlZSxLQUFNLENBQ2hEQyxRQUFTLENBQ1BDLG1CQUFvQixvQkFJbEJDLEVBQW1CaEIsRUFBVWlCLGNBQWMsa0JBQ2pERCxFQUFpQnJCLGdCQUFrQmdCLEVBQVNPLFFBQUEsRUFDNUNoQyxFQUFBQyxrQkFBaUI2QixHQUVqQmhCLEVBQVVTLFVBQVVVLElBQUksMEJBeEI1QixDQTBCRzNCLFVGbkNIIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSBieSB0aGUgQUNQMyBEZXZlbG9wZXJzLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHRvcC1sZXZlbCBtb2R1bGUgZGlyZWN0b3J5IGZvciBsaWNlbnNpbmcgZGV0YWlscy5cbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VTZXR0aW5ncyhkZWZhdWx0U2V0dGluZ3MsIGNvbnN0cnVjdG9yT3B0aW9ucywgZGF0YUF0dHJpYnV0ZU9wdGlvbnMpIHtcbiAgY29uc3QgbWVyZ2VkU2V0dGluZ3MgPSB7IC4uLmRlZmF1bHRTZXR0aW5ncywgLi4uY29uc3RydWN0b3JPcHRpb25zIH07XG5cbiAgaWYgKCFkYXRhQXR0cmlidXRlT3B0aW9ucykge1xuICAgIHJldHVybiBtZXJnZWRTZXR0aW5ncztcbiAgfVxuXG4gIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkYXRhQXR0cmlidXRlT3B0aW9ucykpIHtcbiAgICBjb25zdCBrZXlTdHJpcHBlZCA9IGxvd2VyQ2FzZUZpcnN0TGV0dGVyKGtleS5yZXBsYWNlKFwiYWpheEZvcm1cIiwgXCJcIikpO1xuXG4gICAgaWYgKGtleVN0cmlwcGVkLmxlbmd0aCA+IDAgJiYgdHlwZW9mIG1lcmdlZFNldHRpbmdzW2tleVN0cmlwcGVkXSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbWVyZ2VkU2V0dGluZ3Nba2V5U3RyaXBwZWRdID0gSlNPTi5wYXJzZSh2YWx1ZSk7XG4gICAgICB9IGNhdGNoIHtcbiAgICAgICAgbWVyZ2VkU2V0dGluZ3Nba2V5U3RyaXBwZWRdID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1lcmdlZFNldHRpbmdzO1xufVxuXG5mdW5jdGlvbiBsb3dlckNhc2VGaXJzdExldHRlcihzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFkZCBkb3dubG9hZHMgamF2YXNjcmlwdCBjb2RlIChlLmcuIGFmdGVyIFhIUiByZXF1ZXN0cykgdG8gdGhlIEhUTUwgZG9jdW1lbnRzIDxoZWFkPiwgc28gdGhhdCB0aGVcbiAqIGphdmFzY3JpcHQgY29kZSBjYW4gYWN0dWFsbHkgZ2V0IGV4ZWN1dGVkLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRDb250YWluaW5nU2NyaXB0VGFnc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkU2NyaXB0c1RvSGVhZChlbGVtZW50Q29udGFpbmluZ1NjcmlwdFRhZ3MpIHtcbiAgZm9yIChjb25zdCBhamF4U2NyaXB0RWxlbWVudCBvZiBlbGVtZW50Q29udGFpbmluZ1NjcmlwdFRhZ3MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIikpIHtcbiAgICBjb25zdCBzY3JpcHRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICBpZiAoIWFqYXhTY3JpcHRFbGVtZW50LnNyYykge1xuICAgICAgc2NyaXB0RWxlbWVudC5pbm5lckhUTUwgPSBhamF4U2NyaXB0RWxlbWVudC5pbm5lckhUTUw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjcmlwdEVsZW1lbnQuc3JjID0gYWpheFNjcmlwdEVsZW1lbnQuc3JjO1xuICAgIH1cbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdEVsZW1lbnQpO1xuICB9XG59XG4iLCIvKlxuICogQ29weXJpZ2h0IChjKSBieSB0aGUgQUNQMyBEZXZlbG9wZXJzLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHRvcC1sZXZlbCBtb2R1bGUgZGlyZWN0b3J5IGZvciBsaWNlbnNpbmcgZGV0YWlscy5cbiAqL1xuXG4vKiBnbG9iYWwgYm9vdHN0cmFwICovXG5cbmltcG9ydCB7IGFkZFNjcmlwdHNUb0hlYWQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vU3lzdGVtL1Jlc291cmNlcy9Bc3NldHMvanMvbGliL3V0aWxzXCI7XG5cbigoZG9jdW1lbnQpID0+IHtcbiAgY29uc3QgY3JlYXRlTGlua0VsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImpzLWNyZWF0ZS1saW5rXCIpO1xuICBjb25zdCBtb2RhbEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImpzLW1vZGFsLWNyZWF0ZVwiKTtcbiAgY29uc3QgbW9kYWwgPSBuZXcgYm9vdHN0cmFwLk1vZGFsKG1vZGFsRWxlbSk7XG5cbiAgY3JlYXRlTGlua0VsZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGFzeW5jIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbW9kYWwuc2hvdygpO1xuXG4gICAgaWYgKG1vZGFsRWxlbS5jbGFzc0xpc3QuY29udGFpbnMoXCJqcy1yZXBsYWNlZC1jb250ZW50XCIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChjcmVhdGVMaW5rRWxlbS5ocmVmLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiOiBcIlhNTEh0dHBSZXF1ZXN0XCIsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgbW9kYWxDb250ZW50RWxlbSA9IG1vZGFsRWxlbS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWNvbnRlbnRcIik7XG4gICAgbW9kYWxDb250ZW50RWxlbS5pbm5lckhUTUwgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgYWRkU2NyaXB0c1RvSGVhZChtb2RhbENvbnRlbnRFbGVtKTtcblxuICAgIG1vZGFsRWxlbS5jbGFzc0xpc3QuYWRkKFwianMtcmVwbGFjZWQtY29udGVudFwiKTtcbiAgfSk7XG59KShkb2N1bWVudCk7XG4iXX0=","file":"index.index.min.js"}