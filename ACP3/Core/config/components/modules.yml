services:
  core.context:
    class: ACP3\Core\Modules\Controller\Context
    arguments: [@core.eventDispatcher, '@core.acl', '@core.user', '@core.lang', '@core.modules', '@core.request', '@core.router', '@core.view', '@core.config']
    public: false

  core.context.admin:
    class: ACP3\Core\Modules\Controller\AdminContext
    arguments: ['@core.context.frontend', '@core.validator.rules.misc', '@core.session']
    public: false

  core.context.frontend:
    class: ACP3\Core\Modules\Controller\FrontendContext
    arguments: ['@core.context', '@core.assets', '@core.breadcrumb', '@core.seo', @core.modules.helper.action]
    public: false

  core.modules:
    class: ACP3\Core\Modules
    arguments: ['@service_container', @core.modules.helper.controllerActionExists, @core.modules.moduleInfoCache, @core.modules.vendors]

  core.modules.aclInstaller:
    class: ACP3\Core\Modules\AclInstaller
    arguments: [@service_container, @core.cache.system, @core.modules.schemaHelper, @permissions.model.rolerepository, @permissions.model.rulerepository, @permissions.model.resourcerepository, @permissions.model.privilegerepository]

  core.modules.controller:
    abstract: true
    arguments: ['@core.context']

  core.modules.controller.frontend:
    abstract: true
    arguments: ['@core.context.frontend']

  core.modules.controller.admin:
    abstract: true
    arguments: ['@core.context.admin']

  core.modules.helper.action:
    class: ACP3\Core\Modules\Helper\Action
    arguments: [@core.lang, @core.request, @core.router, @core.view, @core.helpers.alerts, @core.helpers.redirect]

  core.modules.helper.controllerActionExists:
    class: ACP3\Core\Modules\Helper\ControllerActionExists
    arguments: [@service_container]

  core.modules.moduleInfoCache:
    class: ACP3\Core\Modules\ModuleInfoCache
    arguments: [@core.cache.system, @core.lang, @core.modules.vendors, @core.xml, @system.model.modulerepository]

  core.modules.schemaHelper:
    class: ACP3\Core\Modules\SchemaHelper
    arguments: [@core.db, @system.model.modulerepository, @system.model.settingsrepository]
    calls:
      - ['setContainer', ['@service_container']]

  core.modules.installer.abstractMigration:
    abstract: true
    arguments: [@core.modules.schemaHelper]

  core.modules.installer.abstractSampleData:
    abstract: true
    arguments: [@core.modules.schemaHelper]

  core.modules.schemaInstaller:
    class: ACP3\Core\Modules\SchemaInstaller
    parent: core.modules.schemaHelper

  core.modules.schemaUpdater:
    class: ACP3\Core\Modules\SchemaUpdater
    parent: core.modules.schemaHelper

  core.modules.vendors:
    class: ACP3\Core\Modules\Vendors