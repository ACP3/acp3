parameters:
  fragment_path: "/_fragment"

services:
  _defaults:
    autowire: true

  ACP3\Core\Application\ControllerActionDispatcher:
    public: true
    arguments:
      $serviceLocator: "@core.controller.controller_action_locator"

  Symfony\Component\HttpKernel\Controller\ArgumentResolver: ~
  Symfony\Component\HttpKernel\Controller\ArgumentResolverInterface: '@Symfony\Component\HttpKernel\Controller\ArgumentResolver'

  kernel:
    synthetic: true
    public: true

  esi:
    class: Symfony\Component\HttpKernel\HttpCache\Esi

  Symfony\Component\HttpKernel\HttpCache\SurrogateInterface: "@esi"

  Symfony\Component\HttpKernel\EventListener\SurrogateListener:
    tags:
      - { name: kernel.event_subscriber }

  Symfony\Component\HttpKernel\EventListener\FragmentListener:
    arguments:
      $fragmentPath: "%fragment_path%"
    tags:
      - { name: kernel.event_subscriber }

  fragment.handler:
    class: Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler
    arguments:
      - "@service_container"
      - '@Symfony\Component\HttpFoundation\RequestStack'
      - "%kernel.debug%"

  Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler: "@fragment.handler"
  Symfony\Component\HttpKernel\Fragment\FragmentHandler: "@fragment.handler"

  Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer:
    arguments:
      $kernel: "@kernel"
    calls:
      - setFragmentPath: ["%fragment_path%"]
    tags:
      - { name: kernel.fragment_renderer, alias: "inline" }

  Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer:
    arguments:
      $inlineStrategy: '@Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer'
    calls:
      - setFragmentPath: ["%fragment_path%"]
    tags:
      - { name: kernel.fragment_renderer, alias: "esi" }

  Symfony\Component\HttpKernel\UriSigner:
    arguments:
      - ""

  ACP3\Core\Application\BootstrapCache\Psr6StoreFactory: ~

  http_cache_store:
    class: Toflar\Psr6HttpCacheStore\Psr6Store
    factory: '@ACP3\Core\Application\BootstrapCache\Psr6StoreFactory'

  Symfony\Component\HttpKernel\HttpCache\StoreInterface: "@http_cache_store"

  ACP3\Core\Application\BootstrapCache:
    public: true
    arguments:
      $kernel: "@kernel"
      $options: { debug: "%kernel.debug%" }
